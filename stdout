Thread 0, Frame 0:
vkCreateInstance(pCreateInfo, pAllocator, pInstance) returns VkResult VK_SUCCESS (0):
    pCreateInfo:                    const VkInstanceCreateInfo* = 00000097A053C170:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO (1)
        pNext:                          const void* = NULL
        flags:                          VkInstanceCreateFlags = 0
        pApplicationInfo:               const VkApplicationInfo* = 00000097A053F678:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_APPLICATION_INFO (0)
            pNext:                          const void* = NULL
            pApplicationName:               const char* = "Test Application"
            applicationVersion:             uint32_t = 4194304
            pEngineName:                    const char* = "Etna"
            engineVersion:                  uint32_t = 4194304
            apiVersion:                     uint32_t = 4206592
        enabledLayerCount:              uint32_t = 1
        ppEnabledLayerNames:            const char* const* = 00000097A053F738
            ppEnabledLayerNames[0]:         const char* const = "VK_LAYER_KHRONOS_validation"
        enabledExtensionCount:          uint32_t = 3
        ppEnabledExtensionNames:        const char* const* = 00000240B8E08DC0
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_surface"
            ppEnabledExtensionNames[1]:     const char* const = "VK_KHR_win32_surface"
            ppEnabledExtensionNames[2]:     const char* const = "VK_EXT_debug_utils"
        pNext:                          const void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pInstance:                      VkInstance* = 00000240BB9508C0

Thread 0, Frame 0:
vkCreateDebugUtilsMessengerEXT(instance, pCreateInfo, pAllocator, pMessenger) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 00000240BB9508C0
    pCreateInfo:                    const VkDebugUtilsMessengerCreateInfoEXT* = 00000097A053F818:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT (1000128004)
        pNext:                          const void* = NULL
        flags:                          VkDebugUtilsMessengerCreateFlagsEXT = 0
        messageSeverity:                VkDebugUtilsMessageSeverityFlagsEXT = 4352 (VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT)
        messageType:                    VkDebugUtilsMessageTypeFlagsEXT = 3 (VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT)
        pfnUserCallback:                PFN_vkDebugUtilsMessengerCallbackEXT = 00007FF6FEB91537
        pUserData:                      void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMessenger:                     VkDebugUtilsMessengerEXT* = FD5B260000000001

Thread 0, Frame 0:
vkCreateWin32SurfaceKHR(instance, pCreateInfo, pAllocator, pSurface) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 00000240BB9508C0
    pCreateInfo:                    const VkWin32SurfaceCreateInfoKHR* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR (1000009000)
        pNext:                          const void* = NULL
        flags:                          VkWin32SurfaceCreateFlagsKHR = 0
        hinstance:                      HINSTANCE = 00007FF6FEB90000
        hwnd:                           HWND = 000000000008077A
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSurface:                       VkSurfaceKHR* = FAB64D0000000002

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 00000240BB9508C0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 00000240BB9508C0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = 00000240BB96B400
        pPhysicalDevices[0]:            VkPhysicalDevice = 00000240BB96D650

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 00000240BB9508C0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 00000240BB9508C0
    pPhysicalDeviceCount:           uint32_t* = 1
    pPhysicalDevices:               VkPhysicalDevice* = 00000240BB96B390
        pPhysicalDevices[0]:            VkPhysicalDevice = 00000240BB96D650

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pProperties:                    VkPhysicalDeviceProperties2* = 00000097A053DE70:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:                          void* = NULL
        properties:                     VkPhysicalDeviceProperties = 00000097A053DE80:
            apiVersion:                     uint32_t = 4206863
            driverVersion:                  uint32_t = 2311438336
            vendorID:                       uint32_t = 4318
            deviceID:                       uint32_t = 9351
            deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "NVIDIA GeForce RTX 3060"
            pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 00000097A053DF94
                pipelineCacheUUID[0]:           uint8_t = 190
                pipelineCacheUUID[1]:           uint8_t = 146
                pipelineCacheUUID[2]:           uint8_t = 122
                pipelineCacheUUID[3]:           uint8_t = 238
                pipelineCacheUUID[4]:           uint8_t = 250
                pipelineCacheUUID[5]:           uint8_t = 130
                pipelineCacheUUID[6]:           uint8_t = 254
                pipelineCacheUUID[7]:           uint8_t = 205
                pipelineCacheUUID[8]:           uint8_t = 111
                pipelineCacheUUID[9]:           uint8_t = 19
                pipelineCacheUUID[10]:          uint8_t = 200
                pipelineCacheUUID[11]:          uint8_t = 190
                pipelineCacheUUID[12]:          uint8_t = 131
                pipelineCacheUUID[13]:          uint8_t = 91
                pipelineCacheUUID[14]:          uint8_t = 93
                pipelineCacheUUID[15]:          uint8_t = 75
            limits:                         VkPhysicalDeviceLimits = 00000097A053DFA8:
                maxImageDimension1D:            uint32_t = 32768
                maxImageDimension2D:            uint32_t = 32768
                maxImageDimension3D:            uint32_t = 16384
                maxImageDimensionCube:          uint32_t = 32768
                maxImageArrayLayers:            uint32_t = 2048
                maxTexelBufferElements:         uint32_t = 134217728
                maxUniformBufferRange:          uint32_t = 65536
                maxStorageBufferRange:          uint32_t = 4294967295
                maxPushConstantsSize:           uint32_t = 256
                maxMemoryAllocationCount:       uint32_t = 4096
                maxSamplerAllocationCount:      uint32_t = 4000
                bufferImageGranularity:         VkDeviceSize = 1024
                sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
                maxBoundDescriptorSets:         uint32_t = 32
                maxPerStageDescriptorSamplers:  uint32_t = 1048576
                maxPerStageDescriptorUniformBuffers: uint32_t = 1048576
                maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
                maxPerStageDescriptorSampledImages: uint32_t = 1048576
                maxPerStageDescriptorStorageImages: uint32_t = 1048576
                maxPerStageDescriptorInputAttachments: uint32_t = 1048576
                maxPerStageResources:           uint32_t = 4294967295
                maxDescriptorSetSamplers:       uint32_t = 1048576
                maxDescriptorSetUniformBuffers: uint32_t = 1048576
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
                maxDescriptorSetStorageBuffers: uint32_t = 1048576
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
                maxDescriptorSetSampledImages:  uint32_t = 1048576
                maxDescriptorSetStorageImages:  uint32_t = 1048576
                maxDescriptorSetInputAttachments: uint32_t = 1048576
                maxVertexInputAttributes:       uint32_t = 32
                maxVertexInputBindings:         uint32_t = 32
                maxVertexInputAttributeOffset:  uint32_t = 2047
                maxVertexInputBindingStride:    uint32_t = 2048
                maxVertexOutputComponents:      uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize:       uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4216
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations:   uint32_t = 32
                maxGeometryInputComponents:     uint32_t = 128
                maxGeometryOutputComponents:    uint32_t = 128
                maxGeometryOutputVertices:      uint32_t = 1024
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents:     uint32_t = 128
                maxFragmentOutputAttachments:   uint32_t = 8
                maxFragmentDualSrcAttachments:  uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 4294967295
                maxComputeSharedMemorySize:     uint32_t = 49152
                maxComputeWorkGroupCount:       uint32_t[3] = 00000097A053E084
                    maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                    maxComputeWorkGroupCount[1]:    uint32_t = 65535
                    maxComputeWorkGroupCount[2]:    uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize:        uint32_t[3] = 00000097A053E094
                    maxComputeWorkGroupSize[0]:     uint32_t = 1024
                    maxComputeWorkGroupSize[1]:     uint32_t = 1024
                    maxComputeWorkGroupSize[2]:     uint32_t = 64
                subPixelPrecisionBits:          uint32_t = 8
                subTexelPrecisionBits:          uint32_t = 8
                mipmapPrecisionBits:            uint32_t = 8
                maxDrawIndexedIndexValue:       uint32_t = 4294967295
                maxDrawIndirectCount:           uint32_t = 4294967295
                maxSamplerLodBias:              float = 15
                maxSamplerAnisotropy:           float = 16
                maxViewports:                   uint32_t = 16
                maxViewportDimensions:          uint32_t[2] = 00000097A053E0C0
                    maxViewportDimensions[0]:       uint32_t = 32768
                    maxViewportDimensions[1]:       uint32_t = 32768
                viewportBoundsRange:            float[2] = 00000097A053E0C8
                    viewportBoundsRange[0]:         float = -65536
                    viewportBoundsRange[1]:         float = 65536
                viewportSubPixelBits:           uint32_t = 8
                minMemoryMapAlignment:          size_t = 64
                minTexelBufferOffsetAlignment:  VkDeviceSize = 16
                minUniformBufferOffsetAlignment: VkDeviceSize = 64
                minStorageBufferOffsetAlignment: VkDeviceSize = 16
                minTexelOffset:                 int32_t = -8
                maxTexelOffset:                 uint32_t = 7
                minTexelGatherOffset:           int32_t = -32
                maxTexelGatherOffset:           uint32_t = 31
                minInterpolationOffset:         float = -0.5
                maxInterpolationOffset:         float = 0.4375
                subPixelInterpolationOffsetBits: uint32_t = 4
                maxFramebufferWidth:            uint32_t = 32768
                maxFramebufferHeight:           uint32_t = 32768
                maxFramebufferLayers:           uint32_t = 2048
                framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                maxColorAttachments:            uint32_t = 8
                sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:             uint32_t = 1
                timestampComputeAndGraphics:    VkBool32 = 1
                timestampPeriod:                float = 1
                maxClipDistances:               uint32_t = 8
                maxCullDistances:               uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities:        uint32_t = 2
                pointSizeRange:                 float[2] = 00000097A053E164
                    pointSizeRange[0]:              float = 1
                    pointSizeRange[1]:              float = 2047.94
                lineWidthRange:                 float[2] = 00000097A053E16C
                    lineWidthRange[0]:              float = 1
                    lineWidthRange[1]:              float = 64
                pointSizeGranularity:           float = 0.0625
                lineWidthGranularity:           float = 0.0625
                strictLines:                    VkBool32 = 1
                standardSampleLocations:        VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize:            VkDeviceSize = 64
            sparseProperties:               VkPhysicalDeviceSparseProperties = 00000097A053E1A0:
                residencyStandard2DBlockShape:  VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 1
                residencyStandard3DBlockShape:  VkBool32 = 1
                residencyAlignedMipSize:        VkBool32 = 0
                residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures2(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pFeatures:                      VkPhysicalDeviceFeatures2* = 00000097A053DAE0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
        pNext:                          void* = VkPhysicalDeviceVulkan11Features
        features:                       VkPhysicalDeviceFeatures = 00000097A053DAF0:
            robustBufferAccess:             VkBool32 = 1
            fullDrawIndexUint32:            VkBool32 = 1
            imageCubeArray:                 VkBool32 = 1
            independentBlend:               VkBool32 = 1
            geometryShader:                 VkBool32 = 1
            tessellationShader:             VkBool32 = 1
            sampleRateShading:              VkBool32 = 1
            dualSrcBlend:                   VkBool32 = 1
            logicOp:                        VkBool32 = 1
            multiDrawIndirect:              VkBool32 = 1
            drawIndirectFirstInstance:      VkBool32 = 1
            depthClamp:                     VkBool32 = 1
            depthBiasClamp:                 VkBool32 = 1
            fillModeNonSolid:               VkBool32 = 1
            depthBounds:                    VkBool32 = 1
            wideLines:                      VkBool32 = 1
            largePoints:                    VkBool32 = 1
            alphaToOne:                     VkBool32 = 1
            multiViewport:                  VkBool32 = 1
            samplerAnisotropy:              VkBool32 = 1
            textureCompressionETC2:         VkBool32 = 0
            textureCompressionASTC_LDR:     VkBool32 = 0
            textureCompressionBC:           VkBool32 = 1
            occlusionQueryPrecise:          VkBool32 = 1
            pipelineStatisticsQuery:        VkBool32 = 1
            vertexPipelineStoresAndAtomics: VkBool32 = 1
            fragmentStoresAndAtomics:       VkBool32 = 1
            shaderTessellationAndGeometryPointSize: VkBool32 = 1
            shaderImageGatherExtended:      VkBool32 = 1
            shaderStorageImageExtendedFormats: VkBool32 = 1
            shaderStorageImageMultisample:  VkBool32 = 1
            shaderStorageImageReadWithoutFormat: VkBool32 = 1
            shaderStorageImageWriteWithoutFormat: VkBool32 = 1
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
            shaderClipDistance:             VkBool32 = 1
            shaderCullDistance:             VkBool32 = 1
            shaderFloat64:                  VkBool32 = 1
            shaderInt64:                    VkBool32 = 1
            shaderInt16:                    VkBool32 = 1
            shaderResourceResidency:        VkBool32 = 1
            shaderResourceMinLod:           VkBool32 = 1
            sparseBinding:                  VkBool32 = 1
            sparseResidencyBuffer:          VkBool32 = 1
            sparseResidencyImage2D:         VkBool32 = 1
            sparseResidencyImage3D:         VkBool32 = 1
            sparseResidency2Samples:        VkBool32 = 1
            sparseResidency4Samples:        VkBool32 = 1
            sparseResidency8Samples:        VkBool32 = 1
            sparseResidency16Samples:       VkBool32 = 1
            sparseResidencyAliased:         VkBool32 = 1
            variableMultisampleRate:        VkBool32 = 1
            inheritedQueries:               VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan11Features = 00000097A053DA80:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)
            pNext:                          void* = VkPhysicalDeviceVulkan12Features
            storageBuffer16BitAccess:       VkBool32 = 1
            uniformAndStorageBuffer16BitAccess: VkBool32 = 1
            storagePushConstant16:          VkBool32 = 1
            storageInputOutput16:           VkBool32 = 0
            multiview:                      VkBool32 = 1
            multiviewGeometryShader:        VkBool32 = 1
            multiviewTessellationShader:    VkBool32 = 1
            variablePointersStorageBuffer:  VkBool32 = 1
            variablePointers:               VkBool32 = 1
            protectedMemory:                VkBool32 = 0
            samplerYcbcrConversion:         VkBool32 = 1
            shaderDrawParameters:           VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan12Features = 00000097A053D990:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)
            pNext:                          void* = VkPhysicalDeviceVulkan13Features
            samplerMirrorClampToEdge:       VkBool32 = 1
            drawIndirectCount:              VkBool32 = 1
            storageBuffer8BitAccess:        VkBool32 = 1
            uniformAndStorageBuffer8BitAccess: VkBool32 = 1
            storagePushConstant8:           VkBool32 = 1
            shaderBufferInt64Atomics:       VkBool32 = 1
            shaderSharedInt64Atomics:       VkBool32 = 1
            shaderFloat16:                  VkBool32 = 1
            shaderInt8:                     VkBool32 = 1
            descriptorIndexing:             VkBool32 = 1
            shaderInputAttachmentArrayDynamicIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderUniformBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexing: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingSampledImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUpdateUnusedWhilePending: VkBool32 = 1
            descriptorBindingPartiallyBound: VkBool32 = 1
            descriptorBindingVariableDescriptorCount: VkBool32 = 1
            runtimeDescriptorArray:         VkBool32 = 1
            samplerFilterMinmax:            VkBool32 = 1
            scalarBlockLayout:              VkBool32 = 1
            imagelessFramebuffer:           VkBool32 = 1
            uniformBufferStandardLayout:    VkBool32 = 1
            shaderSubgroupExtendedTypes:    VkBool32 = 1
            separateDepthStencilLayouts:    VkBool32 = 1
            hostQueryReset:                 VkBool32 = 1
            timelineSemaphore:              VkBool32 = 1
            bufferDeviceAddress:            VkBool32 = 1
            bufferDeviceAddressCaptureReplay: VkBool32 = 1
            bufferDeviceAddressMultiDevice: VkBool32 = 1
            vulkanMemoryModel:              VkBool32 = 1
            vulkanMemoryModelDeviceScope:   VkBool32 = 1
            vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = 1
            shaderOutputViewportIndex:      VkBool32 = 1
            shaderOutputLayer:              VkBool32 = 1
            subgroupBroadcastDynamicId:     VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan13Features = 00000097A053D920:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)
            pNext:                          void* = NULL
            robustImageAccess:              VkBool32 = 1
            inlineUniformBlock:             VkBool32 = 1
            descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = 1
            pipelineCreationCacheControl:   VkBool32 = 1
            privateData:                    VkBool32 = 1
            shaderDemoteToHelperInvocation: VkBool32 = 1
            shaderTerminateInvocation:      VkBool32 = 1
            subgroupSizeControl:            VkBool32 = 1
            computeFullSubgroups:           VkBool32 = 1
            synchronization2:               VkBool32 = 1
            textureCompressionASTC_HDR:     VkBool32 = 0
            shaderZeroInitializeWorkgroupMemory: VkBool32 = 1
            dynamicRendering:               VkBool32 = 1
            shaderIntegerDotProduct:        VkBool32 = 1
            maintenance4:                   VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pQueueFamilyPropertyCount:      uint32_t* = 6
    pQueueFamilyProperties:         VkQueueFamilyProperties2* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pQueueFamilyPropertyCount:      uint32_t* = 6
    pQueueFamilyProperties:         VkQueueFamilyProperties2* = 00000240BCB66DD0
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties2 = 00000240BCB66DD0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BCB66DE0:
                queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:                     uint32_t = 16
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BCB66DEC:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties2 = 00000240BCB66DF8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BCB66E08:
                queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:                     uint32_t = 2
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BCB66E14:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties2 = 00000240BCB66E20:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BCB66E30:
                queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:                     uint32_t = 8
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BCB66E3C:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[3]:      VkQueueFamilyProperties2 = 00000240BCB66E48:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BCB66E58:
                queueFlags:                     VkQueueFlags = 44 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_VIDEO_DECODE_BIT_KHR)
                queueCount:                     uint32_t = 1
                timestampValidBits:             uint32_t = 32
                minImageTransferGranularity:    VkExtent3D = 00000240BCB66E64:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[4]:      VkQueueFamilyProperties2 = 00000240BCB66E70:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BCB66E80:
                queueFlags:                     VkQueueFlags = 76 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_VIDEO_ENCODE_BIT_KHR)
                queueCount:                     uint32_t = 1
                timestampValidBits:             uint32_t = 32
                minImageTransferGranularity:    VkExtent3D = 00000240BCB66E8C:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[5]:      VkQueueFamilyProperties2 = 00000240BCB66E98:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BCB66EA8:
                queueFlags:                     VkQueueFlags = 268 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_OPTICAL_FLOW_BIT_NV)
                queueCount:                     uint32_t = 1
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BCB66EB4:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = FAB64D0000000002
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties2(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties2* = 00000097A053E2C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 (1000059006)
        pNext:                          void* = NULL
        memoryProperties:               VkPhysicalDeviceMemoryProperties = 00000097A053E2D0:
            memoryTypeCount:                uint32_t = 6
            memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 00000097A053E2D4
                memoryTypes[0]:                 VkMemoryType = 00000097A053E2D4:
                    propertyFlags:                  VkMemoryPropertyFlags = 0
                    heapIndex:                      uint32_t = 1
                memoryTypes[1]:                 VkMemoryType = 00000097A053E2DC:
                    propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:                      uint32_t = 0
                memoryTypes[2]:                 VkMemoryType = 00000097A053E2E4:
                    propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:                      uint32_t = 0
                memoryTypes[3]:                 VkMemoryType = 00000097A053E2EC:
                    propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:                      uint32_t = 1
                memoryTypes[4]:                 VkMemoryType = 00000097A053E2F4:
                    propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                    heapIndex:                      uint32_t = 1
                memoryTypes[5]:                 VkMemoryType = 00000097A053E2FC:
                    propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:                      uint32_t = 0
            memoryHeapCount:                uint32_t = 2
            memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 00000097A053E3D8
                memoryHeaps[0]:                 VkMemoryHeap = 00000097A053E3D8:
                    size:                           VkDeviceSize = 12698255360
                    flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
                memoryHeaps[1]:                 VkMemoryHeap = 00000097A053E3E8:
                    size:                           VkDeviceSize = 17117802496
                    flags:                          VkMemoryHeapFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pQueueFamilyPropertyCount:      uint32_t* = 6
    pQueueFamilyProperties:         VkQueueFamilyProperties2* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pQueueFamilyPropertyCount:      uint32_t* = 6
    pQueueFamilyProperties:         VkQueueFamilyProperties2* = 00000240BB950390
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties2 = 00000240BB950390:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BB9503A0:
                queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:                     uint32_t = 16
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BB9503AC:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties2 = 00000240BB9503B8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BB9503C8:
                queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:                     uint32_t = 2
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BB9503D4:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties2 = 00000240BB9503E0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BB9503F0:
                queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:                     uint32_t = 8
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BB9503FC:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[3]:      VkQueueFamilyProperties2 = 00000240BB950408:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BB950418:
                queueFlags:                     VkQueueFlags = 44 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_VIDEO_DECODE_BIT_KHR)
                queueCount:                     uint32_t = 1
                timestampValidBits:             uint32_t = 32
                minImageTransferGranularity:    VkExtent3D = 00000240BB950424:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[4]:      VkQueueFamilyProperties2 = 00000240BB950430:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BB950440:
                queueFlags:                     VkQueueFlags = 76 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_VIDEO_ENCODE_BIT_KHR)
                queueCount:                     uint32_t = 1
                timestampValidBits:             uint32_t = 32
                minImageTransferGranularity:    VkExtent3D = 00000240BB95044C:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1
        pQueueFamilyProperties[5]:      VkQueueFamilyProperties2 = 00000240BB950458:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                          void* = NULL
            queueFamilyProperties:          VkQueueFamilyProperties = 00000240BB950468:
                queueFlags:                     VkQueueFlags = 268 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT | VK_QUEUE_OPTICAL_FLOW_BIT_NV)
                queueCount:                     uint32_t = 1
                timestampValidBits:             uint32_t = 64
                minImageTransferGranularity:    VkExtent3D = 00000240BB950474:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, pDevice) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pCreateInfo:                    const VkDeviceCreateInfo* = 00000097A053E080:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO (3)
        pNext:                          const void* = NULL
        flags:                          VkDeviceCreateFlags = 0
        queueCreateInfoCount:           uint32_t = 3
        pQueueCreateInfos:              const VkDeviceQueueCreateInfo* = 00000240B8E344C0
            pQueueCreateInfos[0]:           const VkDeviceQueueCreateInfo = 00000240B8E344C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:                          const void* = NULL
                flags:                          VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:               uint32_t = 0
                queueCount:                     uint32_t = 2
                pQueuePriorities:               const float* = 00000097A053E548
                    pQueuePriorities[0]:            const float = 1
                    pQueuePriorities[1]:            const float = 1
            pQueueCreateInfos[1]:           const VkDeviceQueueCreateInfo = 00000240B8E344E8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:                          const void* = NULL
                flags:                          VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:               uint32_t = 1
                queueCount:                     uint32_t = 1
                pQueuePriorities:               const float* = 00000097A053E548
                    pQueuePriorities[0]:            const float = 1
            pQueueCreateInfos[2]:           const VkDeviceQueueCreateInfo = 00000240B8E34510:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:                          const void* = NULL
                flags:                          VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:               uint32_t = 2
                queueCount:                     uint32_t = 1
                pQueuePriorities:               const float* = 00000097A053E548
                    pQueuePriorities[0]:            const float = 1
        enabledLayerCount:              uint32_t = 0
        ppEnabledLayerNames:            const char* const* = NULL
        enabledExtensionCount:          uint32_t = 1
        ppEnabledExtensionNames:        const char* const* = 00000097A053E238
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_swapchain"
        pEnabledFeatures:               const VkPhysicalDeviceFeatures* = NULL
        pNext:                          VkPhysicalDeviceFeatures2 = 00000097A053E750:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
            pNext:                          void* = VkPhysicalDeviceVulkan11Features
            features:                       VkPhysicalDeviceFeatures = 00000097A053E760:
                robustBufferAccess:             VkBool32 = 0
                fullDrawIndexUint32:            VkBool32 = 0
                imageCubeArray:                 VkBool32 = 0
                independentBlend:               VkBool32 = 0
                geometryShader:                 VkBool32 = 0
                tessellationShader:             VkBool32 = 0
                sampleRateShading:              VkBool32 = 0
                dualSrcBlend:                   VkBool32 = 0
                logicOp:                        VkBool32 = 0
                multiDrawIndirect:              VkBool32 = 1
                drawIndirectFirstInstance:      VkBool32 = 0
                depthClamp:                     VkBool32 = 0
                depthBiasClamp:                 VkBool32 = 0
                fillModeNonSolid:               VkBool32 = 0
                depthBounds:                    VkBool32 = 0
                wideLines:                      VkBool32 = 0
                largePoints:                    VkBool32 = 0
                alphaToOne:                     VkBool32 = 0
                multiViewport:                  VkBool32 = 0
                samplerAnisotropy:              VkBool32 = 1
                textureCompressionETC2:         VkBool32 = 0
                textureCompressionASTC_LDR:     VkBool32 = 0
                textureCompressionBC:           VkBool32 = 0
                occlusionQueryPrecise:          VkBool32 = 0
                pipelineStatisticsQuery:        VkBool32 = 0
                vertexPipelineStoresAndAtomics: VkBool32 = 0
                fragmentStoresAndAtomics:       VkBool32 = 0
                shaderTessellationAndGeometryPointSize: VkBool32 = 0
                shaderImageGatherExtended:      VkBool32 = 0
                shaderStorageImageExtendedFormats: VkBool32 = 0
                shaderStorageImageMultisample:  VkBool32 = 0
                shaderStorageImageReadWithoutFormat: VkBool32 = 0
                shaderStorageImageWriteWithoutFormat: VkBool32 = 0
                shaderUniformBufferArrayDynamicIndexing: VkBool32 = 0
                shaderSampledImageArrayDynamicIndexing: VkBool32 = 0
                shaderStorageBufferArrayDynamicIndexing: VkBool32 = 0
                shaderStorageImageArrayDynamicIndexing: VkBool32 = 0
                shaderClipDistance:             VkBool32 = 0
                shaderCullDistance:             VkBool32 = 0
                shaderFloat64:                  VkBool32 = 0
                shaderInt64:                    VkBool32 = 1
                shaderInt16:                    VkBool32 = 1
                shaderResourceResidency:        VkBool32 = 0
                shaderResourceMinLod:           VkBool32 = 0
                sparseBinding:                  VkBool32 = 0
                sparseResidencyBuffer:          VkBool32 = 0
                sparseResidencyImage2D:         VkBool32 = 0
                sparseResidencyImage3D:         VkBool32 = 0
                sparseResidency2Samples:        VkBool32 = 0
                sparseResidency4Samples:        VkBool32 = 0
                sparseResidency8Samples:        VkBool32 = 0
                sparseResidency16Samples:       VkBool32 = 0
                sparseResidencyAliased:         VkBool32 = 0
                variableMultisampleRate:        VkBool32 = 0
                inheritedQueries:               VkBool32 = 0
        pNext:                          VkPhysicalDeviceVulkan11Features = 00000097A053E6F0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)
            pNext:                          void* = VkPhysicalDeviceVulkan12Features
            storageBuffer16BitAccess:       VkBool32 = 0
            uniformAndStorageBuffer16BitAccess: VkBool32 = 0
            storagePushConstant16:          VkBool32 = 0
            storageInputOutput16:           VkBool32 = 0
            multiview:                      VkBool32 = 0
            multiviewGeometryShader:        VkBool32 = 0
            multiviewTessellationShader:    VkBool32 = 0
            variablePointersStorageBuffer:  VkBool32 = 0
            variablePointers:               VkBool32 = 0
            protectedMemory:                VkBool32 = 0
            samplerYcbcrConversion:         VkBool32 = 0
            shaderDrawParameters:           VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan12Features = 00000097A053E600:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)
            pNext:                          void* = VkPhysicalDeviceVulkan13Features
            samplerMirrorClampToEdge:       VkBool32 = 0
            drawIndirectCount:              VkBool32 = 1
            storageBuffer8BitAccess:        VkBool32 = 0
            uniformAndStorageBuffer8BitAccess: VkBool32 = 0
            storagePushConstant8:           VkBool32 = 0
            shaderBufferInt64Atomics:       VkBool32 = 0
            shaderSharedInt64Atomics:       VkBool32 = 0
            shaderFloat16:                  VkBool32 = 0
            shaderInt8:                     VkBool32 = 0
            descriptorIndexing:             VkBool32 = 1
            shaderInputAttachmentArrayDynamicIndexing: VkBool32 = 0
            shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = 0
            shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = 0
            shaderUniformBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexing: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = 0
            shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = 0
            shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = 0
            descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingSampledImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = 0
            descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = 0
            descriptorBindingUpdateUnusedWhilePending: VkBool32 = 1
            descriptorBindingPartiallyBound: VkBool32 = 1
            descriptorBindingVariableDescriptorCount: VkBool32 = 1
            runtimeDescriptorArray:         VkBool32 = 1
            samplerFilterMinmax:            VkBool32 = 0
            scalarBlockLayout:              VkBool32 = 0
            imagelessFramebuffer:           VkBool32 = 0
            uniformBufferStandardLayout:    VkBool32 = 0
            shaderSubgroupExtendedTypes:    VkBool32 = 0
            separateDepthStencilLayouts:    VkBool32 = 0
            hostQueryReset:                 VkBool32 = 0
            timelineSemaphore:              VkBool32 = 0
            bufferDeviceAddress:            VkBool32 = 1
            bufferDeviceAddressCaptureReplay: VkBool32 = 0
            bufferDeviceAddressMultiDevice: VkBool32 = 0
            vulkanMemoryModel:              VkBool32 = 0
            vulkanMemoryModelDeviceScope:   VkBool32 = 0
            vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = 0
            shaderOutputViewportIndex:      VkBool32 = 0
            shaderOutputLayer:              VkBool32 = 0
            subgroupBroadcastDynamicId:     VkBool32 = 0
        pNext:                          VkPhysicalDeviceVulkan13Features = 00000097A053E590:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)
            pNext:                          void* = NULL
            robustImageAccess:              VkBool32 = 0
            inlineUniformBlock:             VkBool32 = 0
            descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = 0
            pipelineCreationCacheControl:   VkBool32 = 0
            privateData:                    VkBool32 = 0
            shaderDemoteToHelperInvocation: VkBool32 = 0
            shaderTerminateInvocation:      VkBool32 = 0
            subgroupSizeControl:            VkBool32 = 0
            computeFullSubgroups:           VkBool32 = 0
            synchronization2:               VkBool32 = 1
            textureCompressionASTC_HDR:     VkBool32 = 0
            shaderZeroInitializeWorkgroupMemory: VkBool32 = 0
            dynamicRendering:               VkBool32 = 1
            shaderIntegerDotProduct:        VkBool32 = 0
            maintenance4:                   VkBool32 = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDevice:                        VkDevice* = 00000240BCD610F0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 00000240BCD610F0
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 00000240BD1E01F0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 00000240BCD610F0
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 1
    pQueue:                         VkQueue* = 00000240BD32A7E0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 00000240BCD610F0
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 00000240BD1E01F0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 00000240BCD610F0
    queueFamilyIndex:               uint32_t = 1
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 00000240BD482A10

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures2(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pFeatures:                      VkPhysicalDeviceFeatures2* = 00000097A053EAA0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
        pNext:                          void* = VkPhysicalDeviceVulkan11Features
        features:                       VkPhysicalDeviceFeatures = 00000097A053EAB0:
            robustBufferAccess:             VkBool32 = 1
            fullDrawIndexUint32:            VkBool32 = 1
            imageCubeArray:                 VkBool32 = 1
            independentBlend:               VkBool32 = 1
            geometryShader:                 VkBool32 = 1
            tessellationShader:             VkBool32 = 1
            sampleRateShading:              VkBool32 = 1
            dualSrcBlend:                   VkBool32 = 1
            logicOp:                        VkBool32 = 1
            multiDrawIndirect:              VkBool32 = 1
            drawIndirectFirstInstance:      VkBool32 = 1
            depthClamp:                     VkBool32 = 1
            depthBiasClamp:                 VkBool32 = 1
            fillModeNonSolid:               VkBool32 = 1
            depthBounds:                    VkBool32 = 1
            wideLines:                      VkBool32 = 1
            largePoints:                    VkBool32 = 1
            alphaToOne:                     VkBool32 = 1
            multiViewport:                  VkBool32 = 1
            samplerAnisotropy:              VkBool32 = 1
            textureCompressionETC2:         VkBool32 = 0
            textureCompressionASTC_LDR:     VkBool32 = 0
            textureCompressionBC:           VkBool32 = 1
            occlusionQueryPrecise:          VkBool32 = 1
            pipelineStatisticsQuery:        VkBool32 = 1
            vertexPipelineStoresAndAtomics: VkBool32 = 1
            fragmentStoresAndAtomics:       VkBool32 = 1
            shaderTessellationAndGeometryPointSize: VkBool32 = 1
            shaderImageGatherExtended:      VkBool32 = 1
            shaderStorageImageExtendedFormats: VkBool32 = 1
            shaderStorageImageMultisample:  VkBool32 = 1
            shaderStorageImageReadWithoutFormat: VkBool32 = 1
            shaderStorageImageWriteWithoutFormat: VkBool32 = 1
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
            shaderClipDistance:             VkBool32 = 1
            shaderCullDistance:             VkBool32 = 1
            shaderFloat64:                  VkBool32 = 1
            shaderInt64:                    VkBool32 = 1
            shaderInt16:                    VkBool32 = 1
            shaderResourceResidency:        VkBool32 = 1
            shaderResourceMinLod:           VkBool32 = 1
            sparseBinding:                  VkBool32 = 1
            sparseResidencyBuffer:          VkBool32 = 1
            sparseResidencyImage2D:         VkBool32 = 1
            sparseResidencyImage3D:         VkBool32 = 1
            sparseResidency2Samples:        VkBool32 = 1
            sparseResidency4Samples:        VkBool32 = 1
            sparseResidency8Samples:        VkBool32 = 1
            sparseResidency16Samples:       VkBool32 = 1
            sparseResidencyAliased:         VkBool32 = 1
            variableMultisampleRate:        VkBool32 = 1
            inheritedQueries:               VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan11Features = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)
            pNext:                          void* = VkPhysicalDeviceVulkan12Features
            storageBuffer16BitAccess:       VkBool32 = 1
            uniformAndStorageBuffer16BitAccess: VkBool32 = 1
            storagePushConstant16:          VkBool32 = 1
            storageInputOutput16:           VkBool32 = 0
            multiview:                      VkBool32 = 1
            multiviewGeometryShader:        VkBool32 = 1
            multiviewTessellationShader:    VkBool32 = 1
            variablePointersStorageBuffer:  VkBool32 = 1
            variablePointers:               VkBool32 = 1
            protectedMemory:                VkBool32 = 0
            samplerYcbcrConversion:         VkBool32 = 1
            shaderDrawParameters:           VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan12Features = 00000097A053E950:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)
            pNext:                          void* = VkPhysicalDeviceVulkan13Features
            samplerMirrorClampToEdge:       VkBool32 = 1
            drawIndirectCount:              VkBool32 = 1
            storageBuffer8BitAccess:        VkBool32 = 1
            uniformAndStorageBuffer8BitAccess: VkBool32 = 1
            storagePushConstant8:           VkBool32 = 1
            shaderBufferInt64Atomics:       VkBool32 = 1
            shaderSharedInt64Atomics:       VkBool32 = 1
            shaderFloat16:                  VkBool32 = 1
            shaderInt8:                     VkBool32 = 1
            descriptorIndexing:             VkBool32 = 1
            shaderInputAttachmentArrayDynamicIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderUniformBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexing: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingSampledImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUpdateUnusedWhilePending: VkBool32 = 1
            descriptorBindingPartiallyBound: VkBool32 = 1
            descriptorBindingVariableDescriptorCount: VkBool32 = 1
            runtimeDescriptorArray:         VkBool32 = 1
            samplerFilterMinmax:            VkBool32 = 1
            scalarBlockLayout:              VkBool32 = 1
            imagelessFramebuffer:           VkBool32 = 1
            uniformBufferStandardLayout:    VkBool32 = 1
            shaderSubgroupExtendedTypes:    VkBool32 = 1
            separateDepthStencilLayouts:    VkBool32 = 1
            hostQueryReset:                 VkBool32 = 1
            timelineSemaphore:              VkBool32 = 1
            bufferDeviceAddress:            VkBool32 = 1
            bufferDeviceAddressCaptureReplay: VkBool32 = 1
            bufferDeviceAddressMultiDevice: VkBool32 = 1
            vulkanMemoryModel:              VkBool32 = 1
            vulkanMemoryModelDeviceScope:   VkBool32 = 1
            vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = 1
            shaderOutputViewportIndex:      VkBool32 = 1
            shaderOutputLayer:              VkBool32 = 1
            subgroupBroadcastDynamicId:     VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan13Features = 00000097A053E8E0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)
            pNext:                          void* = NULL
            robustImageAccess:              VkBool32 = 1
            inlineUniformBlock:             VkBool32 = 1
            descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = 1
            pipelineCreationCacheControl:   VkBool32 = 1
            privateData:                    VkBool32 = 1
            shaderDemoteToHelperInvocation: VkBool32 = 1
            shaderTerminateInvocation:      VkBool32 = 1
            subgroupSizeControl:            VkBool32 = 1
            computeFullSubgroups:           VkBool32 = 1
            synchronization2:               VkBool32 = 1
            textureCompressionASTC_HDR:     VkBool32 = 0
            shaderZeroInitializeWorkgroupMemory: VkBool32 = 1
            dynamicRendering:               VkBool32 = 1
            shaderIntegerDotProduct:        VkBool32 = 1
            maintenance4:                   VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    pProperties:                    VkPhysicalDeviceProperties2* = 00000097A053F040:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:                          void* = VkPhysicalDeviceVulkan11Properties
        properties:                     VkPhysicalDeviceProperties = 00000097A053F050:
            apiVersion:                     uint32_t = 4206863
            driverVersion:                  uint32_t = 2311438336
            vendorID:                       uint32_t = 4318
            deviceID:                       uint32_t = 9351
            deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "NVIDIA GeForce RTX 3060"
            pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 00000097A053F164
                pipelineCacheUUID[0]:           uint8_t = 190
                pipelineCacheUUID[1]:           uint8_t = 146
                pipelineCacheUUID[2]:           uint8_t = 122
                pipelineCacheUUID[3]:           uint8_t = 238
                pipelineCacheUUID[4]:           uint8_t = 250
                pipelineCacheUUID[5]:           uint8_t = 130
                pipelineCacheUUID[6]:           uint8_t = 254
                pipelineCacheUUID[7]:           uint8_t = 205
                pipelineCacheUUID[8]:           uint8_t = 111
                pipelineCacheUUID[9]:           uint8_t = 19
                pipelineCacheUUID[10]:          uint8_t = 200
                pipelineCacheUUID[11]:          uint8_t = 190
                pipelineCacheUUID[12]:          uint8_t = 131
                pipelineCacheUUID[13]:          uint8_t = 91
                pipelineCacheUUID[14]:          uint8_t = 93
                pipelineCacheUUID[15]:          uint8_t = 75
            limits:                         VkPhysicalDeviceLimits = 00000097A053F178:
                maxImageDimension1D:            uint32_t = 32768
                maxImageDimension2D:            uint32_t = 32768
                maxImageDimension3D:            uint32_t = 16384
                maxImageDimensionCube:          uint32_t = 32768
                maxImageArrayLayers:            uint32_t = 2048
                maxTexelBufferElements:         uint32_t = 134217728
                maxUniformBufferRange:          uint32_t = 65536
                maxStorageBufferRange:          uint32_t = 4294967295
                maxPushConstantsSize:           uint32_t = 256
                maxMemoryAllocationCount:       uint32_t = 4096
                maxSamplerAllocationCount:      uint32_t = 4000
                bufferImageGranularity:         VkDeviceSize = 1024
                sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
                maxBoundDescriptorSets:         uint32_t = 32
                maxPerStageDescriptorSamplers:  uint32_t = 1048576
                maxPerStageDescriptorUniformBuffers: uint32_t = 1048576
                maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
                maxPerStageDescriptorSampledImages: uint32_t = 1048576
                maxPerStageDescriptorStorageImages: uint32_t = 1048576
                maxPerStageDescriptorInputAttachments: uint32_t = 1048576
                maxPerStageResources:           uint32_t = 4294967295
                maxDescriptorSetSamplers:       uint32_t = 1048576
                maxDescriptorSetUniformBuffers: uint32_t = 1048576
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
                maxDescriptorSetStorageBuffers: uint32_t = 1048576
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
                maxDescriptorSetSampledImages:  uint32_t = 1048576
                maxDescriptorSetStorageImages:  uint32_t = 1048576
                maxDescriptorSetInputAttachments: uint32_t = 1048576
                maxVertexInputAttributes:       uint32_t = 32
                maxVertexInputBindings:         uint32_t = 32
                maxVertexInputAttributeOffset:  uint32_t = 2047
                maxVertexInputBindingStride:    uint32_t = 2048
                maxVertexOutputComponents:      uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize:       uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4216
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations:   uint32_t = 32
                maxGeometryInputComponents:     uint32_t = 128
                maxGeometryOutputComponents:    uint32_t = 128
                maxGeometryOutputVertices:      uint32_t = 1024
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents:     uint32_t = 128
                maxFragmentOutputAttachments:   uint32_t = 8
                maxFragmentDualSrcAttachments:  uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 4294967295
                maxComputeSharedMemorySize:     uint32_t = 49152
                maxComputeWorkGroupCount:       uint32_t[3] = 00000097A053F254
                    maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                    maxComputeWorkGroupCount[1]:    uint32_t = 65535
                    maxComputeWorkGroupCount[2]:    uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize:        uint32_t[3] = 00000097A053F264
                    maxComputeWorkGroupSize[0]:     uint32_t = 1024
                    maxComputeWorkGroupSize[1]:     uint32_t = 1024
                    maxComputeWorkGroupSize[2]:     uint32_t = 64
                subPixelPrecisionBits:          uint32_t = 8
                subTexelPrecisionBits:          uint32_t = 8
                mipmapPrecisionBits:            uint32_t = 8
                maxDrawIndexedIndexValue:       uint32_t = 4294967295
                maxDrawIndirectCount:           uint32_t = 4294967295
                maxSamplerLodBias:              float = 15
                maxSamplerAnisotropy:           float = 16
                maxViewports:                   uint32_t = 16
                maxViewportDimensions:          uint32_t[2] = 00000097A053F290
                    maxViewportDimensions[0]:       uint32_t = 32768
                    maxViewportDimensions[1]:       uint32_t = 32768
                viewportBoundsRange:            float[2] = 00000097A053F298
                    viewportBoundsRange[0]:         float = -65536
                    viewportBoundsRange[1]:         float = 65536
                viewportSubPixelBits:           uint32_t = 8
                minMemoryMapAlignment:          size_t = 64
                minTexelBufferOffsetAlignment:  VkDeviceSize = 16
                minUniformBufferOffsetAlignment: VkDeviceSize = 64
                minStorageBufferOffsetAlignment: VkDeviceSize = 16
                minTexelOffset:                 int32_t = -8
                maxTexelOffset:                 uint32_t = 7
                minTexelGatherOffset:           int32_t = -32
                maxTexelGatherOffset:           uint32_t = 31
                minInterpolationOffset:         float = -0.5
                maxInterpolationOffset:         float = 0.4375
                subPixelInterpolationOffsetBits: uint32_t = 4
                maxFramebufferWidth:            uint32_t = 32768
                maxFramebufferHeight:           uint32_t = 32768
                maxFramebufferLayers:           uint32_t = 2048
                framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                maxColorAttachments:            uint32_t = 8
                sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:             uint32_t = 1
                timestampComputeAndGraphics:    VkBool32 = 1
                timestampPeriod:                float = 1
                maxClipDistances:               uint32_t = 8
                maxCullDistances:               uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities:        uint32_t = 2
                pointSizeRange:                 float[2] = 00000097A053F334
                    pointSizeRange[0]:              float = 1
                    pointSizeRange[1]:              float = 2047.94
                lineWidthRange:                 float[2] = 00000097A053F33C
                    lineWidthRange[0]:              float = 1
                    lineWidthRange[1]:              float = 64
                pointSizeGranularity:           float = 0.0625
                lineWidthGranularity:           float = 0.0625
                strictLines:                    VkBool32 = 1
                standardSampleLocations:        VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize:            VkDeviceSize = 64
            sparseProperties:               VkPhysicalDeviceSparseProperties = 00000097A053F370:
                residencyStandard2DBlockShape:  VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 1
                residencyStandard3DBlockShape:  VkBool32 = 1
                residencyAlignedMipSize:        VkBool32 = 0
                residencyNonResidentStrict:     VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan11Properties = 00000097A053EFB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES (50)
            pNext:                          void* = VkPhysicalDeviceVulkan12Properties
            deviceUUID:                     uint8_t[VK_UUID_SIZE] = 00000097A053EFC0
                deviceUUID[0]:                  uint8_t = 247
                deviceUUID[1]:                  uint8_t = 163
                deviceUUID[2]:                  uint8_t = 219
                deviceUUID[3]:                  uint8_t = 22
                deviceUUID[4]:                  uint8_t = 132
                deviceUUID[5]:                  uint8_t = 127
                deviceUUID[6]:                  uint8_t = 156
                deviceUUID[7]:                  uint8_t = 253
                deviceUUID[8]:                  uint8_t = 191
                deviceUUID[9]:                  uint8_t = 107
                deviceUUID[10]:                 uint8_t = 0
                deviceUUID[11]:                 uint8_t = 33
                deviceUUID[12]:                 uint8_t = 217
                deviceUUID[13]:                 uint8_t = 155
                deviceUUID[14]:                 uint8_t = 228
                deviceUUID[15]:                 uint8_t = 238
            driverUUID:                     uint8_t[VK_UUID_SIZE] = 00000097A053EFD0
                driverUUID[0]:                  uint8_t = 13
                driverUUID[1]:                  uint8_t = 243
                driverUUID[2]:                  uint8_t = 238
                driverUUID[3]:                  uint8_t = 147
                driverUUID[4]:                  uint8_t = 47
                driverUUID[5]:                  uint8_t = 26
                driverUUID[6]:                  uint8_t = 91
                driverUUID[7]:                  uint8_t = 150
                driverUUID[8]:                  uint8_t = 140
                driverUUID[9]:                  uint8_t = 167
                driverUUID[10]:                 uint8_t = 217
                driverUUID[11]:                 uint8_t = 99
                driverUUID[12]:                 uint8_t = 59
                driverUUID[13]:                 uint8_t = 11
                driverUUID[14]:                 uint8_t = 7
                driverUUID[15]:                 uint8_t = 150
            deviceLUID:                     uint8_t[VK_LUID_SIZE] = 00000097A053EFE0
                deviceLUID[0]:                  uint8_t = 118
                deviceLUID[1]:                  uint8_t = 175
                deviceLUID[2]:                  uint8_t = 0
                deviceLUID[3]:                  uint8_t = 0
                deviceLUID[4]:                  uint8_t = 0
                deviceLUID[5]:                  uint8_t = 0
                deviceLUID[6]:                  uint8_t = 0
                deviceLUID[7]:                  uint8_t = 0
            deviceNodeMask:                 uint32_t = 1
            deviceLUIDValid:                VkBool32 = 1
            subgroupSize:                   uint32_t = 32
            subgroupSupportedStages:        VkShaderStageFlags = 16383 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_RAYGEN_BIT_KHR | VK_SHADER_STAGE_ANY_HIT_BIT_KHR | VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR | VK_SHADER_STAGE_MISS_BIT_KHR | VK_SHADER_STAGE_INTERSECTION_BIT_KHR | VK_SHADER_STAGE_CALLABLE_BIT_KHR | VK_SHADER_STAGE_TASK_BIT_EXT | VK_SHADER_STAGE_MESH_BIT_EXT)
            subgroupSupportedOperations:    VkSubgroupFeatureFlags = 511 (VK_SUBGROUP_FEATURE_BASIC_BIT | VK_SUBGROUP_FEATURE_VOTE_BIT | VK_SUBGROUP_FEATURE_ARITHMETIC_BIT | VK_SUBGROUP_FEATURE_BALLOT_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT | VK_SUBGROUP_FEATURE_CLUSTERED_BIT | VK_SUBGROUP_FEATURE_QUAD_BIT | VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV)
            subgroupQuadOperationsInAllStages: VkBool32 = 1
            pointClippingBehavior:          VkPointClippingBehavior = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY (1)
            maxMultiviewViewCount:          uint32_t = 32
            maxMultiviewInstanceIndex:      uint32_t = 134217727
            protectedNoFault:               VkBool32 = 0
            maxPerSetDescriptors:           uint32_t = 4294967295
            maxMemoryAllocationSize:        VkDeviceSize = 4292870144
        pNext:                          VkPhysicalDeviceVulkan12Properties = 00000097A053ECB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES (52)
            pNext:                          void* = VkPhysicalDeviceVulkan13Properties
            driverID:                       VkDriverId = VK_DRIVER_ID_NVIDIA_PROPRIETARY (4)
            driverName:                     char[VK_MAX_DRIVER_NAME_SIZE] = "NVIDIA"
            driverInfo:                     char[VK_MAX_DRIVER_INFO_SIZE] = "551.23"
            conformanceVersion:             VkConformanceVersion = 00000097A053EEC4:
                major:                          uint8_t = 1
                minor:                          uint8_t = 3
                subminor:                       uint8_t = 7
                patch:                          uint8_t = 1
            denormBehaviorIndependence:     VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL (1)
            roundingModeIndependence:       VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL (1)
            shaderSignedZeroInfNanPreserveFloat16: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat32: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat64: VkBool32 = 1
            shaderDenormPreserveFloat16:    VkBool32 = 1
            shaderDenormPreserveFloat32:    VkBool32 = 0
            shaderDenormPreserveFloat64:    VkBool32 = 0
            shaderDenormFlushToZeroFloat16: VkBool32 = 0
            shaderDenormFlushToZeroFloat32: VkBool32 = 0
            shaderDenormFlushToZeroFloat64: VkBool32 = 0
            shaderRoundingModeRTEFloat16:   VkBool32 = 1
            shaderRoundingModeRTEFloat32:   VkBool32 = 1
            shaderRoundingModeRTEFloat64:   VkBool32 = 1
            shaderRoundingModeRTZFloat16:   VkBool32 = 0
            shaderRoundingModeRTZFloat32:   VkBool32 = 1
            shaderRoundingModeRTZFloat64:   VkBool32 = 1
            maxUpdateAfterBindDescriptorsInAllPools: uint32_t = 4294967295
            shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = 1
            robustBufferAccessUpdateAfterBind: VkBool32 = 1
            quadDivergentImplicitLod:       VkBool32 = 1
            maxPerStageDescriptorUpdateAfterBindSamplers: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindUniformBuffers: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindSampledImages: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindStorageImages: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindInputAttachments: uint32_t = 1048576
            maxPerStageUpdateAfterBindResources: uint32_t = 4294967295
            maxDescriptorSetUpdateAfterBindSamplers: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindUniformBuffers: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetUpdateAfterBindStorageBuffers: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetUpdateAfterBindSampledImages: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindStorageImages: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindInputAttachments: uint32_t = 1048576
            supportedDepthResolveModes:     VkResolveModeFlags = 15 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_AVERAGE_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            supportedStencilResolveModes:   VkResolveModeFlags = 13 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            independentResolveNone:         VkBool32 = 1
            independentResolve:             VkBool32 = 1
            filterMinmaxSingleComponentFormats: VkBool32 = 1
            filterMinmaxImageComponentMapping: VkBool32 = 1
            maxTimelineSemaphoreValueDifference: uint64_t = 2147483647
            framebufferIntegerColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        pNext:                          VkPhysicalDeviceVulkan13Properties = 00000097A053EBB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES (54)
            pNext:                          void* = NULL
            minSubgroupSize:                uint32_t = 32
            maxSubgroupSize:                uint32_t = 32
            maxComputeWorkgroupSubgroups:   uint32_t = 2097152
            requiredSubgroupSizeStages:     VkShaderStageFlags = 16383 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_RAYGEN_BIT_KHR | VK_SHADER_STAGE_ANY_HIT_BIT_KHR | VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR | VK_SHADER_STAGE_MISS_BIT_KHR | VK_SHADER_STAGE_INTERSECTION_BIT_KHR | VK_SHADER_STAGE_CALLABLE_BIT_KHR | VK_SHADER_STAGE_TASK_BIT_EXT | VK_SHADER_STAGE_MESH_BIT_EXT)
            maxInlineUniformBlockSize:      uint32_t = 256
            maxPerStageDescriptorInlineUniformBlocks: uint32_t = 32
            maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: uint32_t = 32
            maxDescriptorSetInlineUniformBlocks: uint32_t = 32
            maxDescriptorSetUpdateAfterBindInlineUniformBlocks: uint32_t = 32
            maxInlineUniformTotalSize:      uint32_t = 3584
            integerDotProduct8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct8BitSignedAccelerated: VkBool32 = 1
            integerDotProduct8BitMixedSignednessAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedMixedSignednessAccelerated: VkBool32 = 1
            integerDotProduct16BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct16BitSignedAccelerated: VkBool32 = 0
            integerDotProduct16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct32BitSignedAccelerated: VkBool32 = 0
            integerDotProduct32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct64BitSignedAccelerated: VkBool32 = 0
            integerDotProduct64BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating32BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating32BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating64BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating64BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated: VkBool32 = 1
            storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = 16
            storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = 16
            uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            maxBufferSize:                  VkDeviceSize = 1099511562240

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    surface:                        VkSurfaceKHR = FAB64D0000000002
    pSurfaceFormatCount:            uint32_t* = 5
    pSurfaceFormats:                VkSurfaceFormatKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    surface:                        VkSurfaceKHR = FAB64D0000000002
    pSurfaceFormatCount:            uint32_t* = 5
    pSurfaceFormats:                VkSurfaceFormatKHR* = 00000240BD1D96E0
        pSurfaceFormats[0]:             VkSurfaceFormatKHR = 00000240BD1D96E0:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[1]:             VkSurfaceFormatKHR = 00000240BD1D96E8:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[2]:             VkSurfaceFormatKHR = 00000240BD1D96F0:
            format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[3]:             VkSurfaceFormatKHR = 00000240BD1D96F8:
            format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[4]:             VkSurfaceFormatKHR = 00000240BD1D9700:
            format:                         VkFormat = VK_FORMAT_A2B10G10R10_UNORM_PACK32 (64)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    surface:                        VkSurfaceKHR = FAB64D0000000002
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 00000097A053F348:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 00000097A053F350:
            width:                          uint32_t = 1080
            height:                         uint32_t = 720
        minImageExtent:                 VkExtent2D = 00000097A053F358:
            width:                          uint32_t = 1080
            height:                         uint32_t = 720
        maxImageExtent:                 VkExtent2D = 00000097A053F360:
            width:                          uint32_t = 1080
            height:                         uint32_t = 720
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    surface:                        VkSurfaceKHR = FAB64D0000000002
    pPresentModeCount:              uint32_t* = 4
    pPresentModes:                  VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 00000240BB96D650
    surface:                        VkSurfaceKHR = FAB64D0000000002
    pPresentModeCount:              uint32_t* = 4
    pPresentModes:                  VkPresentModeKHR* = 00000240BD40CF70
        pPresentModes[0]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        pPresentModes[1]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR (3)
        pPresentModes[2]:               VkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR (1)
        pPresentModes[3]:               VkPresentModeKHR = VK_PRESENT_MODE_IMMEDIATE_KHR (0)

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSwapchainCreateInfoKHR* = 00000097A053F440:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR (1000001000)
        pNext:                          const void* = NULL
        flags:                          VkSwapchainCreateFlagsKHR = 0
        surface:                        VkSurfaceKHR = FAB64D0000000002
        minImageCount:                  uint32_t = 3
        imageFormat:                    VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        imageColorSpace:                VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:                    VkExtent2D = 00000097A053F46C:
            width:                          uint32_t = 1080
            height:                         uint32_t = 720
        imageArrayLayers:               uint32_t = 1
        imageUsage:                     VkImageUsageFlags = 18 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:               VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        preTransform:                   VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha:                 VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:                    VkPresentModeKHR = VK_PRESENT_MODE_IMMEDIATE_KHR (0)
        clipped:                        VkBool32 = 1
        oldSwapchain:                   VkSwapchainKHR = 0000000000000000
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSwapchain:                     VkSwapchainKHR* = FA21A40000000003

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    swapchain:                      VkSwapchainKHR = FA21A40000000003
    pSwapchainImageCount:           uint32_t* = 3
    pSwapchainImages:               VkImage* = NULL

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    swapchain:                      VkSwapchainKHR = FA21A40000000003
    pSwapchainImageCount:           uint32_t* = 3
    pSwapchainImages:               VkImage* = 00000240BB778430
        pSwapchainImages[0]:            VkImage = F56C9B0000000004
        pSwapchainImages[1]:            VkImage = E7F79A0000000005
        pSwapchainImages[2]:            VkImage = F443490000000006

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053F4F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = F56C9B0000000004
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 00000097A053F518:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_R (3)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_G (4)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_B (5)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_A (6)
        subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = CB3EE80000000007

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 17684680261079400452
        pObjectName:                    const char* = "Swapchain Image"

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 14645398124953075719
        pObjectName:                    const char* = "Swapchain Image View"

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053F4F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = E7F79A0000000005
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 00000097A053F518:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_R (3)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_G (4)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_B (5)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_A (6)
        subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = EAD9370000000008

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 16714997866799562757
        pObjectName:                    const char* = "Swapchain Image"

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16922617547960877064
        pObjectName:                    const char* = "Swapchain Image View"

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053F4F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = F443490000000006
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:                     VkComponentMapping = 00000097A053F518:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_R (3)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_G (4)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_B (5)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_A (6)
        subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = EE647E0000000009

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 17600992033042857990
        pObjectName:                    const char* = "Swapchain Image"

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 17177993417163014153
        pObjectName:                    const char* = "Swapchain Image View"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = CFEF35000000000A

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 14983252759401201674
        pObjectName:                    const char* = "Swapchain semaphore"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = EC4BEC000000000B

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 17026962300948447243
        pObjectName:                    const char* = "Render semaphore"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = E88693000000000C

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 16755241091887792140
        pObjectName:                    const char* = "Swapchain semaphore"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = CAD092000000000D

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 14614341319514914829
        pObjectName:                    const char* = "Render semaphore"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 967DD1000000000E

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 10844053275708227598
        pObjectName:                    const char* = "Swapchain semaphore"

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = E7E6D0000000000F

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_SEMAPHORE (5)
        objectHandle:                   uint64_t = 16710272165823381519
        pObjectName:                    const char* = "Render semaphore"

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053F2B0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R16G16B16A16_SFLOAT (97)
        extent:                         VkExtent3D = 00000097A053F2CC:
            width:                          uint32_t = 1080
            height:                         uint32_t = 720
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 25 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = D5B26F0000000010

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053F368:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = D5B26F0000000010
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053F328:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053F338:
            size:                           VkDeviceSize = 6635520
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053F3C8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 6635520
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 980F360000000011

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053F408
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053F408:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = D5B26F0000000010
            memory:                         VkDeviceMemory = 980F360000000011
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053F450:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = D5B26F0000000010
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R16G16B16A16_SFLOAT (97)
        components:                     VkComponentMapping = 00000097A053F478:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053F488:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = DCC8FD0000000012

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F570:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 15398492121723830288
        pObjectName:                    const char* = "Main render image"

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053F2B0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
        extent:                         VkExtent3D = 00000097A053F2CC:
            width:                          uint32_t = 1080
            height:                         uint32_t = 720
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = D175B40000000013

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053F368:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = D175B40000000013
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053F328:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053F338:
            size:                           VkDeviceSize = 3342336
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053F3C8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 3342336
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 9FDE6B0000000014

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053F408
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053F408:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = D175B40000000013
            memory:                         VkDeviceMemory = 9FDE6B0000000014
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053F450:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = D175B40000000013
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
        components:                     VkComponentMapping = 00000097A053F478:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053F488:
            aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = DD3A8A0000000015

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053F570:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 15093167638295085075
        pObjectName:                    const char* = "Main depth image"

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 00000097A053F4B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 2 (VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = D897D90000000016

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 00000097A053F4E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = D897D90000000016
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 00000240C1DB2C50
        pCommandBuffers[0]:             VkCommandBuffer = 00000240C1DB91B0

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 00000097A053F4B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 2 (VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 84C0580000000017

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 00000097A053F4E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 84C0580000000017
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 00000240C1DB2C58
        pCommandBuffers[0]:             VkCommandBuffer = 00000240C1DBC4E0

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 00000097A053F4B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 2 (VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = D10D270000000018

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 00000097A053F4E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = D10D270000000018
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 00000240C1DB2C60
        pCommandBuffers[0]:             VkCommandBuffer = 00000240C1DC1820

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 00000097A053F528:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 2 (VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 27D60E0000000019

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 00000097A053F558:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 27D60E0000000019
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 00000240BB93E188
        pCommandBuffers[0]:             VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkFenceCreateInfo* = 00000097A053F5C8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 95A125000000001A

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkFenceCreateInfo* = 00000097A053F5C8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = CB1C7C000000001B

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkFenceCreateInfo* = 00000097A053F5C8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 2CFBA2000000001C

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkFenceCreateInfo* = 00000097A053F5C8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 908683000000001D

Thread 0, Frame 0:
vkCreateDescriptorPool(device, pCreateInfo, pAllocator, pDescriptorPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkDescriptorPoolCreateInfo* = 00000097A053F3E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO (33)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorPoolCreateFlags = 0
        maxSets:                        uint32_t = 10
        poolSizeCount:                  uint32_t = 2
        pPoolSizes:                     const VkDescriptorPoolSize* = 00000240BB900C60
            pPoolSizes[0]:                  const VkDescriptorPoolSize = 00000240BB900C60:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
                descriptorCount:                uint32_t = 10
            pPoolSizes[1]:                  const VkDescriptorPoolSize = 00000240BB900C68:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 10
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDescriptorPool:                VkDescriptorPool* = CFCDA0000000001E

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 00000097A053F538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorSetLayoutCreateFlags = 0
        bindingCount:                   uint32_t = 1
        pBindings:                      const VkDescriptorSetLayoutBinding* = 00000240BD1D8210
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 00000240BD1D8210:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = 2E2941000000001F

Thread 0, Frame 0:
vkAllocateDescriptorSets(device, pAllocateInfo, pDescriptorSets) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkDescriptorSetAllocateInfo* = 00000097A053F438:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO (34)
        pNext:                          const void* = NULL
        descriptorPool:                 VkDescriptorPool = CFCDA0000000001E
        descriptorSetCount:             uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 00000097A053F4D8
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 2E2941000000001F
    pDescriptorSets:                VkDescriptorSet* = 00000097A053F478
        pDescriptorSets[0]:             VkDescriptorSet = AB64DE0000000020

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000240BCB61240
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000240BCB61240:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = AB64DE0000000020
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000240BD0AB980
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000240BD0AB980:
                    sampler:                        VkSampler = 0000000000000000
                    imageView:                      VkImageView = DCC8FD0000000012
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 00000097A053F538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorSetLayoutCreateFlags = 0
        bindingCount:                   uint32_t = 1
        pBindings:                      const VkDescriptorSetLayoutBinding* = 00000240BD0AD2D0
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 00000240BD0AD2D0:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 17 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = C4F3070000000021

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 00000097A053F338:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 2944
        pCode:                          const uint32_t* = 00000240C1DD65E0
            pCode[0]:                       const uint32_t = 119734787
            pCode[1]:                       const uint32_t = 67072
            pCode[2]:                       const uint32_t = 524299
            pCode[3]:                       const uint32_t = 77
            pCode[4]:                       const uint32_t = 0
            pCode[5]:                       const uint32_t = 131089
            pCode[6]:                       const uint32_t = 1
            pCode[7]:                       const uint32_t = 131089
            pCode[8]:                       const uint32_t = 50
            pCode[9]:                       const uint32_t = 393227
            pCode[10]:                      const uint32_t = 2
            pCode[11]:                      const uint32_t = 1280527431
            pCode[12]:                      const uint32_t = 1685353262
            pCode[13]:                      const uint32_t = 808793134
            pCode[14]:                      const uint32_t = 0
            pCode[15]:                      const uint32_t = 196622
            pCode[16]:                      const uint32_t = 0
            pCode[17]:                      const uint32_t = 1
            pCode[18]:                      const uint32_t = 524303
            pCode[19]:                      const uint32_t = 5
            pCode[20]:                      const uint32_t = 5
            pCode[21]:                      const uint32_t = 1852399981
            pCode[22]:                      const uint32_t = 0
            pCode[23]:                      const uint32_t = 14
            pCode[24]:                      const uint32_t = 23
            pCode[25]:                      const uint32_t = 31
            pCode[26]:                      const uint32_t = 393232
            pCode[27]:                      const uint32_t = 5
            pCode[28]:                      const uint32_t = 17
            pCode[29]:                      const uint32_t = 16
            pCode[30]:                      const uint32_t = 16
            pCode[31]:                      const uint32_t = 1
            pCode[32]:                      const uint32_t = 1179655
            pCode[33]:                      const uint32_t = 1
            pCode[34]:                      const uint32_t = 1429158467
            pCode[35]:                      const uint32_t = 1936876915
            pCode[36]:                      const uint32_t = 1651462703
            pCode[37]:                      const uint32_t = 796160613
            pCode[38]:                      const uint32_t = 1802724676
            pCode[39]:                      const uint32_t = 795897716
            pCode[40]:                      const uint32_t = 1953719636
            pCode[41]:                      const uint32_t = 1634628677
            pCode[42]:                      const uint32_t = 1936941359
            pCode[43]:                      const uint32_t = 796095589
            pCode[44]:                      const uint32_t = 1684105331
            pCode[45]:                      const uint32_t = 796095077
            pCode[46]:                      const uint32_t = 1684107879
            pCode[47]:                      const uint32_t = 1953391977
            pCode[48]:                      const uint32_t = 1836016430
            pCode[49]:                      const uint32_t = 112
            pCode[50]:                      const uint32_t = 10878979
            pCode[51]:                      const uint32_t = 2
            pCode[52]:                      const uint32_t = 460
            pCode[53]:                      const uint32_t = 1
            pCode[54]:                      const uint32_t = 1919252003
            pCode[55]:                      const uint32_t = 1852795251
            pCode[56]:                      const uint32_t = 808858656
            pCode[57]:                      const uint32_t = 1634470410
            pCode[58]:                      const uint32_t = 1953853305
            pCode[59]:                      const uint32_t = 1668246568
            pCode[60]:                      const uint32_t = 1935633505
            pCode[61]:                      const uint32_t = 1600485993
            pCode[62]:                      const uint32_t = 540876920
            pCode[63]:                      const uint32_t = 539768369
            pCode[64]:                      const uint32_t = 1633906540
            pCode[65]:                      const uint32_t = 1769168748
            pCode[66]:                      const uint32_t = 2036295034
            pCode[67]:                      const uint32_t = 824196384
            pCode[68]:                      const uint32_t = 1763715382
            pCode[69]:                      const uint32_t = 168442734
            pCode[70]:                      const uint32_t = 1870225772
            pCode[71]:                      const uint32_t = 1915253877
            pCode[72]:                      const uint32_t = 828465767
            pCode[73]:                      const uint32_t = 539780662
            pCode[74]:                      const uint32_t = 544499059
            pCode[75]:                      const uint32_t = 741351485
            pCode[76]:                      const uint32_t = 1852400160
            pCode[77]:                      const uint32_t = 1735289188
            pCode[78]:                      const uint32_t = 807419168
            pCode[79]:                      const uint32_t = 1853169705
            pCode[80]:                      const uint32_t = 1919903337
            pCode[81]:                      const uint32_t = 1835606125
            pCode[82]:                      const uint32_t = 845506401
            pCode[83]:                      const uint32_t = 1835606084
            pCode[84]:                      const uint32_t = 996501345
            pCode[85]:                      const uint32_t = 1634470410
            pCode[86]:                      const uint32_t = 1953853305
            pCode[87]:                      const uint32_t = 1937076264
            pCode[88]:                      const uint32_t = 1868783464
            pCode[89]:                      const uint32_t = 1635021678
            pCode[90]:                      const uint32_t = 539587694
            pCode[91]:                      const uint32_t = 1718185589
            pCode[92]:                      const uint32_t = 544043631
            pCode[93]:                      const uint32_t = 1936617315
            pCode[94]:                      const uint32_t = 1953390964
            pCode[95]:                      const uint32_t = 175841395
            pCode[96]:                      const uint32_t = 538976288
            pCode[97]:                      const uint32_t = 878929270
            pCode[98]:                      const uint32_t = 1952539680
            pCode[99]:                      const uint32_t = 171651425
            pCode[100]:                     const uint32_t = 538976288
            pCode[101]:                     const uint32_t = 878929270
            pCode[102]:                     const uint32_t = 1952539680
            pCode[103]:                     const uint32_t = 171651681
            pCode[104]:                     const uint32_t = 538976288
            pCode[105]:                     const uint32_t = 878929270
            pCode[106]:                     const uint32_t = 1952539680
            pCode[107]:                     const uint32_t = 171651937
            pCode[108]:                     const uint32_t = 538976288
            pCode[109]:                     const uint32_t = 878929270
            pCode[110]:                     const uint32_t = 1952539680
            pCode[111]:                     const uint32_t = 171652193
            pCode[112]:                     const uint32_t = 1970282621
            pCode[113]:                     const uint32_t = 1667197043
            pCode[114]:                     const uint32_t = 1953721967
            pCode[115]:                     const uint32_t = 1937010273
            pCode[116]:                     const uint32_t = 1980369467
            pCode[117]:                     const uint32_t = 543451503
            pCode[118]:                     const uint32_t = 1852399981
            pCode[119]:                     const uint32_t = 2065705256
            pCode[120]:                     const uint32_t = 538976266
            pCode[121]:                     const uint32_t = 1702258976
            pCode[122]:                     const uint32_t = 1948267107
            pCode[123]:                     const uint32_t = 1818589285
            pCode[124]:                     const uint32_t = 1869570911
            pCode[125]:                     const uint32_t = 1025533042
            pCode[126]:                     const uint32_t = 1702258976
            pCode[127]:                     const uint32_t = 1730687587
            pCode[128]:                     const uint32_t = 1816616812
            pCode[129]:                     const uint32_t = 1818321519
            pCode[130]:                     const uint32_t = 1870032457
            pCode[131]:                     const uint32_t = 1769234787
            pCode[132]:                     const uint32_t = 1145663087
            pCode[133]:                     const uint32_t = 695826478
            pCode[134]:                     const uint32_t = 537528891
            pCode[135]:                     const uint32_t = 1763713056
            pCode[136]:                     const uint32_t = 845374838
            pCode[137]:                     const uint32_t = 2053731104
            pCode[138]:                     const uint32_t = 540876901
            pCode[139]:                     const uint32_t = 1734438249
            pCode[140]:                     const uint32_t = 2053722981
            pCode[141]:                     const uint32_t = 1835608165
            pCode[142]:                     const uint32_t = 694511457
            pCode[143]:                     const uint32_t = 538970683
            pCode[144]:                     const uint32_t = 1702240288
            pCode[145]:                     const uint32_t = 1948267619
            pCode[146]:                     const uint32_t = 1667199087
            pCode[147]:                     const uint32_t = 1919904879
            pCode[148]:                     const uint32_t = 1881160992
            pCode[149]:                     const uint32_t = 1600680821
            pCode[150]:                     const uint32_t = 1936617315
            pCode[151]:                     const uint32_t = 1953390964
            pCode[152]:                     const uint32_t = 1633955443
            pCode[153]:                     const uint32_t = 993091956
            pCode[154]:                     const uint32_t = 538976266
            pCode[155]:                     const uint32_t = 1667593760
            pCode[156]:                     const uint32_t = 1868701748
            pCode[157]:                     const uint32_t = 1836020852
            pCode[158]:                     const uint32_t = 1819239263
            pCode[159]:                     const uint32_t = 1025536623
            pCode[160]:                     const uint32_t = 1937076256
            pCode[161]:                     const uint32_t = 1868783464
            pCode[162]:                     const uint32_t = 1635021678
            pCode[163]:                     const uint32_t = 779318382
            pCode[164]:                     const uint32_t = 1635017060
            pCode[165]:                     const uint32_t = 168442674
            pCode[166]:                     const uint32_t = 538976288
            pCode[167]:                     const uint32_t = 673212009
            pCode[168]:                     const uint32_t = 1702389108
            pCode[169]:                     const uint32_t = 1868783468
            pCode[170]:                     const uint32_t = 778334831
            pCode[171]:                     const uint32_t = 540811384
            pCode[172]:                     const uint32_t = 1702521203
            pCode[173]:                     const uint32_t = 639662126
            pCode[174]:                     const uint32_t = 1702109222
            pCode[175]:                     const uint32_t = 1600939384
            pCode[176]:                     const uint32_t = 1919905635
            pCode[177]:                     const uint32_t = 544812644
            pCode[178]:                     const uint32_t = 1769152572
            pCode[179]:                     const uint32_t = 2033083770
            pCode[180]:                     const uint32_t = 175841321
            pCode[181]:                     const uint32_t = 538976288
            pCode[182]:                     const uint32_t = 538976288
            pCode[183]:                     const uint32_t = 1634692198
            pCode[184]:                     const uint32_t = 1818370164
            pCode[185]:                     const uint32_t = 543452773
            pCode[186]:                     const uint32_t = 1818632253
            pCode[187]:                     const uint32_t = 678715759
            pCode[188]:                     const uint32_t = 1702389108
            pCode[189]:                     const uint32_t = 1868783468
            pCode[190]:                     const uint32_t = 778334831
            pCode[191]:                     const uint32_t = 674179449
            pCode[192]:                     const uint32_t = 1702521203
            pCode[193]:                     const uint32_t = 992573742
            pCode[194]:                     const uint32_t = 538970634
            pCode[195]:                     const uint32_t = 538976288
            pCode[196]:                     const uint32_t = 1835606048
            pCode[197]:                     const uint32_t = 1399154529
            pCode[198]:                     const uint32_t = 1701998452
            pCode[199]:                     const uint32_t = 1634560296
            pCode[200]:                     const uint32_t = 539780455
            pCode[201]:                     const uint32_t = 1702389108
            pCode[202]:                     const uint32_t = 1868783468
            pCode[203]:                     const uint32_t = 744780399
            pCode[204]:                     const uint32_t = 2020175136
            pCode[205]:                     const uint32_t = 1886352424
            pCode[206]:                     const uint32_t = 1819239263
            pCode[207]:                     const uint32_t = 539783791
            pCode[208]:                     const uint32_t = 1953787746
            pCode[209]:                     const uint32_t = 1667198319
            pCode[210]:                     const uint32_t = 1919904879
            pCode[211]:                     const uint32_t = 1818370092
            pCode[212]:                     const uint32_t = 694447717
            pCode[213]:                     const uint32_t = 537541417
            pCode[214]:                     const uint32_t = 2099257376
            pCode[215]:                     const uint32_t = 32010
            pCode[216]:                     const uint32_t = 262149
            pCode[217]:                     const uint32_t = 5
            pCode[218]:                     const uint32_t = 1852399981
            pCode[219]:                     const uint32_t = 0
            pCode[220]:                     const uint32_t = 327685
            pCode[221]:                     const uint32_t = 10
            pCode[222]:                     const uint32_t = 1702389108
            pCode[223]:                     const uint32_t = 1868783468
            pCode[224]:                     const uint32_t = 6582895
            pCode[225]:                     const uint32_t = 524293
            pCode[226]:                     const uint32_t = 14
            pCode[227]:                     const uint32_t = 1197436007
            pCode[228]:                     const uint32_t = 1633841004
            pCode[229]:                     const uint32_t = 1986939244
            pCode[230]:                     const uint32_t = 1952539503
            pCode[231]:                     const uint32_t = 1231974249
            pCode[232]:                     const uint32_t = 68
            pCode[233]:                     const uint32_t = 262149
            pCode[234]:                     const uint32_t = 19
            pCode[235]:                     const uint32_t = 1702521203
            pCode[236]:                     const uint32_t = 0
            pCode[237]:                     const uint32_t = 262149
            pCode[238]:                     const uint32_t = 23
            pCode[239]:                     const uint32_t = 1734438249
            pCode[240]:                     const uint32_t = 101
            pCode[241]:                     const uint32_t = 327685
            pCode[242]:                     const uint32_t = 28
            pCode[243]:                     const uint32_t = 1601204084
            pCode[244]:                     const uint32_t = 1869377379
            pCode[245]:                     const uint32_t = 114
            pCode[246]:                     const uint32_t = 327685
            pCode[247]:                     const uint32_t = 29
            pCode[248]:                     const uint32_t = 1936617315
            pCode[249]:                     const uint32_t = 1953390964
            pCode[250]:                     const uint32_t = 115
            pCode[251]:                     const uint32_t = 327686
            pCode[252]:                     const uint32_t = 29
            pCode[253]:                     const uint32_t = 0
            pCode[254]:                     const uint32_t = 1635017060
            pCode[255]:                     const uint32_t = 49
            pCode[256]:                     const uint32_t = 327686
            pCode[257]:                     const uint32_t = 29
            pCode[258]:                     const uint32_t = 1
            pCode[259]:                     const uint32_t = 1635017060
            pCode[260]:                     const uint32_t = 50
            pCode[261]:                     const uint32_t = 327686
            pCode[262]:                     const uint32_t = 29
            pCode[263]:                     const uint32_t = 2
            pCode[264]:                     const uint32_t = 1635017060
            pCode[265]:                     const uint32_t = 51
            pCode[266]:                     const uint32_t = 327686
            pCode[267]:                     const uint32_t = 29
            pCode[268]:                     const uint32_t = 3
            pCode[269]:                     const uint32_t = 1635017060
            pCode[270]:                     const uint32_t = 52
            pCode[271]:                     const uint32_t = 393221
            pCode[272]:                     const uint32_t = 31
            pCode[273]:                     const uint32_t = 1752397168
            pCode[274]:                     const uint32_t = 1852793695
            pCode[275]:                     const uint32_t = 1851880563
            pCode[276]:                     const uint32_t = 29556
            pCode[277]:                     const uint32_t = 393221
            pCode[278]:                     const uint32_t = 36
            pCode[279]:                     const uint32_t = 1953787746
            pCode[280]:                     const uint32_t = 1667198319
            pCode[281]:                     const uint32_t = 1919904879
            pCode[282]:                     const uint32_t = 0
            pCode[283]:                     const uint32_t = 262149
            pCode[284]:                     const uint32_t = 60
            pCode[285]:                     const uint32_t = 1852140642
            pCode[286]:                     const uint32_t = 100
            pCode[287]:                     const uint32_t = 393546
            pCode[288]:                     const uint32_t = 1701407843
            pCode[289]:                     const uint32_t = 1981838446
            pCode[290]:                     const uint32_t = 1634430069
            pCode[291]:                     const uint32_t = 808464750
            pCode[292]:                     const uint32_t = 0
            pCode[293]:                     const uint32_t = 393546
            pCode[294]:                     const uint32_t = 1735549300
            pCode[295]:                     const uint32_t = 1697477733
            pCode[296]:                     const uint32_t = 1931507310
            pCode[297]:                     const uint32_t = 1987209584
            pCode[298]:                     const uint32_t = 3550769
            pCode[299]:                     const uint32_t = 459082
            pCode[300]:                     const uint32_t = 1735549300
            pCode[301]:                     const uint32_t = 1697477733
            pCode[302]:                     const uint32_t = 1981838958
            pCode[303]:                     const uint32_t = 1634430069
            pCode[304]:                     const uint32_t = 858665326
            pCode[305]:                     const uint32_t = 0
            pCode[306]:                     const uint32_t = 393546
            pCode[307]:                     const uint32_t = 1920233061
            pCode[308]:                     const uint32_t = 1869622649
            pCode[309]:                     const uint32_t = 544501353
            pCode[310]:                     const uint32_t = 1852399981
            pCode[311]:                     const uint32_t = 0
            pCode[312]:                     const uint32_t = 262215
            pCode[313]:                     const uint32_t = 14
            pCode[314]:                     const uint32_t = 11
            pCode[315]:                     const uint32_t = 28
            pCode[316]:                     const uint32_t = 262215
            pCode[317]:                     const uint32_t = 23
            pCode[318]:                     const uint32_t = 34
            pCode[319]:                     const uint32_t = 0
            pCode[320]:                     const uint32_t = 262215
            pCode[321]:                     const uint32_t = 23
            pCode[322]:                     const uint32_t = 33
            pCode[323]:                     const uint32_t = 0
            pCode[324]:                     const uint32_t = 327752
            pCode[325]:                     const uint32_t = 29
            pCode[326]:                     const uint32_t = 0
            pCode[327]:                     const uint32_t = 35
            pCode[328]:                     const uint32_t = 0
            pCode[329]:                     const uint32_t = 327752
            pCode[330]:                     const uint32_t = 29
            pCode[331]:                     const uint32_t = 1
            pCode[332]:                     const uint32_t = 35
            pCode[333]:                     const uint32_t = 16
            pCode[334]:                     const uint32_t = 327752
            pCode[335]:                     const uint32_t = 29
            pCode[336]:                     const uint32_t = 2
            pCode[337]:                     const uint32_t = 35
            pCode[338]:                     const uint32_t = 32
            pCode[339]:                     const uint32_t = 327752
            pCode[340]:                     const uint32_t = 29
            pCode[341]:                     const uint32_t = 3
            pCode[342]:                     const uint32_t = 35
            pCode[343]:                     const uint32_t = 48
            pCode[344]:                     const uint32_t = 196679
            pCode[345]:                     const uint32_t = 29
            pCode[346]:                     const uint32_t = 2
            pCode[347]:                     const uint32_t = 131091
            pCode[348]:                     const uint32_t = 3
            pCode[349]:                     const uint32_t = 196641
            pCode[350]:                     const uint32_t = 4
            pCode[351]:                     const uint32_t = 3
            pCode[352]:                     const uint32_t = 262165
            pCode[353]:                     const uint32_t = 7
            pCode[354]:                     const uint32_t = 32
            pCode[355]:                     const uint32_t = 1
            pCode[356]:                     const uint32_t = 262167
            pCode[357]:                     const uint32_t = 8
            pCode[358]:                     const uint32_t = 7
            pCode[359]:                     const uint32_t = 2
            pCode[360]:                     const uint32_t = 262176
            pCode[361]:                     const uint32_t = 9
            pCode[362]:                     const uint32_t = 7
            pCode[363]:                     const uint32_t = 8
            pCode[364]:                     const uint32_t = 262165
            pCode[365]:                     const uint32_t = 11
            pCode[366]:                     const uint32_t = 32
            pCode[367]:                     const uint32_t = 0
            pCode[368]:                     const uint32_t = 262167
            pCode[369]:                     const uint32_t = 12
            pCode[370]:                     const uint32_t = 11
            pCode[371]:                     const uint32_t = 3
            pCode[372]:                     const uint32_t = 262176
            pCode[373]:                     const uint32_t = 13
            pCode[374]:                     const uint32_t = 1
            pCode[375]:                     const uint32_t = 12
            pCode[376]:                     const uint32_t = 262203
            pCode[377]:                     const uint32_t = 13
            pCode[378]:                     const uint32_t = 14
            pCode[379]:                     const uint32_t = 1
            pCode[380]:                     const uint32_t = 262167
            pCode[381]:                     const uint32_t = 15
            pCode[382]:                     const uint32_t = 11
            pCode[383]:                     const uint32_t = 2
            pCode[384]:                     const uint32_t = 196630
            pCode[385]:                     const uint32_t = 20
            pCode[386]:                     const uint32_t = 32
            pCode[387]:                     const uint32_t = 589849
            pCode[388]:                     const uint32_t = 21
            pCode[389]:                     const uint32_t = 20
            pCode[390]:                     const uint32_t = 1
            pCode[391]:                     const uint32_t = 0
            pCode[392]:                     const uint32_t = 0
            pCode[393]:                     const uint32_t = 0
            pCode[394]:                     const uint32_t = 2
            pCode[395]:                     const uint32_t = 2
            pCode[396]:                     const uint32_t = 262176
            pCode[397]:                     const uint32_t = 22
            pCode[398]:                     const uint32_t = 0
            pCode[399]:                     const uint32_t = 21
            pCode[400]:                     const uint32_t = 262203
            pCode[401]:                     const uint32_t = 22
            pCode[402]:                     const uint32_t = 23
            pCode[403]:                     const uint32_t = 0
            pCode[404]:                     const uint32_t = 262167
            pCode[405]:                     const uint32_t = 26
            pCode[406]:                     const uint32_t = 20
            pCode[407]:                     const uint32_t = 4
            pCode[408]:                     const uint32_t = 262176
            pCode[409]:                     const uint32_t = 27
            pCode[410]:                     const uint32_t = 7
            pCode[411]:                     const uint32_t = 26
            pCode[412]:                     const uint32_t = 393246
            pCode[413]:                     const uint32_t = 29
            pCode[414]:                     const uint32_t = 26
            pCode[415]:                     const uint32_t = 26
            pCode[416]:                     const uint32_t = 26
            pCode[417]:                     const uint32_t = 26
            pCode[418]:                     const uint32_t = 262176
            pCode[419]:                     const uint32_t = 30
            pCode[420]:                     const uint32_t = 9
            pCode[421]:                     const uint32_t = 29
            pCode[422]:                     const uint32_t = 262203
            pCode[423]:                     const uint32_t = 30
            pCode[424]:                     const uint32_t = 31
            pCode[425]:                     const uint32_t = 9
            pCode[426]:                     const uint32_t = 262187
            pCode[427]:                     const uint32_t = 7
            pCode[428]:                     const uint32_t = 32
            pCode[429]:                     const uint32_t = 0
            pCode[430]:                     const uint32_t = 262176
            pCode[431]:                     const uint32_t = 33
            pCode[432]:                     const uint32_t = 9
            pCode[433]:                     const uint32_t = 26
            pCode[434]:                     const uint32_t = 262187
            pCode[435]:                     const uint32_t = 7
            pCode[436]:                     const uint32_t = 37
            pCode[437]:                     const uint32_t = 1
            pCode[438]:                     const uint32_t = 131092
            pCode[439]:                     const uint32_t = 40
            pCode[440]:                     const uint32_t = 262187
            pCode[441]:                     const uint32_t = 11
            pCode[442]:                     const uint32_t = 41
            pCode[443]:                     const uint32_t = 0
            pCode[444]:                     const uint32_t = 262176
            pCode[445]:                     const uint32_t = 42
            pCode[446]:                     const uint32_t = 7
            pCode[447]:                     const uint32_t = 7
            pCode[448]:                     const uint32_t = 262187
            pCode[449]:                     const uint32_t = 11
            pCode[450]:                     const uint32_t = 50
            pCode[451]:                     const uint32_t = 1
            pCode[452]:                     const uint32_t = 262176
            pCode[453]:                     const uint32_t = 59
            pCode[454]:                     const uint32_t = 7
            pCode[455]:                     const uint32_t = 20
            pCode[456]:                     const uint32_t = 262187
            pCode[457]:                     const uint32_t = 11
            pCode[458]:                     const uint32_t = 75
            pCode[459]:                     const uint32_t = 16
            pCode[460]:                     const uint32_t = 393260
            pCode[461]:                     const uint32_t = 12
            pCode[462]:                     const uint32_t = 76
            pCode[463]:                     const uint32_t = 75
            pCode[464]:                     const uint32_t = 75
            pCode[465]:                     const uint32_t = 50
            pCode[466]:                     const uint32_t = 262152
            pCode[467]:                     const uint32_t = 1
            pCode[468]:                     const uint32_t = 14
            pCode[469]:                     const uint32_t = 11
            pCode[470]:                     const uint32_t = 327734
            pCode[471]:                     const uint32_t = 3
            pCode[472]:                     const uint32_t = 5
            pCode[473]:                     const uint32_t = 0
            pCode[474]:                     const uint32_t = 4
            pCode[475]:                     const uint32_t = 131320
            pCode[476]:                     const uint32_t = 6
            pCode[477]:                     const uint32_t = 262203
            pCode[478]:                     const uint32_t = 9
            pCode[479]:                     const uint32_t = 10
            pCode[480]:                     const uint32_t = 7
            pCode[481]:                     const uint32_t = 262203
            pCode[482]:                     const uint32_t = 9
            pCode[483]:                     const uint32_t = 19
            pCode[484]:                     const uint32_t = 7
            pCode[485]:                     const uint32_t = 262203
            pCode[486]:                     const uint32_t = 27
            pCode[487]:                     const uint32_t = 28
            pCode[488]:                     const uint32_t = 7
            pCode[489]:                     const uint32_t = 262203
            pCode[490]:                     const uint32_t = 27
            pCode[491]:                     const uint32_t = 36
            pCode[492]:                     const uint32_t = 7
            pCode[493]:                     const uint32_t = 262203
            pCode[494]:                     const uint32_t = 59
            pCode[495]:                     const uint32_t = 60
            pCode[496]:                     const uint32_t = 7
            pCode[497]:                     const uint32_t = 262152
            pCode[498]:                     const uint32_t = 1
            pCode[499]:                     const uint32_t = 15
            pCode[500]:                     const uint32_t = 0
            pCode[501]:                     const uint32_t = 262205
            pCode[502]:                     const uint32_t = 12
            pCode[503]:                     const uint32_t = 16
            pCode[504]:                     const uint32_t = 14
            pCode[505]:                     const uint32_t = 458831
            pCode[506]:                     const uint32_t = 15
            pCode[507]:                     const uint32_t = 17
            pCode[508]:                     const uint32_t = 16
            pCode[509]:                     const uint32_t = 16
            pCode[510]:                     const uint32_t = 0
            pCode[511]:                     const uint32_t = 1
            pCode[512]:                     const uint32_t = 262268
            pCode[513]:                     const uint32_t = 8
            pCode[514]:                     const uint32_t = 18
            pCode[515]:                     const uint32_t = 17
            pCode[516]:                     const uint32_t = 196670
            pCode[517]:                     const uint32_t = 10
            pCode[518]:                     const uint32_t = 18
            pCode[519]:                     const uint32_t = 262152
            pCode[520]:                     const uint32_t = 1
            pCode[521]:                     const uint32_t = 17
            pCode[522]:                     const uint32_t = 0
            pCode[523]:                     const uint32_t = 262205
            pCode[524]:                     const uint32_t = 21
            pCode[525]:                     const uint32_t = 24
            pCode[526]:                     const uint32_t = 23
            pCode[527]:                     const uint32_t = 262248
            pCode[528]:                     const uint32_t = 8
            pCode[529]:                     const uint32_t = 25
            pCode[530]:                     const uint32_t = 24
            pCode[531]:                     const uint32_t = 196670
            pCode[532]:                     const uint32_t = 19
            pCode[533]:                     const uint32_t = 25
            pCode[534]:                     const uint32_t = 262152
            pCode[535]:                     const uint32_t = 1
            pCode[536]:                     const uint32_t = 18
            pCode[537]:                     const uint32_t = 0
            pCode[538]:                     const uint32_t = 327745
            pCode[539]:                     const uint32_t = 33
            pCode[540]:                     const uint32_t = 34
            pCode[541]:                     const uint32_t = 31
            pCode[542]:                     const uint32_t = 32
            pCode[543]:                     const uint32_t = 262205
            pCode[544]:                     const uint32_t = 26
            pCode[545]:                     const uint32_t = 35
            pCode[546]:                     const uint32_t = 34
            pCode[547]:                     const uint32_t = 196670
            pCode[548]:                     const uint32_t = 28
            pCode[549]:                     const uint32_t = 35
            pCode[550]:                     const uint32_t = 262152
            pCode[551]:                     const uint32_t = 1
            pCode[552]:                     const uint32_t = 19
            pCode[553]:                     const uint32_t = 0
            pCode[554]:                     const uint32_t = 327745
            pCode[555]:                     const uint32_t = 33
            pCode[556]:                     const uint32_t = 38
            pCode[557]:                     const uint32_t = 31
            pCode[558]:                     const uint32_t = 37
            pCode[559]:                     const uint32_t = 262205
            pCode[560]:                     const uint32_t = 26
            pCode[561]:                     const uint32_t = 39
            pCode[562]:                     const uint32_t = 38
            pCode[563]:                     const uint32_t = 196670
            pCode[564]:                     const uint32_t = 36
            pCode[565]:                     const uint32_t = 39
            pCode[566]:                     const uint32_t = 262152
            pCode[567]:                     const uint32_t = 1
            pCode[568]:                     const uint32_t = 21
            pCode[569]:                     const uint32_t = 0
            pCode[570]:                     const uint32_t = 327745
            pCode[571]:                     const uint32_t = 42
            pCode[572]:                     const uint32_t = 43
            pCode[573]:                     const uint32_t = 10
            pCode[574]:                     const uint32_t = 41
            pCode[575]:                     const uint32_t = 262205
            pCode[576]:                     const uint32_t = 7
            pCode[577]:                     const uint32_t = 44
            pCode[578]:                     const uint32_t = 43
            pCode[579]:                     const uint32_t = 327745
            pCode[580]:                     const uint32_t = 42
            pCode[581]:                     const uint32_t = 45
            pCode[582]:                     const uint32_t = 19
            pCode[583]:                     const uint32_t = 41
            pCode[584]:                     const uint32_t = 262205
            pCode[585]:                     const uint32_t = 7
            pCode[586]:                     const uint32_t = 46
            pCode[587]:                     const uint32_t = 45
            pCode[588]:                     const uint32_t = 327857
            pCode[589]:                     const uint32_t = 40
            pCode[590]:                     const uint32_t = 47
            pCode[591]:                     const uint32_t = 44
            pCode[592]:                     const uint32_t = 46
            pCode[593]:                     const uint32_t = 196855
            pCode[594]:                     const uint32_t = 49
            pCode[595]:                     const uint32_t = 0
            pCode[596]:                     const uint32_t = 262394
            pCode[597]:                     const uint32_t = 47
            pCode[598]:                     const uint32_t = 48
            pCode[599]:                     const uint32_t = 49
            pCode[600]:                     const uint32_t = 131320
            pCode[601]:                     const uint32_t = 48
            pCode[602]:                     const uint32_t = 262152
            pCode[603]:                     const uint32_t = 1
            pCode[604]:                     const uint32_t = 21
            pCode[605]:                     const uint32_t = 0
            pCode[606]:                     const uint32_t = 327745
            pCode[607]:                     const uint32_t = 42
            pCode[608]:                     const uint32_t = 51
            pCode[609]:                     const uint32_t = 10
            pCode[610]:                     const uint32_t = 50
            pCode[611]:                     const uint32_t = 262205
            pCode[612]:                     const uint32_t = 7
            pCode[613]:                     const uint32_t = 52
            pCode[614]:                     const uint32_t = 51
            pCode[615]:                     const uint32_t = 327745
            pCode[616]:                     const uint32_t = 42
            pCode[617]:                     const uint32_t = 53
            pCode[618]:                     const uint32_t = 19
            pCode[619]:                     const uint32_t = 50
            pCode[620]:                     const uint32_t = 262205
            pCode[621]:                     const uint32_t = 7
            pCode[622]:                     const uint32_t = 54
            pCode[623]:                     const uint32_t = 53
            pCode[624]:                     const uint32_t = 327857
            pCode[625]:                     const uint32_t = 40
            pCode[626]:                     const uint32_t = 55
            pCode[627]:                     const uint32_t = 52
            pCode[628]:                     const uint32_t = 54
            pCode[629]:                     const uint32_t = 131321
            pCode[630]:                     const uint32_t = 49
            pCode[631]:                     const uint32_t = 131320
            pCode[632]:                     const uint32_t = 49
            pCode[633]:                     const uint32_t = 458997
            pCode[634]:                     const uint32_t = 40
            pCode[635]:                     const uint32_t = 56
            pCode[636]:                     const uint32_t = 47
            pCode[637]:                     const uint32_t = 6
            pCode[638]:                     const uint32_t = 55
            pCode[639]:                     const uint32_t = 48
            pCode[640]:                     const uint32_t = 196855
            pCode[641]:                     const uint32_t = 58
            pCode[642]:                     const uint32_t = 0
            pCode[643]:                     const uint32_t = 262394
            pCode[644]:                     const uint32_t = 56
            pCode[645]:                     const uint32_t = 57
            pCode[646]:                     const uint32_t = 58
            pCode[647]:                     const uint32_t = 131320
            pCode[648]:                     const uint32_t = 57
            pCode[649]:                     const uint32_t = 262152
            pCode[650]:                     const uint32_t = 1
            pCode[651]:                     const uint32_t = 22
            pCode[652]:                     const uint32_t = 0
            pCode[653]:                     const uint32_t = 327745
            pCode[654]:                     const uint32_t = 42
            pCode[655]:                     const uint32_t = 61
            pCode[656]:                     const uint32_t = 10
            pCode[657]:                     const uint32_t = 50
            pCode[658]:                     const uint32_t = 262205
            pCode[659]:                     const uint32_t = 7
            pCode[660]:                     const uint32_t = 62
            pCode[661]:                     const uint32_t = 61
            pCode[662]:                     const uint32_t = 262255
            pCode[663]:                     const uint32_t = 20
            pCode[664]:                     const uint32_t = 63
            pCode[665]:                     const uint32_t = 62
            pCode[666]:                     const uint32_t = 327745
            pCode[667]:                     const uint32_t = 42
            pCode[668]:                     const uint32_t = 64
            pCode[669]:                     const uint32_t = 19
            pCode[670]:                     const uint32_t = 50
            pCode[671]:                     const uint32_t = 262205
            pCode[672]:                     const uint32_t = 7
            pCode[673]:                     const uint32_t = 65
            pCode[674]:                     const uint32_t = 64
            pCode[675]:                     const uint32_t = 262255
            pCode[676]:                     const uint32_t = 20
            pCode[677]:                     const uint32_t = 66
            pCode[678]:                     const uint32_t = 65
            pCode[679]:                     const uint32_t = 327816
            pCode[680]:                     const uint32_t = 20
            pCode[681]:                     const uint32_t = 67
            pCode[682]:                     const uint32_t = 63
            pCode[683]:                     const uint32_t = 66
            pCode[684]:                     const uint32_t = 196670
            pCode[685]:                     const uint32_t = 60
            pCode[686]:                     const uint32_t = 67
            pCode[687]:                     const uint32_t = 262152
            pCode[688]:                     const uint32_t = 1
            pCode[689]:                     const uint32_t = 24
            pCode[690]:                     const uint32_t = 0
            pCode[691]:                     const uint32_t = 262205
            pCode[692]:                     const uint32_t = 21
            pCode[693]:                     const uint32_t = 68
            pCode[694]:                     const uint32_t = 23
            pCode[695]:                     const uint32_t = 262205
            pCode[696]:                     const uint32_t = 8
            pCode[697]:                     const uint32_t = 69
            pCode[698]:                     const uint32_t = 10
            pCode[699]:                     const uint32_t = 262205
            pCode[700]:                     const uint32_t = 26
            pCode[701]:                     const uint32_t = 70
            pCode[702]:                     const uint32_t = 28
            pCode[703]:                     const uint32_t = 262205
            pCode[704]:                     const uint32_t = 26
            pCode[705]:                     const uint32_t = 71
            pCode[706]:                     const uint32_t = 36
            pCode[707]:                     const uint32_t = 262205
            pCode[708]:                     const uint32_t = 20
            pCode[709]:                     const uint32_t = 72
            pCode[710]:                     const uint32_t = 60
            pCode[711]:                     const uint32_t = 458832
            pCode[712]:                     const uint32_t = 26
            pCode[713]:                     const uint32_t = 73
            pCode[714]:                     const uint32_t = 72
            pCode[715]:                     const uint32_t = 72
            pCode[716]:                     const uint32_t = 72
            pCode[717]:                     const uint32_t = 72
            pCode[718]:                     const uint32_t = 524300
            pCode[719]:                     const uint32_t = 26
            pCode[720]:                     const uint32_t = 74
            pCode[721]:                     const uint32_t = 2
            pCode[722]:                     const uint32_t = 46
            pCode[723]:                     const uint32_t = 70
            pCode[724]:                     const uint32_t = 71
            pCode[725]:                     const uint32_t = 73
            pCode[726]:                     const uint32_t = 262243
            pCode[727]:                     const uint32_t = 68
            pCode[728]:                     const uint32_t = 69
            pCode[729]:                     const uint32_t = 74
            pCode[730]:                     const uint32_t = 131321
            pCode[731]:                     const uint32_t = 58
            pCode[732]:                     const uint32_t = 131320
            pCode[733]:                     const uint32_t = 58
            pCode[734]:                     const uint32_t = 65789
            pCode[735]:                     const uint32_t = 65592
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 301E6C0000000022

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 00000097A053F3E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 00000240BB93E250
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 2E2941000000001F
        pushConstantRangeCount:         uint32_t = 1
        pPushConstantRanges:            const VkPushConstantRange* = 00000097A053F438
            pPushConstantRanges[0]:         const VkPushConstantRange = 00000097A053F438:
                stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
                offset:                         uint32_t = 0
                size:                           uint32_t = 64
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = A7C5450000000023

Thread 0, Frame 0:
vkCreateComputePipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkComputePipelineCreateInfo* = 00000097A053F4C0
        pCreateInfos[0]:                const VkComputePipelineCreateInfo = 00000097A053F4C0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO (29)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stage:                          VkPipelineShaderStageCreateInfo = 00000097A053F4D8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                pNext:                          const void* = NULL
                flags:                          VkPipelineShaderStageCreateFlags = 0
                stage:                          VkShaderStageFlagBits = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
                module:                         VkShaderModule = 301E6C0000000022
                pName:                          const char* = "main"
                pSpecializationInfo:            const VkSpecializationInfo* = NULL
            layout:                         VkPipelineLayout = A7C5450000000023
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 00000240BB93E200
        pPipelines[0]:                  VkPipeline = B991FA0000000024

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053EAF8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 3A6CBB0000000025

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053EB88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 3A6CBB0000000025
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EB48:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EB58:
            size:                           VkDeviceSize = 4
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EC18:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = A2EB680000000026

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053EC58
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053EC58:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 3A6CBB0000000025
            memory:                         VkDeviceMemory = A2EB680000000026
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A2EB680000000026
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240BF730000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A2EB680000000026

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053EA10:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053EA2C:
            width:                          uint32_t = 1
            height:                         uint32_t = 1
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = B097C90000000027

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053EAC8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = B097C90000000027
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EA88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EA98:
            size:                           VkDeviceSize = 512
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EB28:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 512
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 3FBCD60000000028

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053EB68
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053EB68:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = B097C90000000027
            memory:                         VkDeviceMemory = 3FBCD60000000028
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053EBB0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = B097C90000000027
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053EBD8:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053EBE8:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = B9181F0000000029

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053ED08:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B097C90000000027
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053EEB8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 3A6CBB0000000025
        dstImage:                       VkImage = B097C90000000027
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053EE50
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053EE50:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053EE70:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053EE80:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053EE8C:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B097C90000000027
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053ECB0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053ECB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053EC68
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053EC68:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A2EB680000000026
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 3A6CBB0000000025
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053EAF8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = BA7514000000002A

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053EB88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = BA7514000000002A
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EB48:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EB58:
            size:                           VkDeviceSize = 4
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EC18:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 02E2CD000000002B

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053EC58
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053EC58:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = BA7514000000002A
            memory:                         VkDeviceMemory = 02E2CD000000002B
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 02E2CD000000002B
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240BF730000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 02E2CD000000002B

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053EA10:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053EA2C:
            width:                          uint32_t = 1
            height:                         uint32_t = 1
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = B12FB2000000002C

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053EAC8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = B12FB2000000002C
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EA88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EA98:
            size:                           VkDeviceSize = 512
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EB28:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 512
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = A43473000000002D

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053EB68
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053EB68:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = B12FB2000000002C
            memory:                         VkDeviceMemory = A43473000000002D
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053EBB0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = B12FB2000000002C
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053EBD8:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053EBE8:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0980B0000000002E

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053ED08:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B12FB2000000002C
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053EEB8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = BA7514000000002A
        dstImage:                       VkImage = B12FB2000000002C
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053EE50
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053EE50:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053EE70:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053EE80:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053EE8C:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B12FB2000000002C
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053ECB0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053ECB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053EC68
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053EC68:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 02E2CD000000002B
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = BA7514000000002A
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053EAF8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 4B7DF1000000002F

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053EB88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 4B7DF1000000002F
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EB48:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EB58:
            size:                           VkDeviceSize = 4
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EC18:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = A21A4E0000000030

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053EC58
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053EC58:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 4B7DF1000000002F
            memory:                         VkDeviceMemory = A21A4E0000000030
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A21A4E0000000030
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240BF730000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A21A4E0000000030

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053EA10:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053EA2C:
            width:                          uint32_t = 1
            height:                         uint32_t = 1
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 0EA7170000000031

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053EAC8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 0EA7170000000031
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EA88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EA98:
            size:                           VkDeviceSize = 512
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EB28:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 512
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 4FAC1C0000000032

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053EB68
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053EB68:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 0EA7170000000031
            memory:                         VkDeviceMemory = 4FAC1C0000000032
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053EBB0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0EA7170000000031
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053EBD8:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053EBE8:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = A808D50000000033

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053ED08:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 0EA7170000000031
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053EEB8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 4B7DF1000000002F
        dstImage:                       VkImage = 0EA7170000000031
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053EE50
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053EE50:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053EE70:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053EE80:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053EE8C:
                    width:                          uint32_t = 1
                    height:                         uint32_t = 1
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 0EA7170000000031
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053ECB0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053ECB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053EC68
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053EC68:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A21A4E0000000030
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 4B7DF1000000002F
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053EAF8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 1024
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 2B424A0000000034

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053EB88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 2B424A0000000034
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EB48:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EB58:
            size:                           VkDeviceSize = 1024
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EC18:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 1024
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 4295AB0000000035

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053EC58
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053EC58:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 2B424A0000000034
            memory:                         VkDeviceMemory = 4295AB0000000035
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 4295AB0000000035
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 1024
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240BF730000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 4295AB0000000035

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053EA10:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053EA2C:
            width:                          uint32_t = 16
            height:                         uint32_t = 16
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 9638F80000000036

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053EAC8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 9638F80000000036
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053EA88:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053EA98:
            size:                           VkDeviceSize = 1024
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053EB28:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 1024
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 2723BA0000000037

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053EB68
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053EB68:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 9638F80000000036
            memory:                         VkDeviceMemory = 2723BA0000000037
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053EBB0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 9638F80000000036
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053EBD8:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053EBE8:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 59F7450000000038

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053ED08:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 9638F80000000036
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053EEB8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 2B424A0000000034
        dstImage:                       VkImage = 9638F80000000036
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053EE50
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053EE50:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053EE70:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053EE80:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053EE8C:
                    width:                          uint32_t = 16
                    height:                         uint32_t = 16
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053ED00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053EC80
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053EC80:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 9638F80000000036
                subresourceRange:               VkImageSubresourceRange = 00000097A053ECC8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053ECB0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053ECB0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053EC68
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053EC68:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 4295AB0000000035
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 2B424A0000000034
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateSampler(device, pCreateInfo, pAllocator, pSampler) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSamplerCreateInfo* = 00000097A053F550:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO (31)
        pNext:                          const void* = NULL
        flags:                          VkSamplerCreateFlags = 0
        magFilter:                      VkFilter = VK_FILTER_NEAREST (0)
        minFilter:                      VkFilter = VK_FILTER_NEAREST (0)
        mipmapMode:                     VkSamplerMipmapMode = VK_SAMPLER_MIPMAP_MODE_NEAREST (0)
        addressModeU:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeV:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeW:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        mipLodBias:                     float = 0
        anisotropyEnable:               VkBool32 = 0
        maxAnisotropy:                  float = 0
        compareEnable:                  VkBool32 = 0
        compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
        minLod:                         float = 0
        maxLod:                         float = 0
        borderColor:                    VkBorderColor = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK (0)
        unnormalizedCoordinates:        VkBool32 = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSampler:                       VkSampler* = 944A2C0000000039

Thread 0, Frame 0:
vkCreateSampler(device, pCreateInfo, pAllocator, pSampler) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSamplerCreateInfo* = 00000097A053F550:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO (31)
        pNext:                          const void* = NULL
        flags:                          VkSamplerCreateFlags = 0
        magFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        minFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        mipmapMode:                     VkSamplerMipmapMode = VK_SAMPLER_MIPMAP_MODE_NEAREST (0)
        addressModeU:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeV:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeW:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        mipLodBias:                     float = 0
        anisotropyEnable:               VkBool32 = 0
        maxAnisotropy:                  float = 0
        compareEnable:                  VkBool32 = 0
        compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
        minLod:                         float = 0
        maxLod:                         float = 0
        borderColor:                    VkBorderColor = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK (0)
        unnormalizedCoordinates:        VkBool32 = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSampler:                       VkSampler* = 210D07000000003A

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 00000097A053F7A8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 0
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 5EB05E000000003B

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 00000097A053E818:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 0
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 9F9B41000000003C

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 00000097A053EA18:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = VkDescriptorSetLayoutBindingFlagsCreateInfo
        flags:                          VkDescriptorSetLayoutCreateFlags = 2 (VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT)
        bindingCount:                   uint32_t = 8
        pBindings:                      const VkDescriptorSetLayoutBinding* = 00000097A053E940
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 00000097A053E940:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[1]:                   const VkDescriptorSetLayoutBinding = 00000097A053E958:
                binding:                        uint32_t = 1
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[2]:                   const VkDescriptorSetLayoutBinding = 00000097A053E970:
                binding:                        uint32_t = 2
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[3]:                   const VkDescriptorSetLayoutBinding = 00000097A053E988:
                binding:                        uint32_t = 3
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[4]:                   const VkDescriptorSetLayoutBinding = 00000097A053E9A0:
                binding:                        uint32_t = 4
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[5]:                   const VkDescriptorSetLayoutBinding = 00000097A053E9B8:
                binding:                        uint32_t = 5
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[6]:                   const VkDescriptorSetLayoutBinding = 00000097A053E9D0:
                binding:                        uint32_t = 6
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 49 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[7]:                   const VkDescriptorSetLayoutBinding = 00000097A053E9E8:
                binding:                        uint32_t = 7
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
                descriptorCount:                uint32_t = 1048576
                stageFlags:                     VkShaderStageFlags = 17 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT)
                pImmutableSamplers:             const VkSampler* = NULL
        pNext:                          VkDescriptorSetLayoutBindingFlagsCreateInfo = 00000097A053E8F8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO (1000161000)
            pNext:                          const void* = NULL
            bindingCount:                   uint32_t = 8
            pBindingFlags:                  const VkDescriptorBindingFlags* = 00000097A053E8B8
                pBindingFlags[0]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[1]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[2]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[3]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[4]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[5]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[6]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[7]:               const VkDescriptorBindingFlags = 15 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT | VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = 59FFE0000000003D

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT (20)
        objectHandle:                   uint64_t = 6485148279041425469
        pObjectName:                    const char* = "Scene Descriptor Set Layout"

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 00000097A053EB08:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = VkDescriptorSetLayoutBindingFlagsCreateInfo
        flags:                          VkDescriptorSetLayoutCreateFlags = 2 (VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT)
        bindingCount:                   uint32_t = 2
        pBindings:                      const VkDescriptorSetLayoutBinding* = 00000097A053EA58
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 00000097A053EA58:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 17 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[1]:                   const VkDescriptorSetLayoutBinding = 00000097A053EA70:
                binding:                        uint32_t = 1
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 256
                stageFlags:                     VkShaderStageFlags = 17 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_FRAGMENT_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
        pNext:                          VkDescriptorSetLayoutBindingFlagsCreateInfo = 00000097A053EAC8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO (1000161000)
            pNext:                          const void* = NULL
            bindingCount:                   uint32_t = 2
            pBindingFlags:                  const VkDescriptorBindingFlags* = 00000097A053EAA8
                pBindingFlags[0]:               const VkDescriptorBindingFlags = 7 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
                pBindingFlags[1]:               const VkDescriptorBindingFlags = 15 (VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT | VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT | VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT | VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = 5C5283000000003E

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT (20)
        objectHandle:                   uint64_t = 6652523635602882622
        pObjectName:                    const char* = "Material Descriptor Set Layout"

Thread 0, Frame 0:
vkCreateDescriptorPool(device, pCreateInfo, pAllocator, pDescriptorPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkDescriptorPoolCreateInfo* = 00000097A053EB78:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO (33)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorPoolCreateFlags = 2 (VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT)
        maxSets:                        uint32_t = 4
        poolSizeCount:                  uint32_t = 3
        pPoolSizes:                     const VkDescriptorPoolSize* = 00000097A053EB48
            pPoolSizes[0]:                  const VkDescriptorPoolSize = 00000097A053EB48:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
                descriptorCount:                uint32_t = 128
            pPoolSizes[1]:                  const VkDescriptorPoolSize = 00000097A053EB50:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 2048
            pPoolSizes[2]:                  const VkDescriptorPoolSize = 00000097A053EB58:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 28
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDescriptorPool:                VkDescriptorPool* = 808562000000003F

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_DESCRIPTOR_POOL (22)
        objectHandle:                   uint64_t = 9260915960896815167
        pObjectName:                    const char* = "Scene Descriptor Pool"

Thread 0, Frame 0:
vkAllocateDescriptorSets(device, pAllocateInfo, pDescriptorSets) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkDescriptorSetAllocateInfo* = 00000097A053EC18:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO (34)
        pNext:                          const void* = VkDescriptorSetVariableDescriptorCountAllocateInfo
        descriptorPool:                 VkDescriptorPool = 808562000000003F [Scene Descriptor Pool]
        descriptorSetCount:             uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 00000240C1E47060
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 59FFE0000000003D [Scene Descriptor Set Layout]
        pNext:                          VkDescriptorSetVariableDescriptorCountAllocateInfo = 00000097A053EBD8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO (1000161003)
            pNext:                          const void* = NULL
            descriptorSetCount:             uint32_t = 1
            pDescriptorCounts:              const uint32_t* = 00000097A053EBB4
                pDescriptorCounts[0]:           const uint32_t = 128
    pDescriptorSets:                VkDescriptorSet* = 00000240C1E47068
        pDescriptorSets[0]:             VkDescriptorSet = 56C9BD0000000040

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_DESCRIPTOR_SET (23)
        objectHandle:                   uint64_t = 6253737365278294080
        pObjectName:                    const char* = "Scene Descriptor Set"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E5E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 272
        usage:                          VkBufferUsageFlags = 18 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 6612E40000000041

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E678:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 6612E40000000041
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E638:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E648:
            size:                           VkDeviceSize = 320
            alignment:                      VkDeviceSize = 64
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E708:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 320
        memoryTypeIndex:                uint32_t = 5
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 89E60F0000000042

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E748
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E748:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 6612E40000000041
            memory:                         VkDeviceMemory = 89E60F0000000042
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 7355191830100574273
        pObjectName:                    const char* = "Frame Uniforms"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E5E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 131072
        usage:                          VkBufferUsageFlags = 34 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_STORAGE_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 535B660000000043

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E678:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 535B660000000043
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E638:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E648:
            size:                           VkDeviceSize = 131072
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E708:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 131072
        memoryTypeIndex:                uint32_t = 5
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 603CD90000000044

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E748
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E748:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 535B660000000043
            memory:                         VkDeviceMemory = 603CD90000000044
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 6006506678214721603
        pObjectName:                    const char* = "Object Buffer"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E5E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 32
        usage:                          VkBufferUsageFlags = 290 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_STORAGE_BUFFER_BIT | VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 8CC1D80000000045

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E678:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 8CC1D80000000045
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E638:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E648:
            size:                           VkDeviceSize = 32
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E708:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 32
        memoryTypeIndex:                uint32_t = 5
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 4F8A8B0000000046

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E748
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E748:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 8CC1D80000000045
            memory:                         VkDeviceMemory = 4F8A8B0000000046
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 10142625330326667333
        pObjectName:                    const char* = "Count Buffer"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E5E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 64
        usage:                          VkBufferUsageFlags = 288 (VK_BUFFER_USAGE_STORAGE_BUFFER_BIT | VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 69EEAA0000000047

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E678:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 69EEAA0000000047
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E638:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E648:
            size:                           VkDeviceSize = 64
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E708:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 64
        memoryTypeIndex:                uint32_t = 5
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 7323F50000000048

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E748
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E748:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 69EEAA0000000047
            memory:                         VkDeviceMemory = 7323F50000000048
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 7633225335416291399
        pObjectName:                    const char* = "Draws Buffer"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E5E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 524288
        usage:                          VkBufferUsageFlags = 131360 (VK_BUFFER_USAGE_STORAGE_BUFFER_BIT | VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT | VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 40B43C0000000049

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E678:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 40B43C0000000049
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E638:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E648:
            size:                           VkDeviceSize = 524288
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E708:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = VkMemoryAllocateFlagsInfo
        allocationSize:                 VkDeviceSize = 524288
        memoryTypeIndex:                uint32_t = 1
        pNext:                          VkMemoryAllocateFlagsInfo = 00000097A053E6D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO (1000060000)
            pNext:                          const void* = NULL
            flags:                          VkMemoryAllocateFlags = 2 (VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT)
            deviceMask:                     uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 74D977000000004A

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E748
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E748:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 40B43C0000000049
            memory:                         VkDeviceMemory = 74D977000000004A
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkGetBufferDeviceAddress(device, pInfo) returns VkDeviceAddress 229834752:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferDeviceAddressInfo* = 00000097A053E838:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO (1000244001)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 40B43C0000000049

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 4662417484932972617
        pObjectName:                    const char* = "MaterialIndirectDrawCommandBuffer"

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 4
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EEA0
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EEA0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EC58
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EC58:
                    buffer:                         VkBuffer = 6612E40000000041 [Frame Uniforms]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 00000097A053EEE0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 3
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053ECE8
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053ECE8:
                    buffer:                         VkBuffer = 535B660000000043 [Object Buffer]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[2]:           const VkWriteDescriptorSet = 00000097A053EF20:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053ED78
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053ED78:
                    buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[3]:           const VkWriteDescriptorSet = 00000097A053EF60:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 2
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EE08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EE08:
                    buffer:                         VkBuffer = 69EEAA0000000047 [Draws Buffer]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkAllocateDescriptorSets(device, pAllocateInfo, pDescriptorSets) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkDescriptorSetAllocateInfo* = 00000097A053F018:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO (34)
        pNext:                          const void* = VkDescriptorSetVariableDescriptorCountAllocateInfo
        descriptorPool:                 VkDescriptorPool = 808562000000003F [Scene Descriptor Pool]
        descriptorSetCount:             uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 00000240C1E47098
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 5C5283000000003E [Material Descriptor Set Layout]
        pNext:                          VkDescriptorSetVariableDescriptorCountAllocateInfo = 00000097A053EFD8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO (1000161003)
            pNext:                          const void* = NULL
            descriptorSetCount:             uint32_t = 1
            pDescriptorCounts:              const uint32_t* = 00000097A053EFB4
                pDescriptorCounts[0]:           const uint32_t = 256
    pDescriptorSets:                VkDescriptorSet* = 00000240C1E470A0
        pDescriptorSets[0]:             VkDescriptorSet = 67022E000000004B

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_DESCRIPTOR_SET (23)
        objectHandle:                   uint64_t = 7422545713394876491
        pObjectName:                    const char* = "MaterialDescriptorSet"

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053F090
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053F090:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053F058
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053F058:
                    buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 7323F50000000048
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 18446744073709551615
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C4E80000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 7323F50000000048

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 00000097A053E7F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 9280
        pCode:                          const uint32_t* = 00000240C1E72E30
            pCode[0]:                       const uint32_t = 119734787
            pCode[1]:                       const uint32_t = 67072
            pCode[2]:                       const uint32_t = 524299
            pCode[3]:                       const uint32_t = 137
            pCode[4]:                       const uint32_t = 0
            pCode[5]:                       const uint32_t = 131089
            pCode[6]:                       const uint32_t = 1
            pCode[7]:                       const uint32_t = 131089
            pCode[8]:                       const uint32_t = 5302
            pCode[9]:                       const uint32_t = 131089
            pCode[10]:                      const uint32_t = 5347
            pCode[11]:                      const uint32_t = 393227
            pCode[12]:                      const uint32_t = 3
            pCode[13]:                      const uint32_t = 1280527431
            pCode[14]:                      const uint32_t = 1685353262
            pCode[15]:                      const uint32_t = 808793134
            pCode[16]:                      const uint32_t = 0
            pCode[17]:                      const uint32_t = 196622
            pCode[18]:                      const uint32_t = 5348
            pCode[19]:                      const uint32_t = 1
            pCode[20]:                      const uint32_t = 917519
            pCode[21]:                      const uint32_t = 5
            pCode[22]:                      const uint32_t = 6
            pCode[23]:                      const uint32_t = 1852399981
            pCode[24]:                      const uint32_t = 0
            pCode[25]:                      const uint32_t = 13
            pCode[26]:                      const uint32_t = 24
            pCode[27]:                      const uint32_t = 42
            pCode[28]:                      const uint32_t = 56
            pCode[29]:                      const uint32_t = 95
            pCode[30]:                      const uint32_t = 109
            pCode[31]:                      const uint32_t = 125
            pCode[32]:                      const uint32_t = 129
            pCode[33]:                      const uint32_t = 134
            pCode[34]:                      const uint32_t = 393232
            pCode[35]:                      const uint32_t = 6
            pCode[36]:                      const uint32_t = 17
            pCode[37]:                      const uint32_t = 32
            pCode[38]:                      const uint32_t = 1
            pCode[39]:                      const uint32_t = 1
            pCode[40]:                      const uint32_t = 1245191
            pCode[41]:                      const uint32_t = 1
            pCode[42]:                      const uint32_t = 1429158467
            pCode[43]:                      const uint32_t = 1936876915
            pCode[44]:                      const uint32_t = 1651462703
            pCode[45]:                      const uint32_t = 796160613
            pCode[46]:                      const uint32_t = 1802724676
            pCode[47]:                      const uint32_t = 795897716
            pCode[48]:                      const uint32_t = 1953719636
            pCode[49]:                      const uint32_t = 1634628677
            pCode[50]:                      const uint32_t = 1936941359
            pCode[51]:                      const uint32_t = 796095589
            pCode[52]:                      const uint32_t = 1684105331
            pCode[53]:                      const uint32_t = 796095077
            pCode[54]:                      const uint32_t = 2002874980
            pCode[55]:                      const uint32_t = 1701994355
            pCode[56]:                      const uint32_t = 1952670054
            pCode[57]:                      const uint32_t = 1663988335
            pCode[58]:                      const uint32_t = 7368047
            pCode[59]:                      const uint32_t = 1441799
            pCode[60]:                      const uint32_t = 2
            pCode[61]:                      const uint32_t = 1429158467
            pCode[62]:                      const uint32_t = 1936876915
            pCode[63]:                      const uint32_t = 1651462703
            pCode[64]:                      const uint32_t = 796160613
            pCode[65]:                      const uint32_t = 1802724676
            pCode[66]:                      const uint32_t = 795897716
            pCode[67]:                      const uint32_t = 1953719636
            pCode[68]:                      const uint32_t = 1634628677
            pCode[69]:                      const uint32_t = 1936941359
            pCode[70]:                      const uint32_t = 796095589
            pCode[71]:                      const uint32_t = 1684105331
            pCode[72]:                      const uint32_t = 796095077
            pCode[73]:                      const uint32_t = 1970302569
            pCode[74]:                      const uint32_t = 1953718132
            pCode[75]:                      const uint32_t = 1952675186
            pCode[76]:                      const uint32_t = 1936028277
            pCode[77]:                      const uint32_t = 1717924447
            pCode[78]:                      const uint32_t = 1869898593
            pCode[79]:                      const uint32_t = 1818701426
            pCode[80]:                      const uint32_t = 27763
            pCode[81]:                      const uint32_t = 14090243
            pCode[82]:                      const uint32_t = 2
            pCode[83]:                      const uint32_t = 460
            pCode[84]:                      const uint32_t = 1
            pCode[85]:                      const uint32_t = 1919252003
            pCode[86]:                      const uint32_t = 1852795251
            pCode[87]:                      const uint32_t = 808858656
            pCode[88]:                      const uint32_t = 2019894026
            pCode[89]:                      const uint32_t = 1936614772
            pCode[90]:                      const uint32_t = 544108393
            pCode[91]:                      const uint32_t = 1197427783
            pCode[92]:                      const uint32_t = 1279741775
            pCode[93]:                      const uint32_t = 1852399429
            pCode[94]:                      const uint32_t = 1685417059
            pCode[95]:                      const uint32_t = 1768185701
            pCode[96]:                      const uint32_t = 1952671090
            pCode[97]:                      const uint32_t = 543520361
            pCode[98]:                      const uint32_t = 1701978170
            pCode[99]:                      const uint32_t = 1919513969
            pCode[100]:                     const uint32_t = 587860581
            pCode[101]:                     const uint32_t = 1818455657
            pCode[102]:                     const uint32_t = 543515765
            pCode[103]:                     const uint32_t = 1886284066
            pCode[104]:                     const uint32_t = 1935635573
            pCode[105]:                     const uint32_t = 1668641396
            pCode[106]:                     const uint32_t = 1701999988
            pCode[107]:                     const uint32_t = 1701994355
            pCode[108]:                     const uint32_t = 1952670054
            pCode[109]:                     const uint32_t = 1731097199
            pCode[110]:                     const uint32_t = 577532780
            pCode[111]:                     const uint32_t = 1680017930
            pCode[112]:                     const uint32_t = 1852401253
            pCode[113]:                     const uint32_t = 1431511141
            pCode[114]:                     const uint32_t = 1330792258
            pCode[115]:                     const uint32_t = 1398755413
            pCode[116]:                     const uint32_t = 541416009
            pCode[117]:                     const uint32_t = 1812607539
            pCode[118]:                     const uint32_t = 1970239841
            pCode[119]:                     const uint32_t = 1869359220
            pCode[120]:                     const uint32_t = 1600938339
            pCode[121]:                     const uint32_t = 1702521203
            pCode[122]:                     const uint32_t = 1025538143
            pCode[123]:                     const uint32_t = 1112888096
            pCode[124]:                     const uint32_t = 1431261767
            pCode[125]:                     const uint32_t = 1230200656
            pCode[126]:                     const uint32_t = 539575642
            pCode[127]:                     const uint32_t = 171667049
            pCode[128]:                     const uint32_t = 1870225772
            pCode[129]:                     const uint32_t = 1814590581
            pCode[130]:                     const uint32_t = 1818321775
            pCode[131]:                     const uint32_t = 2053731167
            pCode[132]:                     const uint32_t = 544825189
            pCode[133]:                     const uint32_t = 691085373
            pCode[134]:                     const uint32_t = 997091616
            pCode[135]:                     const uint32_t = 2036427786
            pCode[136]:                     const uint32_t = 678720879
            pCode[137]:                     const uint32_t = 1633906540
            pCode[138]:                     const uint32_t = 1769168748
            pCode[139]:                     const uint32_t = 2053072250
            pCode[140]:                     const uint32_t = 824196384
            pCode[141]:                     const uint32_t = 1852383273
            pCode[142]:                     const uint32_t = 789187131
            pCode[143]:                     const uint32_t = 1866670127
            pCode[144]:                     const uint32_t = 1953853549
            pCode[145]:                     const uint32_t = 1752375397
            pCode[146]:                     const uint32_t = 1919247457
            pCode[147]:                     const uint32_t = 1634886688
            pCode[148]:                     const uint32_t = 1633886327
            pCode[149]:                     const uint32_t = 1663069292
            pCode[150]:                     const uint32_t = 1634561391
            pCode[151]:                     const uint32_t = 1730176110
            pCode[152]:                     const uint32_t = 1919250021
            pCode[153]:                     const uint32_t = 1869182049
            pCode[154]:                     const uint32_t = 169881198
            pCode[155]:                     const uint32_t = 1684631414
            pCode[156]:                     const uint32_t = 1767992608
            pCode[157]:                     const uint32_t = 539568238
            pCode[158]:                     const uint32_t = 1963526779
            pCode[159]:                     const uint32_t = 544501353
            pCode[160]:                     const uint32_t = 541346151
            pCode[161]:                     const uint32_t = 1818697789
            pCode[162]:                     const uint32_t = 1869367135
            pCode[163]:                     const uint32_t = 1231839586
            pCode[164]:                     const uint32_t = 1668249198
            pCode[165]:                     const uint32_t = 1869182049
            pCode[166]:                     const uint32_t = 776227182
            pCode[167]:                     const uint32_t = 151665528
            pCode[168]:                     const uint32_t = 673212009
            pCode[169]:                     const uint32_t = 541346151
            pCode[170]:                     const uint32_t = 1713388862
            pCode[171]:                     const uint32_t = 1701667186
            pCode[172]:                     const uint32_t = 1952539743
            pCode[173]:                     const uint32_t = 1634545249
            pCode[174]:                     const uint32_t = 1919180664
            pCode[175]:                     const uint32_t = 1667200865
            pCode[176]:                     const uint32_t = 1953396079
            pCode[177]:                     const uint32_t = 175841321
            pCode[178]:                     const uint32_t = 1701972233
            pCode[179]:                     const uint32_t = 1852994932
            pCode[180]:                     const uint32_t = 2097744443
            pCode[181]:                     const uint32_t = 1651443978
            pCode[182]:                     const uint32_t = 1952671082
            pCode[183]:                     const uint32_t = 1784835872
            pCode[184]:                     const uint32_t = 1864383776
            pCode[185]:                     const uint32_t = 1667590754
            pCode[186]:                     const uint32_t = 1734046580
            pCode[187]:                     const uint32_t = 995968073
            pCode[188]:                     const uint32_t = 538976266
            pCode[189]:                     const uint32_t = 1868916512
            pCode[190]:                     const uint32_t = 1920230765
            pCode[191]:                     const uint32_t = 1701257337
            pCode[192]:                     const uint32_t = 540876911
            pCode[193]:                     const uint32_t = 1836016999
            pCode[194]:                     const uint32_t = 1769108581
            pCode[195]:                     const uint32_t = 1868264293
            pCode[196]:                     const uint32_t = 1731095138
            pCode[197]:                     const uint32_t = 1767862117
            pCode[198]:                     const uint32_t = 171662692
            pCode[199]:                     const uint32_t = 1634886665
            pCode[200]:                     const uint32_t = 1868783479
            pCode[201]:                     const uint32_t = 1851878765
            pCode[202]:                     const uint32_t = 1868767332
            pCode[203]:                     const uint32_t = 1851878765
            pCode[204]:                     const uint32_t = 151665508
            pCode[205]:                     const uint32_t = 1835888483
            pCode[206]:                     const uint32_t = 778333793
            pCode[207]:                     const uint32_t = 1701080681
            pCode[208]:                     const uint32_t = 1868783480
            pCode[209]:                     const uint32_t = 544501365
            pCode[210]:                     const uint32_t = 1701257277
            pCode[211]:                     const uint32_t = 1852386927
            pCode[212]:                     const uint32_t = 1601725796
            pCode[213]:                     const uint32_t = 1853189987
            pCode[214]:                     const uint32_t = 151665524
            pCode[215]:                     const uint32_t = 1835888483
            pCode[216]:                     const uint32_t = 778333793
            pCode[217]:                     const uint32_t = 1953721961
            pCode[218]:                     const uint32_t = 1701015137
            pCode[219]:                     const uint32_t = 1970234207
            pCode[220]:                     const uint32_t = 1025537134
            pCode[221]:                     const uint32_t = 171651360
            pCode[222]:                     const uint32_t = 1836016393
            pCode[223]:                     const uint32_t = 1684955501
            pCode[224]:                     const uint32_t = 1919510062
            pCode[225]:                     const uint32_t = 1767863411
            pCode[226]:                     const uint32_t = 2019910766
            pCode[227]:                     const uint32_t = 1730166048
            pCode[228]:                     const uint32_t = 1932423013
            pCode[229]:                     const uint32_t = 1953653108
            pCode[230]:                     const uint32_t = 1684957535
            pCode[231]:                     const uint32_t = 171669605
            pCode[232]:                     const uint32_t = 1836016393
            pCode[233]:                     const uint32_t = 1684955501
            pCode[234]:                     const uint32_t = 1919252014
            pCode[235]:                     const uint32_t = 1601725812
            pCode[236]:                     const uint32_t = 1936090735
            pCode[237]:                     const uint32_t = 1025537125
            pCode[238]:                     const uint32_t = 1868916512
            pCode[239]:                     const uint32_t = 1919252014
            pCode[240]:                     const uint32_t = 1601725812
            pCode[241]:                     const uint32_t = 1936090735
            pCode[242]:                     const uint32_t = 171668581
            pCode[243]:                     const uint32_t = 1836016393
            pCode[244]:                     const uint32_t = 1684955501
            pCode[245]:                     const uint32_t = 1919510062
            pCode[246]:                     const uint32_t = 1767863411
            pCode[247]:                     const uint32_t = 1635021678
            pCode[248]:                     const uint32_t = 543515502
            pCode[249]:                     const uint32_t = 993009725
            pCode[250]:                     const uint32_t = 1868761354
            pCode[251]:                     const uint32_t = 1851878765
            pCode[252]:                     const uint32_t = 1634545252
            pCode[253]:                     const uint32_t = 1769104756
            pCode[254]:                     const uint32_t = 1767861345
            pCode[255]:                     const uint32_t = 540876900
            pCode[256]:                     const uint32_t = 778723951
            pCode[257]:                     const uint32_t = 1601462637
            pCode[258]:                     const uint32_t = 171664489
            pCode[259]:                     const uint32_t = 1836016393
            pCode[260]:                     const uint32_t = 1684955501
            pCode[261]:                     const uint32_t = 1634890798
            pCode[262]:                     const uint32_t = 1868985198
            pCode[263]:                     const uint32_t = 1767861618
            pCode[264]:                     const uint32_t = 540876900
            pCode[265]:                     const uint32_t = 778723951
            pCode[266]:                     const uint32_t = 1851880052
            pCode[267]:                     const uint32_t = 1919903347
            pCode[268]:                     const uint32_t = 1684627309
            pCode[269]:                     const uint32_t = 151652923
            pCode[270]:                     const uint32_t = 1953393013
            pCode[271]:                     const uint32_t = 1634886688
            pCode[272]:                     const uint32_t = 1684627319
            pCode[273]:                     const uint32_t = 1629502752
            pCode[274]:                     const uint32_t = 1768779636
            pCode[275]:                     const uint32_t = 1684291939
            pCode[276]:                     const uint32_t = 1970234152
            pCode[277]:                     const uint32_t = 1534293102
            pCode[278]:                     const uint32_t = 778723951
            pCode[279]:                     const uint32_t = 1601139568
            pCode[280]:                     const uint32_t = 744318057
            pCode[281]:                     const uint32_t = 992555296
            pCode[282]:                     const uint32_t = 1919158538
            pCode[283]:                     const uint32_t = 1650423649
            pCode[284]:                     const uint32_t = 1701209717
            pCode[285]:                     const uint32_t = 1868264306
            pCode[286]:                     const uint32_t = 1882090082
            pCode[287]:                     const uint32_t = 1767862131
            pCode[288]:                     const uint32_t = 1680760164
            pCode[289]:                     const uint32_t = 1937203570
            pCode[290]:                     const uint32_t = 1634886747
            pCode[291]:                     const uint32_t = 1684627319
            pCode[292]:                     const uint32_t = 540876893
            pCode[293]:                     const uint32_t = 1835888483
            pCode[294]:                     const uint32_t = 996437601
            pCode[295]:                     const uint32_t = 32010
            pCode[296]:                     const uint32_t = 31195139
            pCode[297]:                     const uint32_t = 2
            pCode[298]:                     const uint32_t = 460
            pCode[299]:                     const uint32_t = 2
            pCode[300]:                     const uint32_t = 1954047267
            pCode[301]:                     const uint32_t = 1769172581
            pCode[302]:                     const uint32_t = 1193307759
            pCode[303]:                     const uint32_t = 1480941388
            pCode[304]:                     const uint32_t = 1969381204
            pCode[305]:                     const uint32_t = 1919247974
            pCode[306]:                     const uint32_t = 1717924447
            pCode[307]:                     const uint32_t = 1852142181
            pCode[308]:                     const uint32_t = 975201635
            pCode[309]:                     const uint32_t = 1902473760
            pCode[310]:                     const uint32_t = 1701996917
            pCode[311]:                     const uint32_t = 1696795149
            pCode[312]:                     const uint32_t = 1852142712
            pCode[313]:                     const uint32_t = 1852795251
            pCode[314]:                     const uint32_t = 1598834464
            pCode[315]:                     const uint32_t = 1599363141
            pCode[316]:                     const uint32_t = 1717990754
            pCode[317]:                     const uint32_t = 1918857829
            pCode[318]:                     const uint32_t = 1919247973
            pCode[319]:                     const uint32_t = 1701015141
            pCode[320]:                     const uint32_t = 540680242
            pCode[321]:                     const uint32_t = 1970365810
            pCode[322]:                     const uint32_t = 224752233
            pCode[323]:                     const uint32_t = 2019894026
            pCode[324]:                     const uint32_t = 1936614772
            pCode[325]:                     const uint32_t = 544108393
            pCode[326]:                     const uint32_t = 1163873351
            pCode[327]:                     const uint32_t = 1851741272
            pCode[328]:                     const uint32_t = 1853189743
            pCode[329]:                     const uint32_t = 1919903337
            pCode[330]:                     const uint32_t = 1970364269
            pCode[331]:                     const uint32_t = 1718185057
            pCode[332]:                     const uint32_t = 544367977
            pCode[333]:                     const uint32_t = 1701978170
            pCode[334]:                     const uint32_t = 1919513969
            pCode[335]:                     const uint32_t = 218762597
            pCode[336]:                     const uint32_t = 539963146
            pCode[337]:                     const uint32_t = 1717990722
            pCode[338]:                     const uint32_t = 1948283493
            pCode[339]:                     const uint32_t = 1701978223
            pCode[340]:                     const uint32_t = 1685221219
            pCode[341]:                     const uint32_t = 1970234144
            pCode[342]:                     const uint32_t = 544437358
            pCode[343]:                     const uint32_t = 544367984
            pCode[344]:                     const uint32_t = 1701865840
            pCode[345]:                     const uint32_t = 1701734764
            pCode[346]:                     const uint32_t = 1634235168
            pCode[347]:                     const uint32_t = 544367972
            pCode[348]:                     const uint32_t = 1701470831
            pCode[349]:                     const uint32_t = 168653923
            pCode[350]:                     const uint32_t = 1870225772
            pCode[351]:                     const uint32_t = 1932031093
            pCode[352]:                     const uint32_t = 1025537125
            pCode[353]:                     const uint32_t = 539766816
            pCode[354]:                     const uint32_t = 1684957538
            pCode[355]:                     const uint32_t = 543649385
            pCode[356]:                     const uint32_t = 691019837
            pCode[357]:                     const uint32_t = 1768846624
            pCode[358]:                     const uint32_t = 1836216166
            pCode[359]:                     const uint32_t = 1634887200
            pCode[360]:                     const uint32_t = 1683973485
            pCode[361]:                     const uint32_t = 1600222305
            pCode[362]:                     const uint32_t = 1668246626
            pCode[363]:                     const uint32_t = 226173035
            pCode[364]:                     const uint32_t = 1634535690
            pCode[365]:                     const uint32_t = 1981822068
            pCode[366]:                     const uint32_t = 997680489
            pCode[367]:                     const uint32_t = 1829308941
            pCode[368]:                     const uint32_t = 540308577
            pCode[369]:                     const uint32_t = 1785688688
            pCode[370]:                     const uint32_t = 151653691
            pCode[371]:                     const uint32_t = 880042349
            pCode[372]:                     const uint32_t = 1701410336
            pCode[373]:                     const uint32_t = 1869770871
            pCode[374]:                     const uint32_t = 168639338
            pCode[375]:                     const uint32_t = 1667593737
            pCode[376]:                     const uint32_t = 1769349172
            pCode[377]:                     const uint32_t = 1885304677
            pCode[378]:                     const uint32_t = 221999983
            pCode[379]:                     const uint32_t = 1702234378
            pCode[380]:                     const uint32_t = 1629500515
            pCode[381]:                     const uint32_t = 1701405293
            pCode[382]:                     const uint32_t = 1667200110
            pCode[383]:                     const uint32_t = 1919904879
            pCode[384]:                     const uint32_t = 151653691
            pCode[385]:                     const uint32_t = 878929270
            pCode[386]:                     const uint32_t = 1734962208
            pCode[387]:                     const uint32_t = 1667200104
            pCode[388]:                     const uint32_t = 1919904879
            pCode[389]:                     const uint32_t = 537529659
            pCode[390]:                     const uint32_t = 1981816864
            pCode[391]:                     const uint32_t = 540304229
            pCode[392]:                     const uint32_t = 1751607660
            pCode[393]:                     const uint32_t = 1869635444
            pCode[394]:                     const uint32_t = 1769236851
            pCode[395]:                     const uint32_t = 221998703
            pCode[396]:                     const uint32_t = 1769277706
            pCode[397]:                     const uint32_t = 1830843502
            pCode[398]:                     const uint32_t = 1683978337
            pCode[399]:                     const uint32_t = 1601659250
            pCode[400]:                     const uint32_t = 1853189987
            pCode[401]:                     const uint32_t = 168639348
            pCode[402]:                     const uint32_t = 1919295613
            pCode[403]:                     const uint32_t = 1600482657
            pCode[404]:                     const uint32_t = 1635017060
            pCode[405]:                     const uint32_t = 218762555
            pCode[406]:                     const uint32_t = 2036427786
            pCode[407]:                     const uint32_t = 678720879
            pCode[408]:                     const uint32_t = 544499059
            pCode[409]:                     const uint32_t = 741351485
            pCode[410]:                     const uint32_t = 1852400160
            pCode[411]:                     const uint32_t = 1735289188
            pCode[412]:                     const uint32_t = 824196384
            pCode[413]:                     const uint32_t = 1953701932
            pCode[414]:                     const uint32_t = 808662116
            pCode[415]:                     const uint32_t = 1969365033
            pCode[416]:                     const uint32_t = 1919247974
            pCode[417]:                     const uint32_t = 1634886688
            pCode[418]:                     const uint32_t = 1868783479
            pCode[419]:                     const uint32_t = 1937010293
            pCode[420]:                     const uint32_t = 168655648
            pCode[421]:                     const uint32_t = 1852405001
            pCode[422]:                     const uint32_t = 1868767348
            pCode[423]:                     const uint32_t = 1937010293
            pCode[424]:                     const uint32_t = 221994331
            pCode[425]:                     const uint32_t = 222002442
            pCode[426]:                     const uint32_t = 1930038538
            pCode[427]:                     const uint32_t = 1668641396
            pCode[428]:                     const uint32_t = 1919164532
            pCode[429]:                     const uint32_t = 1667200865
            pCode[430]:                     const uint32_t = 1634561391
            pCode[431]:                     const uint32_t = 2065720430
            pCode[432]:                     const uint32_t = 1963526669
            pCode[433]:                     const uint32_t = 544501353
            pCode[434]:                     const uint32_t = 1701080681
            pCode[435]:                     const uint32_t = 1868783480
            pCode[436]:                     const uint32_t = 997486197
            pCode[437]:                     const uint32_t = 1963526669
            pCode[438]:                     const uint32_t = 544501353
            pCode[439]:                     const uint32_t = 1953721961
            pCode[440]:                     const uint32_t = 1701015137
            pCode[441]:                     const uint32_t = 1970234207
            pCode[442]:                     const uint32_t = 222000238
            pCode[443]:                     const uint32_t = 1769277706
            pCode[444]:                     const uint32_t = 1713402990
            pCode[445]:                     const uint32_t = 1953722985
            pCode[446]:                     const uint32_t = 1684957535
            pCode[447]:                     const uint32_t = 222001253
            pCode[448]:                     const uint32_t = 1852377354
            pCode[449]:                     const uint32_t = 1702240372
            pCode[450]:                     const uint32_t = 2019914866
            pCode[451]:                     const uint32_t = 1717989215
            pCode[452]:                     const uint32_t = 997483891
            pCode[453]:                     const uint32_t = 1963526669
            pCode[454]:                     const uint32_t = 544501353
            pCode[455]:                     const uint32_t = 1936877926
            pCode[456]:                     const uint32_t = 1852399476
            pCode[457]:                     const uint32_t = 1851880563
            pCode[458]:                     const uint32_t = 221996387
            pCode[459]:                     const uint32_t = 151653642
            pCode[460]:                     const uint32_t = 1953393013
            pCode[461]:                     const uint32_t = 1952541984
            pCode[462]:                     const uint32_t = 1634300517
            pCode[463]:                     const uint32_t = 1684627308
            pCode[464]:                     const uint32_t = 151653691
            pCode[465]:                     const uint32_t = 1953393013
            pCode[466]:                     const uint32_t = 1634890784
            pCode[467]:                     const uint32_t = 1868985198
            pCode[468]:                     const uint32_t = 1767861618
            pCode[469]:                     const uint32_t = 168639332
            pCode[470]:                     const uint32_t = 1852405001
            pCode[471]:                     const uint32_t = 1634738292
            pCode[472]:                     const uint32_t = 221996132
            pCode[473]:                     const uint32_t = 222002442
            pCode[474]:                     const uint32_t = 2036427786
            pCode[475]:                     const uint32_t = 678720879
            pCode[476]:                     const uint32_t = 1717990754
            pCode[477]:                     const uint32_t = 1918857829
            pCode[478]:                     const uint32_t = 1919247973
            pCode[479]:                     const uint32_t = 1701015141
            pCode[480]:                     const uint32_t = 1969365033
            pCode[481]:                     const uint32_t = 1919247974
            pCode[482]:                     const uint32_t = 1634886688
            pCode[483]:                     const uint32_t = 1969381239
            pCode[484]:                     const uint32_t = 1919247974
            pCode[485]:                     const uint32_t = 168655648
            pCode[486]:                     const uint32_t = 1634886665
            pCode[487]:                     const uint32_t = 1868783479
            pCode[488]:                     const uint32_t = 1851878765
            pCode[489]:                     const uint32_t = 1919164516
            pCode[490]:                     const uint32_t = 1534293857
            pCode[491]:                     const uint32_t = 168639325
            pCode[492]:                     const uint32_t = 168639357
            pCode[493]:                     const uint32_t = 1377840943
            pCode[494]:                     const uint32_t = 1919902565
            pCode[495]:                     const uint32_t = 1919164516
            pCode[496]:                     const uint32_t = 1663072097
            pCode[497]:                     const uint32_t = 1634561391
            pCode[498]:                     const uint32_t = 544433262
            pCode[499]:                     const uint32_t = 544367984
            pCode[500]:                     const uint32_t = 1701865840
            pCode[501]:                     const uint32_t = 1701734764
            pCode[502]:                     const uint32_t = 1634235168
            pCode[503]:                     const uint32_t = 544367972
            pCode[504]:                     const uint32_t = 1701470831
            pCode[505]:                     const uint32_t = 168653923
            pCode[506]:                     const uint32_t = 1870225772
            pCode[507]:                     const uint32_t = 1932031093
            pCode[508]:                     const uint32_t = 1025537125
            pCode[509]:                     const uint32_t = 539766816
            pCode[510]:                     const uint32_t = 1684957538
            pCode[511]:                     const uint32_t = 543649385
            pCode[512]:                     const uint32_t = 691150909
            pCode[513]:                     const uint32_t = 1718968864
            pCode[514]:                     const uint32_t = 544367974
            pCode[515]:                     const uint32_t = 2002874980
            pCode[516]:                     const uint32_t = 1718968927
            pCode[517]:                     const uint32_t = 2065724262
            pCode[518]:                     const uint32_t = 1678313997
            pCode[519]:                     const uint32_t = 1601659250
            pCode[520]:                     const uint32_t = 1717990754
            pCode[521]:                     const uint32_t = 1679848037
            pCode[522]:                     const uint32_t = 1601659250
            pCode[523]:                     const uint32_t = 1717990754
            pCode[524]:                     const uint32_t = 1534292581
            pCode[525]:                     const uint32_t = 168639325
            pCode[526]:                     const uint32_t = 168639357
            pCode[527]:                     const uint32_t = 791611917
            pCode[528]:                     const uint32_t = 1701728032
            pCode[529]:                     const uint32_t = 1919903264
            pCode[530]:                     const uint32_t = 1667327264
            pCode[531]:                     const uint32_t = 1852383336
            pCode[532]:                     const uint32_t = 1851880563
            pCode[533]:                     const uint32_t = 1864394083
            pCode[534]:                     const uint32_t = 1701257318
            pCode[535]:                     const uint32_t = 1952804207
            pCode[536]:                     const uint32_t = 1998616946
            pCode[537]:                     const uint32_t = 1768453225
            pCode[538]:                     const uint32_t = 543236206
            pCode[539]:                     const uint32_t = 1852138355
            pCode[540]:                     const uint32_t = 1998597221
            pCode[541]:                     const uint32_t = 543716457
            pCode[542]:                     const uint32_t = 1634541665
            pCode[543]:                     const uint32_t = 1769104756
            pCode[544]:                     const uint32_t = 639659105
            pCode[545]:                     const uint32_t = 1634890784
            pCode[546]:                     const uint32_t = 1868985198
            pCode[547]:                     const uint32_t = 168652146
            pCode[548]:                     const uint32_t = 1970435187
            pCode[549]:                     const uint32_t = 1864397923
            pCode[550]:                     const uint32_t = 1667590754
            pCode[551]:                     const uint32_t = 226173044
            pCode[552]:                     const uint32_t = 1769277706
            pCode[553]:                     const uint32_t = 1881175150
            pCode[554]:                     const uint32_t = 1767862131
            pCode[555]:                     const uint32_t = 151599972
            pCode[556]:                     const uint32_t = 1344286511
            pCode[557]:                     const uint32_t = 1818587241
            pCode[558]:                     const uint32_t = 1399156329
            pCode[559]:                     const uint32_t = 1701077352
            pCode[560]:                     const uint32_t = 1784827762
            pCode[561]:                     const uint32_t = 745825125
            pCode[562]:                     const uint32_t = 1701736224
            pCode[563]:                     const uint32_t = 1919250464
            pCode[564]:                     const uint32_t = 1634235168
            pCode[565]:                     const uint32_t = 796026212
            pCode[566]:                     const uint32_t = 1702125933
            pCode[567]:                     const uint32_t = 1818323314
            pCode[568]:                     const uint32_t = 1963526669
            pCode[569]:                     const uint32_t = 544501353
            pCode[570]:                     const uint32_t = 1601462637
            pCode[571]:                     const uint32_t = 154887273
            pCode[572]:                     const uint32_t = 539963145
            pCode[573]:                     const uint32_t = 1702125901
            pCode[574]:                     const uint32_t = 1818323314
            pCode[575]:                     const uint32_t = 1936607520
            pCode[576]:                     const uint32_t = 1668178292
            pCode[577]:                     const uint32_t = 151653733
            pCode[578]:                     const uint32_t = 1953393013
            pCode[579]:                     const uint32_t = 1868916512
            pCode[580]:                     const uint32_t = 996436319
            pCode[581]:                     const uint32_t = 791611657
            pCode[582]:                     const uint32_t = 1868908320
            pCode[583]:                     const uint32_t = 1920230765
            pCode[584]:                     const uint32_t = 151653753
            pCode[585]:                     const uint32_t = 1953393013
            pCode[586]:                     const uint32_t = 1634890784
            pCode[587]:                     const uint32_t = 1868985198
            pCode[588]:                     const uint32_t = 1767861618
            pCode[589]:                     const uint32_t = 789134180
            pCode[590]:                     const uint32_t = 1918115887
            pCode[591]:                     const uint32_t = 1718840929
            pCode[592]:                     const uint32_t = 225276527
            pCode[593]:                     const uint32_t = 222002442
            pCode[594]:                     const uint32_t = 2036427786
            pCode[595]:                     const uint32_t = 678720879
            pCode[596]:                     const uint32_t = 544499059
            pCode[597]:                     const uint32_t = 741351485
            pCode[598]:                     const uint32_t = 1852400160
            pCode[599]:                     const uint32_t = 1735289188
            pCode[600]:                     const uint32_t = 857750816
            pCode[601]:                     const uint32_t = 1953701932
            pCode[602]:                     const uint32_t = 808662116
            pCode[603]:                     const uint32_t = 1701978153
            pCode[604]:                     const uint32_t = 1852793953
            pCode[605]:                     const uint32_t = 1646295404
            pCode[606]:                     const uint32_t = 1701209717
            pCode[607]:                     const uint32_t = 1651449970
            pCode[608]:                     const uint32_t = 1952671082
            pCode[609]:                     const uint32_t = 1718968927
            pCode[610]:                     const uint32_t = 544367974
            pCode[611]:                     const uint32_t = 151653755
            pCode[612]:                     const uint32_t = 1701470831
            pCode[613]:                     const uint32_t = 1864397923
            pCode[614]:                     const uint32_t = 1667590754
            pCode[615]:                     const uint32_t = 1566274420
            pCode[616]:                     const uint32_t = 2097810747
            pCode[617]:                     const uint32_t = 218762555
            pCode[618]:                     const uint32_t = 539963146
            pCode[619]:                     const uint32_t = 1329876820
            pCode[620]:                     const uint32_t = 1681989690
            pCode[621]:                     const uint32_t = 1969430628
            pCode[622]:                     const uint32_t = 1852402796
            pCode[623]:                     const uint32_t = 1634738279
            pCode[624]:                     const uint32_t = 1701667186
            pCode[625]:                     const uint32_t = 1936876916
            pCode[626]:                     const uint32_t = 1953696269
            pCode[627]:                     const uint32_t = 1952675186
            pCode[628]:                     const uint32_t = 1868916512
            pCode[629]:                     const uint32_t = 1920230765
            pCode[630]:                     const uint32_t = 226173049
            pCode[631]:                     const uint32_t = 1769277706
            pCode[632]:                     const uint32_t = 1931506798
            pCode[633]:                     const uint32_t = 1953653108
            pCode[634]:                     const uint32_t = 1684957535
            pCode[635]:                     const uint32_t = 222001253
            pCode[636]:                     const uint32_t = 1769277706
            pCode[637]:                     const uint32_t = 1763734638
            pCode[638]:                     const uint32_t = 2019910766
            pCode[639]:                     const uint32_t = 1970234207
            pCode[640]:                     const uint32_t = 222000238
            pCode[641]:                     const uint32_t = 1852377354
            pCode[642]:                     const uint32_t = 1702240372
            pCode[643]:                     const uint32_t = 2019914866
            pCode[644]:                     const uint32_t = 1717989215
            pCode[645]:                     const uint32_t = 997483891
            pCode[646]:                     const uint32_t = 1963526669
            pCode[647]:                     const uint32_t = 544501353
            pCode[648]:                     const uint32_t = 1684300144
            pCode[649]:                     const uint32_t = 2097810747
            pCode[650]:                     const uint32_t = 789187899
            pCode[651]:                     const uint32_t = 1330913327
            pCode[652]:                     const uint32_t = 540692292
            pCode[653]:                     const uint32_t = 222580293
            pCode[654]:                     const uint32_t = 2036427786
            pCode[655]:                     const uint32_t = 678720879
            pCode[656]:                     const uint32_t = 544499059
            pCode[657]:                     const uint32_t = 741351485
            pCode[658]:                     const uint32_t = 1852400160
            pCode[659]:                     const uint32_t = 1735289188
            pCode[660]:                     const uint32_t = 874528032
            pCode[661]:                     const uint32_t = 1953701932
            pCode[662]:                     const uint32_t = 808662116
            pCode[663]:                     const uint32_t = 1701978153
            pCode[664]:                     const uint32_t = 1852793953
            pCode[665]:                     const uint32_t = 1646295404
            pCode[666]:                     const uint32_t = 1701209717
            pCode[667]:                     const uint32_t = 1701257330
            pCode[668]:                     const uint32_t = 1952804207
            pCode[669]:                     const uint32_t = 1650424178
            pCode[670]:                     const uint32_t = 1701209717
            pCode[671]:                     const uint32_t = 226173042
            pCode[672]:                     const uint32_t = 1701251338
            pCode[673]:                     const uint32_t = 1952804207
            pCode[674]:                     const uint32_t = 1730181490
            pCode[675]:                     const uint32_t = 1701670757
            pCode[676]:                     const uint32_t = 1701409396
            pCode[677]:                     const uint32_t = 995974003
            pCode[678]:                     const uint32_t = 998050317
            pCode[679]:                     const uint32_t = 168626701
            pCode[680]:                     const uint32_t = 1970435187
            pCode[681]:                     const uint32_t = 1981838435
            pCode[682]:                     const uint32_t = 1702130277
            pCode[683]:                     const uint32_t = 226173048
            pCode[684]:                     const uint32_t = 538976266
            pCode[685]:                     const uint32_t = 1667593760
            pCode[686]:                     const uint32_t = 1869619251
            pCode[687]:                     const uint32_t = 1769236851
            pCode[688]:                     const uint32_t = 221998703
            pCode[689]:                     const uint32_t = 538976266
            pCode[690]:                     const uint32_t = 1869375008
            pCode[691]:                     const uint32_t = 1965061217
            pCode[692]:                     const uint32_t = 997744502
            pCode[693]:                     const uint32_t = 538970637
            pCode[694]:                     const uint32_t = 1702240288
            pCode[695]:                     const uint32_t = 1847604067
            pCode[696]:                     const uint32_t = 1634562671
            pCode[697]:                     const uint32_t = 168639340
            pCode[698]:                     const uint32_t = 538976288
            pCode[699]:                     const uint32_t = 1634692198
            pCode[700]:                     const uint32_t = 1987387508
            pCode[701]:                     const uint32_t = 222001503
            pCode[702]:                     const uint32_t = 538976266
            pCode[703]:                     const uint32_t = 1667593760
            pCode[704]:                     const uint32_t = 1868767284
            pCode[705]:                     const uint32_t = 997355372
            pCode[706]:                     const uint32_t = 998050317
            pCode[707]:                     const uint32_t = 1634470413
            pCode[708]:                     const uint32_t = 1953853305
            pCode[709]:                     const uint32_t = 1952805672
            pCode[710]:                     const uint32_t = 807419168
            pCode[711]:                     const uint32_t = 1768038444
            pCode[712]:                     const uint32_t = 1852400750
            pCode[713]:                     const uint32_t = 540876903
            pCode[714]:                     const uint32_t = 1931488309
            pCode[715]:                     const uint32_t = 859071604
            pCode[716]:                     const uint32_t = 1914710320
            pCode[717]:                     const uint32_t = 1868849509
            pCode[718]:                     const uint32_t = 544828526
            pCode[719]:                     const uint32_t = 1717990754
            pCode[720]:                     const uint32_t = 1981837925
            pCode[721]:                     const uint32_t = 1702130277
            pCode[722]:                     const uint32_t = 1969381240
            pCode[723]:                     const uint32_t = 1919247974
            pCode[724]:                     const uint32_t = 168655648
            pCode[725]:                     const uint32_t = 1919251977
            pCode[726]:                     const uint32_t = 544761204
            pCode[727]:                     const uint32_t = 1953654134
            pCode[728]:                     const uint32_t = 1936024425
            pCode[729]:                     const uint32_t = 221994331
            pCode[730]:                     const uint32_t = 222002442
            pCode[731]:                     const uint32_t = 1812598026
            pCode[732]:                     const uint32_t = 1970239841
            pCode[733]:                     const uint32_t = 1702045812
            pCode[734]:                     const uint32_t = 540876916
            pCode[735]:                     const uint32_t = 1646275632
            pCode[736]:                     const uint32_t = 1768189545
            pCode[737]:                     const uint32_t = 1025533806
            pCode[738]:                     const uint32_t = 539768352
            pCode[739]:                     const uint32_t = 878998643
            pCode[740]:                     const uint32_t = 539570227
            pCode[741]:                     const uint32_t = 1684104562
            pCode[742]:                     const uint32_t = 2037149295
            pCode[743]:                     const uint32_t = 1718968864
            pCode[744]:                     const uint32_t = 544367974
            pCode[745]:                     const uint32_t = 1851880052
            pCode[746]:                     const uint32_t = 1919903347
            pCode[747]:                     const uint32_t = 1969381229
            pCode[748]:                     const uint32_t = 1919247974
            pCode[749]:                     const uint32_t = 168655648
            pCode[750]:                     const uint32_t = 1952541961
            pCode[751]:                     const uint32_t = 1920213044
            pCode[752]:                     const uint32_t = 1718840929
            pCode[753]:                     const uint32_t = 1936552559
            pCode[754]:                     const uint32_t = 221994331
            pCode[755]:                     const uint32_t = 222002442
            pCode[756]:                     const uint32_t = 1812598026
            pCode[757]:                     const uint32_t = 1970239841
            pCode[758]:                     const uint32_t = 1702045812
            pCode[759]:                     const uint32_t = 540876916
            pCode[760]:                     const uint32_t = 1646275632
            pCode[761]:                     const uint32_t = 1768189545
            pCode[762]:                     const uint32_t = 1025533806
            pCode[763]:                     const uint32_t = 539572000
            pCode[764]:                     const uint32_t = 1718185589
            pCode[765]:                     const uint32_t = 544043631
            pCode[766]:                     const uint32_t = 1886216563
            pCode[767]:                     const uint32_t = 846357868
            pCode[768]:                     const uint32_t = 1702109252
            pCode[769]:                     const uint32_t = 1920300152
            pCode[770]:                     const uint32_t = 1566274405
            pCode[771]:                     const uint32_t = 59
            pCode[772]:                     const uint32_t = 458756
            pCode[773]:                     const uint32_t = 1163873351
            pCode[774]:                     const uint32_t = 1650414680
            pCode[775]:                     const uint32_t = 1701209717
            pCode[776]:                     const uint32_t = 1701994354
            pCode[777]:                     const uint32_t = 1701995878
            pCode[778]:                     const uint32_t = 6644590
            pCode[779]:                     const uint32_t = 524292
            pCode[780]:                     const uint32_t = 1163873351
            pCode[781]:                     const uint32_t = 1650414680
            pCode[782]:                     const uint32_t = 1701209717
            pCode[783]:                     const uint32_t = 1701994354
            pCode[784]:                     const uint32_t = 1701995878
            pCode[785]:                     const uint32_t = 845505390
            pCode[786]:                     const uint32_t = 0
            pCode[787]:                     const uint32_t = 524292
            pCode[788]:                     const uint32_t = 1163873351
            pCode[789]:                     const uint32_t = 1851741272
            pCode[790]:                     const uint32_t = 1853189743
            pCode[791]:                     const uint32_t = 1919903337
            pCode[792]:                     const uint32_t = 1970364269
            pCode[793]:                     const uint32_t = 1718185057
            pCode[794]:                     const uint32_t = 7497065
            pCode[795]:                     const uint32_t = 655364
            pCode[796]:                     const uint32_t = 1197427783
            pCode[797]:                     const uint32_t = 1279741775
            pCode[798]:                     const uint32_t = 1885560645
            pCode[799]:                     const uint32_t = 1953718128
            pCode[800]:                     const uint32_t = 1600482425
            pCode[801]:                     const uint32_t = 1701734764
            pCode[802]:                     const uint32_t = 1919509599
            pCode[803]:                     const uint32_t = 1769235301
            pCode[804]:                     const uint32_t = 25974
            pCode[805]:                     const uint32_t = 524292
            pCode[806]:                     const uint32_t = 1197427783
            pCode[807]:                     const uint32_t = 1279741775
            pCode[808]:                     const uint32_t = 1852399429
            pCode[809]:                     const uint32_t = 1685417059
            pCode[810]:                     const uint32_t = 1768185701
            pCode[811]:                     const uint32_t = 1952671090
            pCode[812]:                     const uint32_t = 6649449
            pCode[813]:                     const uint32_t = 262149
            pCode[814]:                     const uint32_t = 6
            pCode[815]:                     const uint32_t = 1852399981
            pCode[816]:                     const uint32_t = 0
            pCode[817]:                     const uint32_t = 196613
            pCode[818]:                     const uint32_t = 10
            pCode[819]:                     const uint32_t = 4475239
            pCode[820]:                     const uint32_t = 524293
            pCode[821]:                     const uint32_t = 13
            pCode[822]:                     const uint32_t = 1197436007
            pCode[823]:                     const uint32_t = 1633841004
            pCode[824]:                     const uint32_t = 1986939244
            pCode[825]:                     const uint32_t = 1952539503
            pCode[826]:                     const uint32_t = 1231974249
            pCode[827]:                     const uint32_t = 68
            pCode[828]:                     const uint32_t = 458757
            pCode[829]:                     const uint32_t = 22
            pCode[830]:                     const uint32_t = 1835102822
            pCode[831]:                     const uint32_t = 1633967973
            pCode[832]:                     const uint32_t = 1650418036
            pCode[833]:                     const uint32_t = 1801678700
            pCode[834]:                     const uint32_t = 0
            pCode[835]:                     const uint32_t = 327686
            pCode[836]:                     const uint32_t = 22
            pCode[837]:                     const uint32_t = 0
            pCode[838]:                     const uint32_t = 2003134838
            pCode[839]:                     const uint32_t = 0
            pCode[840]:                     const uint32_t = 327686
            pCode[841]:                     const uint32_t = 22
            pCode[842]:                     const uint32_t = 1
            pCode[843]:                     const uint32_t = 1785688688
            pCode[844]:                     const uint32_t = 0
            pCode[845]:                     const uint32_t = 393222
            pCode[846]:                     const uint32_t = 22
            pCode[847]:                     const uint32_t = 2
            pCode[848]:                     const uint32_t = 2003134838
            pCode[849]:                     const uint32_t = 1785688688
            pCode[850]:                     const uint32_t = 0
            pCode[851]:                     const uint32_t = 393222
            pCode[852]:                     const uint32_t = 22
            pCode[853]:                     const uint32_t = 3
            pCode[854]:                     const uint32_t = 2003134838
            pCode[855]:                     const uint32_t = 1936683103
            pCode[856]:                     const uint32_t = 0
            pCode[857]:                     const uint32_t = 458758
            pCode[858]:                     const uint32_t = 22
            pCode[859]:                     const uint32_t = 4
            pCode[860]:                     const uint32_t = 1768058209
            pCode[861]:                     const uint32_t = 1601465957
            pCode[862]:                     const uint32_t = 1869377379
            pCode[863]:                     const uint32_t = 114
            pCode[864]:                     const uint32_t = 393222
            pCode[865]:                     const uint32_t = 22
            pCode[866]:                     const uint32_t = 5
            pCode[867]:                     const uint32_t = 1751607660
            pCode[868]:                     const uint32_t = 1868783476
            pCode[869]:                     const uint32_t = 7499628
            pCode[870]:                     const uint32_t = 458758
            pCode[871]:                     const uint32_t = 22
            pCode[872]:                     const uint32_t = 6
            pCode[873]:                     const uint32_t = 1751607660
            pCode[874]:                     const uint32_t = 1869635444
            pCode[875]:                     const uint32_t = 1769236851
            pCode[876]:                     const uint32_t = 28271
            pCode[877]:                     const uint32_t = 458758
            pCode[878]:                     const uint32_t = 22
            pCode[879]:                     const uint32_t = 7
            pCode[880]:                     const uint32_t = 1601724781
            pCode[881]:                     const uint32_t = 2002874980
            pCode[882]:                     const uint32_t = 1970234207
            pCode[883]:                     const uint32_t = 29806
            pCode[884]:                     const uint32_t = 327685
            pCode[885]:                     const uint32_t = 24
            pCode[886]:                     const uint32_t = 1835102822
            pCode[887]:                     const uint32_t = 1633967973
            pCode[888]:                     const uint32_t = 24948
            pCode[889]:                     const uint32_t = 262149
            pCode[890]:                     const uint32_t = 35
            pCode[891]:                     const uint32_t = 1701470831
            pCode[892]:                     const uint32_t = 29795
            pCode[893]:                     const uint32_t = 327686
            pCode[894]:                     const uint32_t = 35
            pCode[895]:                     const uint32_t = 0
            pCode[896]:                     const uint32_t = 1601139568
            pCode[897]:                     const uint32_t = 25705
            pCode[898]:                     const uint32_t = 327686
            pCode[899]:                     const uint32_t = 35
            pCode[900]:                     const uint32_t = 1
            pCode[901]:                     const uint32_t = 1601462637
            pCode[902]:                     const uint32_t = 25705
            pCode[903]:                     const uint32_t = 327686
            pCode[904]:                     const uint32_t = 35
            pCode[905]:                     const uint32_t = 2
            pCode[906]:                     const uint32_t = 1601135975
            pCode[907]:                     const uint32_t = 25705
            pCode[908]:                     const uint32_t = 458758
            pCode[909]:                     const uint32_t = 35
            pCode[910]:                     const uint32_t = 3
            pCode[911]:                     const uint32_t = 1851880052
            pCode[912]:                     const uint32_t = 1919903347
            pCode[913]:                     const uint32_t = 1684627309
            pCode[914]:                     const uint32_t = 0
            pCode[915]:                     const uint32_t = 196613
            pCode[916]:                     const uint32_t = 37
            pCode[917]:                     const uint32_t = 6972015
            pCode[918]:                     const uint32_t = 262149
            pCode[919]:                     const uint32_t = 38
            pCode[920]:                     const uint32_t = 1701470831
            pCode[921]:                     const uint32_t = 29795
            pCode[922]:                     const uint32_t = 327686
            pCode[923]:                     const uint32_t = 38
            pCode[924]:                     const uint32_t = 0
            pCode[925]:                     const uint32_t = 1601139568
            pCode[926]:                     const uint32_t = 25705
            pCode[927]:                     const uint32_t = 327686
            pCode[928]:                     const uint32_t = 38
            pCode[929]:                     const uint32_t = 1
            pCode[930]:                     const uint32_t = 1601462637
            pCode[931]:                     const uint32_t = 25705
            pCode[932]:                     const uint32_t = 327686
            pCode[933]:                     const uint32_t = 38
            pCode[934]:                     const uint32_t = 2
            pCode[935]:                     const uint32_t = 1601135975
            pCode[936]:                     const uint32_t = 25705
            pCode[937]:                     const uint32_t = 458758
            pCode[938]:                     const uint32_t = 38
            pCode[939]:                     const uint32_t = 3
            pCode[940]:                     const uint32_t = 1851880052
            pCode[941]:                     const uint32_t = 1919903347
            pCode[942]:                     const uint32_t = 1684627309
            pCode[943]:                     const uint32_t = 0
            pCode[944]:                     const uint32_t = 393221
            pCode[945]:                     const uint32_t = 40
            pCode[946]:                     const uint32_t = 1701470831
            pCode[947]:                     const uint32_t = 1650422883
            pCode[948]:                     const uint32_t = 1701209717
            pCode[949]:                     const uint32_t = 114
            pCode[950]:                     const uint32_t = 327686
            pCode[951]:                     const uint32_t = 40
            pCode[952]:                     const uint32_t = 0
            pCode[953]:                     const uint32_t = 1701470831
            pCode[954]:                     const uint32_t = 7566435
            pCode[955]:                     const uint32_t = 196613
            pCode[956]:                     const uint32_t = 42
            pCode[957]:                     const uint32_t = 0
            pCode[958]:                     const uint32_t = 327685
            pCode[959]:                     const uint32_t = 49
            pCode[960]:                     const uint32_t = 1836016999
            pCode[961]:                     const uint32_t = 2037544037
            pCode[962]:                     const uint32_t = 0
            pCode[963]:                     const uint32_t = 393222
            pCode[964]:                     const uint32_t = 49
            pCode[965]:                     const uint32_t = 0
            pCode[966]:                     const uint32_t = 1918989427
            pCode[967]:                     const uint32_t = 1852399476
            pCode[968]:                     const uint32_t = 7890276
            pCode[969]:                     const uint32_t = 393222
            pCode[970]:                     const uint32_t = 49
            pCode[971]:                     const uint32_t = 1
            pCode[972]:                     const uint32_t = 1701080681
            pCode[973]:                     const uint32_t = 1868783480
            pCode[974]:                     const uint32_t = 7630453
            pCode[975]:                     const uint32_t = 458758
            pCode[976]:                     const uint32_t = 49
            pCode[977]:                     const uint32_t = 2
            pCode[978]:                     const uint32_t = 1953654134
            pCode[979]:                     const uint32_t = 1868527717
            pCode[980]:                     const uint32_t = 1702061670
            pCode[981]:                     const uint32_t = 116
            pCode[982]:                     const uint32_t = 327686
            pCode[983]:                     const uint32_t = 49
            pCode[984]:                     const uint32_t = 3
            pCode[985]:                     const uint32_t = 1684300144
            pCode[986]:                     const uint32_t = 0
            pCode[987]:                     const uint32_t = 196613
            pCode[988]:                     const uint32_t = 51
            pCode[989]:                     const uint32_t = 7300455
            pCode[990]:                     const uint32_t = 327685
            pCode[991]:                     const uint32_t = 52
            pCode[992]:                     const uint32_t = 1836016999
            pCode[993]:                     const uint32_t = 2037544037
            pCode[994]:                     const uint32_t = 0
            pCode[995]:                     const uint32_t = 393222
            pCode[996]:                     const uint32_t = 52
            pCode[997]:                     const uint32_t = 0
            pCode[998]:                     const uint32_t = 1918989427
            pCode[999]:                     const uint32_t = 1852399476
            pCode[1000]:                    const uint32_t = 7890276
            pCode[1001]:                    const uint32_t = 393222
            pCode[1002]:                    const uint32_t = 52
            pCode[1003]:                    const uint32_t = 1
            pCode[1004]:                    const uint32_t = 1701080681
            pCode[1005]:                    const uint32_t = 1868783480
            pCode[1006]:                    const uint32_t = 7630453
            pCode[1007]:                    const uint32_t = 458758
            pCode[1008]:                    const uint32_t = 52
            pCode[1009]:                    const uint32_t = 2
            pCode[1010]:                    const uint32_t = 1953654134
            pCode[1011]:                    const uint32_t = 1868527717
            pCode[1012]:                    const uint32_t = 1702061670
            pCode[1013]:                    const uint32_t = 116
            pCode[1014]:                    const uint32_t = 327686
            pCode[1015]:                    const uint32_t = 52
            pCode[1016]:                    const uint32_t = 3
            pCode[1017]:                    const uint32_t = 1684300144
            pCode[1018]:                    const uint32_t = 0
            pCode[1019]:                    const uint32_t = 393221
            pCode[1020]:                    const uint32_t = 54
            pCode[1021]:                    const uint32_t = 1836016999
            pCode[1022]:                    const uint32_t = 2037544037
            pCode[1023]:                    const uint32_t = 1718968927
            pCode[1024]:                    const uint32_t = 7497062
            pCode[1025]:                    const uint32_t = 393222
            pCode[1026]:                    const uint32_t = 54
            pCode[1027]:                    const uint32_t = 0
            pCode[1028]:                    const uint32_t = 1836016999
            pCode[1029]:                    const uint32_t = 1769108581
            pCode[1030]:                    const uint32_t = 29541
            pCode[1031]:                    const uint32_t = 196613
            pCode[1032]:                    const uint32_t = 56
            pCode[1033]:                    const uint32_t = 0
            pCode[1034]:                    const uint32_t = 393221
            pCode[1035]:                    const uint32_t = 64
            pCode[1036]:                    const uint32_t = 2002874980
            pCode[1037]:                    const uint32_t = 1836016479
            pCode[1038]:                    const uint32_t = 1684955501
            pCode[1039]:                    const uint32_t = 0
            pCode[1040]:                    const uint32_t = 393222
            pCode[1041]:                    const uint32_t = 64
            pCode[1042]:                    const uint32_t = 0
            pCode[1043]:                    const uint32_t = 1701080681
            pCode[1044]:                    const uint32_t = 1868783480
            pCode[1045]:                    const uint32_t = 7630453
            pCode[1046]:                    const uint32_t = 458758
            pCode[1047]:                    const uint32_t = 64
            pCode[1048]:                    const uint32_t = 1
            pCode[1049]:                    const uint32_t = 1953721961
            pCode[1050]:                    const uint32_t = 1701015137
            pCode[1051]:                    const uint32_t = 1970234207
            pCode[1052]:                    const uint32_t = 29806
            pCode[1053]:                    const uint32_t = 393222
            pCode[1054]:                    const uint32_t = 64
            pCode[1055]:                    const uint32_t = 2
            pCode[1056]:                    const uint32_t = 1936877926
            pCode[1057]:                    const uint32_t = 1852399476
            pCode[1058]:                    const uint32_t = 7890276
            pCode[1059]:                    const uint32_t = 458758
            pCode[1060]:                    const uint32_t = 64
            pCode[1061]:                    const uint32_t = 3
            pCode[1062]:                    const uint32_t = 1953654134
            pCode[1063]:                    const uint32_t = 1868527717
            pCode[1064]:                    const uint32_t = 1702061670
            pCode[1065]:                    const uint32_t = 116
            pCode[1066]:                    const uint32_t = 458758
            pCode[1067]:                    const uint32_t = 64
            pCode[1068]:                    const uint32_t = 4
            pCode[1069]:                    const uint32_t = 1936877926
            pCode[1070]:                    const uint32_t = 1852399476
            pCode[1071]:                    const uint32_t = 1851880563
            pCode[1072]:                    const uint32_t = 25955
            pCode[1073]:                    const uint32_t = 393222
            pCode[1074]:                    const uint32_t = 64
            pCode[1075]:                    const uint32_t = 5
            pCode[1076]:                    const uint32_t = 1702125933
            pCode[1077]:                    const uint32_t = 1818323314
            pCode[1078]:                    const uint32_t = 6580575
            pCode[1079]:                    const uint32_t = 458758
            pCode[1080]:                    const uint32_t = 64
            pCode[1081]:                    const uint32_t = 6
            pCode[1082]:                    const uint32_t = 1851880052
            pCode[1083]:                    const uint32_t = 1919903347
            pCode[1084]:                    const uint32_t = 1684627309
            pCode[1085]:                    const uint32_t = 0
            pCode[1086]:                    const uint32_t = 327686
            pCode[1087]:                    const uint32_t = 64
            pCode[1088]:                    const uint32_t = 7
            pCode[1089]:                    const uint32_t = 1684300144
            pCode[1090]:                    const uint32_t = 0
            pCode[1091]:                    const uint32_t = 262149
            pCode[1092]:                    const uint32_t = 66
            pCode[1093]:                    const uint32_t = 1835888483
            pCode[1094]:                    const uint32_t = 6581857
            pCode[1095]:                    const uint32_t = 262149
            pCode[1096]:                    const uint32_t = 91
            pCode[1097]:                    const uint32_t = 2002874980
            pCode[1098]:                    const uint32_t = 6580575
            pCode[1099]:                    const uint32_t = 327685
            pCode[1100]:                    const uint32_t = 93
            pCode[1101]:                    const uint32_t = 2002874980
            pCode[1102]:                    const uint32_t = 1970234207
            pCode[1103]:                    const uint32_t = 7566446
            pCode[1104]:                    const uint32_t = 327686
            pCode[1105]:                    const uint32_t = 93
            pCode[1106]:                    const uint32_t = 0
            pCode[1107]:                    const uint32_t = 1853189987
            pCode[1108]:                    const uint32_t = 29556
            pCode[1109]:                    const uint32_t = 196613
            pCode[1110]:                    const uint32_t = 95
            pCode[1111]:                    const uint32_t = 0
            pCode[1112]:                    const uint32_t = 327685
            pCode[1113]:                    const uint32_t = 103
            pCode[1114]:                    const uint32_t = 2002874980
            pCode[1115]:                    const uint32_t = 1718968927
            pCode[1116]:                    const uint32_t = 29542
            pCode[1117]:                    const uint32_t = 458758
            pCode[1118]:                    const uint32_t = 103
            pCode[1119]:                    const uint32_t = 0
            pCode[1120]:                    const uint32_t = 2002874980
            pCode[1121]:                    const uint32_t = 1718968927
            pCode[1122]:                    const uint32_t = 1936876902
            pCode[1123]:                    const uint32_t = 0
            pCode[1124]:                    const uint32_t = 393221
            pCode[1125]:                    const uint32_t = 104
            pCode[1126]:                    const uint32_t = 2002874980
            pCode[1127]:                    const uint32_t = 1836016479
            pCode[1128]:                    const uint32_t = 1684955501
            pCode[1129]:                    const uint32_t = 0
            pCode[1130]:                    const uint32_t = 393222
            pCode[1131]:                    const uint32_t = 104
            pCode[1132]:                    const uint32_t = 0
            pCode[1133]:                    const uint32_t = 1701080681
            pCode[1134]:                    const uint32_t = 1868783480
            pCode[1135]:                    const uint32_t = 7630453
            pCode[1136]:                    const uint32_t = 458758
            pCode[1137]:                    const uint32_t = 104
            pCode[1138]:                    const uint32_t = 1
            pCode[1139]:                    const uint32_t = 1953721961
            pCode[1140]:                    const uint32_t = 1701015137
            pCode[1141]:                    const uint32_t = 1970234207
            pCode[1142]:                    const uint32_t = 29806
            pCode[1143]:                    const uint32_t = 393222
            pCode[1144]:                    const uint32_t = 104
            pCode[1145]:                    const uint32_t = 2
            pCode[1146]:                    const uint32_t = 1936877926
            pCode[1147]:                    const uint32_t = 1852399476
            pCode[1148]:                    const uint32_t = 7890276
            pCode[1149]:                    const uint32_t = 458758
            pCode[1150]:                    const uint32_t = 104
            pCode[1151]:                    const uint32_t = 3
            pCode[1152]:                    const uint32_t = 1953654134
            pCode[1153]:                    const uint32_t = 1868527717
            pCode[1154]:                    const uint32_t = 1702061670
            pCode[1155]:                    const uint32_t = 116
            pCode[1156]:                    const uint32_t = 458758
            pCode[1157]:                    const uint32_t = 104
            pCode[1158]:                    const uint32_t = 4
            pCode[1159]:                    const uint32_t = 1936877926
            pCode[1160]:                    const uint32_t = 1852399476
            pCode[1161]:                    const uint32_t = 1851880563
            pCode[1162]:                    const uint32_t = 25955
            pCode[1163]:                    const uint32_t = 393222
            pCode[1164]:                    const uint32_t = 104
            pCode[1165]:                    const uint32_t = 5
            pCode[1166]:                    const uint32_t = 1702125933
            pCode[1167]:                    const uint32_t = 1818323314
            pCode[1168]:                    const uint32_t = 6580575
            pCode[1169]:                    const uint32_t = 458758
            pCode[1170]:                    const uint32_t = 104
            pCode[1171]:                    const uint32_t = 6
            pCode[1172]:                    const uint32_t = 1851880052
            pCode[1173]:                    const uint32_t = 1919903347
            pCode[1174]:                    const uint32_t = 1684627309
            pCode[1175]:                    const uint32_t = 0
            pCode[1176]:                    const uint32_t = 327686
            pCode[1177]:                    const uint32_t = 104
            pCode[1178]:                    const uint32_t = 7
            pCode[1179]:                    const uint32_t = 1684300144
            pCode[1180]:                    const uint32_t = 0
            pCode[1181]:                    const uint32_t = 327685
            pCode[1182]:                    const uint32_t = 106
            pCode[1183]:                    const uint32_t = 2002874980
            pCode[1184]:                    const uint32_t = 1718968927
            pCode[1185]:                    const uint32_t = 7497062
            pCode[1186]:                    const uint32_t = 327686
            pCode[1187]:                    const uint32_t = 106
            pCode[1188]:                    const uint32_t = 0
            pCode[1189]:                    const uint32_t = 2002874980
            pCode[1190]:                    const uint32_t = 115
            pCode[1191]:                    const uint32_t = 196613
            pCode[1192]:                    const uint32_t = 109
            pCode[1193]:                    const uint32_t = 0
            pCode[1194]:                    const uint32_t = 262149
            pCode[1195]:                    const uint32_t = 121
            pCode[1196]:                    const uint32_t = 1953654134
            pCode[1197]:                    const uint32_t = 30821
            pCode[1198]:                    const uint32_t = 393222
            pCode[1199]:                    const uint32_t = 121
            pCode[1200]:                    const uint32_t = 0
            pCode[1201]:                    const uint32_t = 1769172848
            pCode[1202]:                    const uint32_t = 1852795252
            pCode[1203]:                    const uint32_t = 0
            pCode[1204]:                    const uint32_t = 327686
            pCode[1205]:                    const uint32_t = 121
            pCode[1206]:                    const uint32_t = 1
            pCode[1207]:                    const uint32_t = 2019522165
            pCode[1208]:                    const uint32_t = 0
            pCode[1209]:                    const uint32_t = 327686
            pCode[1210]:                    const uint32_t = 121
            pCode[1211]:                    const uint32_t = 2
            pCode[1212]:                    const uint32_t = 1836216174
            pCode[1213]:                    const uint32_t = 27745
            pCode[1214]:                    const uint32_t = 327686
            pCode[1215]:                    const uint32_t = 121
            pCode[1216]:                    const uint32_t = 3
            pCode[1217]:                    const uint32_t = 2036299381
            pCode[1218]:                    const uint32_t = 0
            pCode[1219]:                    const uint32_t = 327686
            pCode[1220]:                    const uint32_t = 121
            pCode[1221]:                    const uint32_t = 4
            pCode[1222]:                    const uint32_t = 1869377379
            pCode[1223]:                    const uint32_t = 114
            pCode[1224]:                    const uint32_t = 393221
            pCode[1225]:                    const uint32_t = 123
            pCode[1226]:                    const uint32_t = 1953654134
            pCode[1227]:                    const uint32_t = 1650423909
            pCode[1228]:                    const uint32_t = 1701209717
            pCode[1229]:                    const uint32_t = 114
            pCode[1230]:                    const uint32_t = 393222
            pCode[1231]:                    const uint32_t = 123
            pCode[1232]:                    const uint32_t = 0
            pCode[1233]:                    const uint32_t = 1953654134
            pCode[1234]:                    const uint32_t = 1936024425
            pCode[1235]:                    const uint32_t = 0
            pCode[1236]:                    const uint32_t = 196613
            pCode[1237]:                    const uint32_t = 125
            pCode[1238]:                    const uint32_t = 0
            pCode[1239]:                    const uint32_t = 458757
            pCode[1240]:                    const uint32_t = 127
            pCode[1241]:                    const uint32_t = 1851880052
            pCode[1242]:                    const uint32_t = 1919903347
            pCode[1243]:                    const uint32_t = 1969381229
            pCode[1244]:                    const uint32_t = 1919247974
            pCode[1245]:                    const uint32_t = 0
            pCode[1246]:                    const uint32_t = 393222
            pCode[1247]:                    const uint32_t = 127
            pCode[1248]:                    const uint32_t = 0
            pCode[1249]:                    const uint32_t = 1851880052
            pCode[1250]:                    const uint32_t = 1919903347
            pCode[1251]:                    const uint32_t = 29549
            pCode[1252]:                    const uint32_t = 196613
            pCode[1253]:                    const uint32_t = 129
            pCode[1254]:                    const uint32_t = 0
            pCode[1255]:                    const uint32_t = 327685
            pCode[1256]:                    const uint32_t = 134
            pCode[1257]:                    const uint32_t = 1954047348
            pCode[1258]:                    const uint32_t = 1936028277
            pCode[1259]:                    const uint32_t = 0
            pCode[1260]:                    const uint32_t = 393546
            pCode[1261]:                    const uint32_t = 1701407843
            pCode[1262]:                    const uint32_t = 1981838446
            pCode[1263]:                    const uint32_t = 1634430069
            pCode[1264]:                    const uint32_t = 808464750
            pCode[1265]:                    const uint32_t = 0
            pCode[1266]:                    const uint32_t = 393546
            pCode[1267]:                    const uint32_t = 1735549300
            pCode[1268]:                    const uint32_t = 1697477733
            pCode[1269]:                    const uint32_t = 1931507310
            pCode[1270]:                    const uint32_t = 1987209584
            pCode[1271]:                    const uint32_t = 3550769
            pCode[1272]:                    const uint32_t = 459082
            pCode[1273]:                    const uint32_t = 1735549300
            pCode[1274]:                    const uint32_t = 1697477733
            pCode[1275]:                    const uint32_t = 1981838958
            pCode[1276]:                    const uint32_t = 1634430069
            pCode[1277]:                    const uint32_t = 858665326
            pCode[1278]:                    const uint32_t = 0
            pCode[1279]:                    const uint32_t = 393546
            pCode[1280]:                    const uint32_t = 1920233061
            pCode[1281]:                    const uint32_t = 1869622649
            pCode[1282]:                    const uint32_t = 544501353
            pCode[1283]:                    const uint32_t = 1852399981
            pCode[1284]:                    const uint32_t = 0
            pCode[1285]:                    const uint32_t = 262215
            pCode[1286]:                    const uint32_t = 13
            pCode[1287]:                    const uint32_t = 11
            pCode[1288]:                    const uint32_t = 28
            pCode[1289]:                    const uint32_t = 262216
            pCode[1290]:                    const uint32_t = 22
            pCode[1291]:                    const uint32_t = 0
            pCode[1292]:                    const uint32_t = 5
            pCode[1293]:                    const uint32_t = 327752
            pCode[1294]:                    const uint32_t = 22
            pCode[1295]:                    const uint32_t = 0
            pCode[1296]:                    const uint32_t = 35
            pCode[1297]:                    const uint32_t = 0
            pCode[1298]:                    const uint32_t = 327752
            pCode[1299]:                    const uint32_t = 22
            pCode[1300]:                    const uint32_t = 0
            pCode[1301]:                    const uint32_t = 7
            pCode[1302]:                    const uint32_t = 16
            pCode[1303]:                    const uint32_t = 262216
            pCode[1304]:                    const uint32_t = 22
            pCode[1305]:                    const uint32_t = 1
            pCode[1306]:                    const uint32_t = 5
            pCode[1307]:                    const uint32_t = 327752
            pCode[1308]:                    const uint32_t = 22
            pCode[1309]:                    const uint32_t = 1
            pCode[1310]:                    const uint32_t = 35
            pCode[1311]:                    const uint32_t = 64
            pCode[1312]:                    const uint32_t = 327752
            pCode[1313]:                    const uint32_t = 22
            pCode[1314]:                    const uint32_t = 1
            pCode[1315]:                    const uint32_t = 7
            pCode[1316]:                    const uint32_t = 16
            pCode[1317]:                    const uint32_t = 262216
            pCode[1318]:                    const uint32_t = 22
            pCode[1319]:                    const uint32_t = 2
            pCode[1320]:                    const uint32_t = 5
            pCode[1321]:                    const uint32_t = 327752
            pCode[1322]:                    const uint32_t = 22
            pCode[1323]:                    const uint32_t = 2
            pCode[1324]:                    const uint32_t = 35
            pCode[1325]:                    const uint32_t = 128
            pCode[1326]:                    const uint32_t = 327752
            pCode[1327]:                    const uint32_t = 22
            pCode[1328]:                    const uint32_t = 2
            pCode[1329]:                    const uint32_t = 7
            pCode[1330]:                    const uint32_t = 16
            pCode[1331]:                    const uint32_t = 327752
            pCode[1332]:                    const uint32_t = 22
            pCode[1333]:                    const uint32_t = 3
            pCode[1334]:                    const uint32_t = 35
            pCode[1335]:                    const uint32_t = 192
            pCode[1336]:                    const uint32_t = 327752
            pCode[1337]:                    const uint32_t = 22
            pCode[1338]:                    const uint32_t = 4
            pCode[1339]:                    const uint32_t = 35
            pCode[1340]:                    const uint32_t = 208
            pCode[1341]:                    const uint32_t = 327752
            pCode[1342]:                    const uint32_t = 22
            pCode[1343]:                    const uint32_t = 5
            pCode[1344]:                    const uint32_t = 35
            pCode[1345]:                    const uint32_t = 224
            pCode[1346]:                    const uint32_t = 327752
            pCode[1347]:                    const uint32_t = 22
            pCode[1348]:                    const uint32_t = 6
            pCode[1349]:                    const uint32_t = 35
            pCode[1350]:                    const uint32_t = 240
            pCode[1351]:                    const uint32_t = 327752
            pCode[1352]:                    const uint32_t = 22
            pCode[1353]:                    const uint32_t = 7
            pCode[1354]:                    const uint32_t = 35
            pCode[1355]:                    const uint32_t = 256
            pCode[1356]:                    const uint32_t = 196679
            pCode[1357]:                    const uint32_t = 22
            pCode[1358]:                    const uint32_t = 2
            pCode[1359]:                    const uint32_t = 262215
            pCode[1360]:                    const uint32_t = 24
            pCode[1361]:                    const uint32_t = 34
            pCode[1362]:                    const uint32_t = 0
            pCode[1363]:                    const uint32_t = 262215
            pCode[1364]:                    const uint32_t = 24
            pCode[1365]:                    const uint32_t = 33
            pCode[1366]:                    const uint32_t = 0
            pCode[1367]:                    const uint32_t = 327752
            pCode[1368]:                    const uint32_t = 38
            pCode[1369]:                    const uint32_t = 0
            pCode[1370]:                    const uint32_t = 35
            pCode[1371]:                    const uint32_t = 0
            pCode[1372]:                    const uint32_t = 327752
            pCode[1373]:                    const uint32_t = 38
            pCode[1374]:                    const uint32_t = 1
            pCode[1375]:                    const uint32_t = 35
            pCode[1376]:                    const uint32_t = 4
            pCode[1377]:                    const uint32_t = 327752
            pCode[1378]:                    const uint32_t = 38
            pCode[1379]:                    const uint32_t = 2
            pCode[1380]:                    const uint32_t = 35
            pCode[1381]:                    const uint32_t = 8
            pCode[1382]:                    const uint32_t = 327752
            pCode[1383]:                    const uint32_t = 38
            pCode[1384]:                    const uint32_t = 3
            pCode[1385]:                    const uint32_t = 35
            pCode[1386]:                    const uint32_t = 12
            pCode[1387]:                    const uint32_t = 262215
            pCode[1388]:                    const uint32_t = 39
            pCode[1389]:                    const uint32_t = 6
            pCode[1390]:                    const uint32_t = 16
            pCode[1391]:                    const uint32_t = 262216
            pCode[1392]:                    const uint32_t = 40
            pCode[1393]:                    const uint32_t = 0
            pCode[1394]:                    const uint32_t = 24
            pCode[1395]:                    const uint32_t = 327752
            pCode[1396]:                    const uint32_t = 40
            pCode[1397]:                    const uint32_t = 0
            pCode[1398]:                    const uint32_t = 35
            pCode[1399]:                    const uint32_t = 0
            pCode[1400]:                    const uint32_t = 196679
            pCode[1401]:                    const uint32_t = 40
            pCode[1402]:                    const uint32_t = 2
            pCode[1403]:                    const uint32_t = 262215
            pCode[1404]:                    const uint32_t = 42
            pCode[1405]:                    const uint32_t = 34
            pCode[1406]:                    const uint32_t = 0
            pCode[1407]:                    const uint32_t = 262215
            pCode[1408]:                    const uint32_t = 42
            pCode[1409]:                    const uint32_t = 33
            pCode[1410]:                    const uint32_t = 3
            pCode[1411]:                    const uint32_t = 327752
            pCode[1412]:                    const uint32_t = 52
            pCode[1413]:                    const uint32_t = 0
            pCode[1414]:                    const uint32_t = 35
            pCode[1415]:                    const uint32_t = 0
            pCode[1416]:                    const uint32_t = 327752
            pCode[1417]:                    const uint32_t = 52
            pCode[1418]:                    const uint32_t = 1
            pCode[1419]:                    const uint32_t = 35
            pCode[1420]:                    const uint32_t = 4
            pCode[1421]:                    const uint32_t = 327752
            pCode[1422]:                    const uint32_t = 52
            pCode[1423]:                    const uint32_t = 2
            pCode[1424]:                    const uint32_t = 35
            pCode[1425]:                    const uint32_t = 8
            pCode[1426]:                    const uint32_t = 327752
            pCode[1427]:                    const uint32_t = 52
            pCode[1428]:                    const uint32_t = 3
            pCode[1429]:                    const uint32_t = 35
            pCode[1430]:                    const uint32_t = 12
            pCode[1431]:                    const uint32_t = 262215
            pCode[1432]:                    const uint32_t = 53
            pCode[1433]:                    const uint32_t = 6
            pCode[1434]:                    const uint32_t = 16
            pCode[1435]:                    const uint32_t = 262216
            pCode[1436]:                    const uint32_t = 54
            pCode[1437]:                    const uint32_t = 0
            pCode[1438]:                    const uint32_t = 24
            pCode[1439]:                    const uint32_t = 327752
            pCode[1440]:                    const uint32_t = 54
            pCode[1441]:                    const uint32_t = 0
            pCode[1442]:                    const uint32_t = 35
            pCode[1443]:                    const uint32_t = 0
            pCode[1444]:                    const uint32_t = 196679
            pCode[1445]:                    const uint32_t = 54
            pCode[1446]:                    const uint32_t = 2
            pCode[1447]:                    const uint32_t = 262215
            pCode[1448]:                    const uint32_t = 56
            pCode[1449]:                    const uint32_t = 34
            pCode[1450]:                    const uint32_t = 0
            pCode[1451]:                    const uint32_t = 262215
            pCode[1452]:                    const uint32_t = 56
            pCode[1453]:                    const uint32_t = 33
            pCode[1454]:                    const uint32_t = 4
            pCode[1455]:                    const uint32_t = 262215
            pCode[1456]:                    const uint32_t = 92
            pCode[1457]:                    const uint32_t = 6
            pCode[1458]:                    const uint32_t = 4
            pCode[1459]:                    const uint32_t = 327752
            pCode[1460]:                    const uint32_t = 93
            pCode[1461]:                    const uint32_t = 0
            pCode[1462]:                    const uint32_t = 35
            pCode[1463]:                    const uint32_t = 0
            pCode[1464]:                    const uint32_t = 196679
            pCode[1465]:                    const uint32_t = 93
            pCode[1466]:                    const uint32_t = 2
            pCode[1467]:                    const uint32_t = 262215
            pCode[1468]:                    const uint32_t = 95
            pCode[1469]:                    const uint32_t = 34
            pCode[1470]:                    const uint32_t = 0
            pCode[1471]:                    const uint32_t = 262215
            pCode[1472]:                    const uint32_t = 95
            pCode[1473]:                    const uint32_t = 33
            pCode[1474]:                    const uint32_t = 1
            pCode[1475]:                    const uint32_t = 262215
            pCode[1476]:                    const uint32_t = 102
            pCode[1477]:                    const uint32_t = 6
            pCode[1478]:                    const uint32_t = 8
            pCode[1479]:                    const uint32_t = 327752
            pCode[1480]:                    const uint32_t = 103
            pCode[1481]:                    const uint32_t = 0
            pCode[1482]:                    const uint32_t = 35
            pCode[1483]:                    const uint32_t = 0
            pCode[1484]:                    const uint32_t = 196679
            pCode[1485]:                    const uint32_t = 103
            pCode[1486]:                    const uint32_t = 2
            pCode[1487]:                    const uint32_t = 327752
            pCode[1488]:                    const uint32_t = 104
            pCode[1489]:                    const uint32_t = 0
            pCode[1490]:                    const uint32_t = 35
            pCode[1491]:                    const uint32_t = 0
            pCode[1492]:                    const uint32_t = 327752
            pCode[1493]:                    const uint32_t = 104
            pCode[1494]:                    const uint32_t = 1
            pCode[1495]:                    const uint32_t = 35
            pCode[1496]:                    const uint32_t = 4
            pCode[1497]:                    const uint32_t = 327752
            pCode[1498]:                    const uint32_t = 104
            pCode[1499]:                    const uint32_t = 2
            pCode[1500]:                    const uint32_t = 35
            pCode[1501]:                    const uint32_t = 8
            pCode[1502]:                    const uint32_t = 327752
            pCode[1503]:                    const uint32_t = 104
            pCode[1504]:                    const uint32_t = 3
            pCode[1505]:                    const uint32_t = 35
            pCode[1506]:                    const uint32_t = 12
            pCode[1507]:                    const uint32_t = 327752
            pCode[1508]:                    const uint32_t = 104
            pCode[1509]:                    const uint32_t = 4
            pCode[1510]:                    const uint32_t = 35
            pCode[1511]:                    const uint32_t = 16
            pCode[1512]:                    const uint32_t = 327752
            pCode[1513]:                    const uint32_t = 104
            pCode[1514]:                    const uint32_t = 5
            pCode[1515]:                    const uint32_t = 35
            pCode[1516]:                    const uint32_t = 20
            pCode[1517]:                    const uint32_t = 327752
            pCode[1518]:                    const uint32_t = 104
            pCode[1519]:                    const uint32_t = 6
            pCode[1520]:                    const uint32_t = 35
            pCode[1521]:                    const uint32_t = 24
            pCode[1522]:                    const uint32_t = 327752
            pCode[1523]:                    const uint32_t = 104
            pCode[1524]:                    const uint32_t = 7
            pCode[1525]:                    const uint32_t = 35
            pCode[1526]:                    const uint32_t = 28
            pCode[1527]:                    const uint32_t = 262215
            pCode[1528]:                    const uint32_t = 105
            pCode[1529]:                    const uint32_t = 6
            pCode[1530]:                    const uint32_t = 32
            pCode[1531]:                    const uint32_t = 327752
            pCode[1532]:                    const uint32_t = 106
            pCode[1533]:                    const uint32_t = 0
            pCode[1534]:                    const uint32_t = 35
            pCode[1535]:                    const uint32_t = 0
            pCode[1536]:                    const uint32_t = 196679
            pCode[1537]:                    const uint32_t = 106
            pCode[1538]:                    const uint32_t = 2
            pCode[1539]:                    const uint32_t = 262215
            pCode[1540]:                    const uint32_t = 107
            pCode[1541]:                    const uint32_t = 6
            pCode[1542]:                    const uint32_t = 8
            pCode[1543]:                    const uint32_t = 262215
            pCode[1544]:                    const uint32_t = 109
            pCode[1545]:                    const uint32_t = 34
            pCode[1546]:                    const uint32_t = 0
            pCode[1547]:                    const uint32_t = 262215
            pCode[1548]:                    const uint32_t = 109
            pCode[1549]:                    const uint32_t = 33
            pCode[1550]:                    const uint32_t = 2
            pCode[1551]:                    const uint32_t = 327752
            pCode[1552]:                    const uint32_t = 121
            pCode[1553]:                    const uint32_t = 0
            pCode[1554]:                    const uint32_t = 35
            pCode[1555]:                    const uint32_t = 0
            pCode[1556]:                    const uint32_t = 327752
            pCode[1557]:                    const uint32_t = 121
            pCode[1558]:                    const uint32_t = 1
            pCode[1559]:                    const uint32_t = 35
            pCode[1560]:                    const uint32_t = 12
            pCode[1561]:                    const uint32_t = 327752
            pCode[1562]:                    const uint32_t = 121
            pCode[1563]:                    const uint32_t = 2
            pCode[1564]:                    const uint32_t = 35
            pCode[1565]:                    const uint32_t = 16
            pCode[1566]:                    const uint32_t = 327752
            pCode[1567]:                    const uint32_t = 121
            pCode[1568]:                    const uint32_t = 3
            pCode[1569]:                    const uint32_t = 35
            pCode[1570]:                    const uint32_t = 28
            pCode[1571]:                    const uint32_t = 327752
            pCode[1572]:                    const uint32_t = 121
            pCode[1573]:                    const uint32_t = 4
            pCode[1574]:                    const uint32_t = 35
            pCode[1575]:                    const uint32_t = 32
            pCode[1576]:                    const uint32_t = 262215
            pCode[1577]:                    const uint32_t = 122
            pCode[1578]:                    const uint32_t = 6
            pCode[1579]:                    const uint32_t = 48
            pCode[1580]:                    const uint32_t = 262216
            pCode[1581]:                    const uint32_t = 123
            pCode[1582]:                    const uint32_t = 0
            pCode[1583]:                    const uint32_t = 24
            pCode[1584]:                    const uint32_t = 327752
            pCode[1585]:                    const uint32_t = 123
            pCode[1586]:                    const uint32_t = 0
            pCode[1587]:                    const uint32_t = 35
            pCode[1588]:                    const uint32_t = 0
            pCode[1589]:                    const uint32_t = 196679
            pCode[1590]:                    const uint32_t = 123
            pCode[1591]:                    const uint32_t = 2
            pCode[1592]:                    const uint32_t = 262215
            pCode[1593]:                    const uint32_t = 125
            pCode[1594]:                    const uint32_t = 34
            pCode[1595]:                    const uint32_t = 0
            pCode[1596]:                    const uint32_t = 262215
            pCode[1597]:                    const uint32_t = 125
            pCode[1598]:                    const uint32_t = 33
            pCode[1599]:                    const uint32_t = 5
            pCode[1600]:                    const uint32_t = 262215
            pCode[1601]:                    const uint32_t = 126
            pCode[1602]:                    const uint32_t = 6
            pCode[1603]:                    const uint32_t = 64
            pCode[1604]:                    const uint32_t = 262216
            pCode[1605]:                    const uint32_t = 127
            pCode[1606]:                    const uint32_t = 0
            pCode[1607]:                    const uint32_t = 5
            pCode[1608]:                    const uint32_t = 262216
            pCode[1609]:                    const uint32_t = 127
            pCode[1610]:                    const uint32_t = 0
            pCode[1611]:                    const uint32_t = 24
            pCode[1612]:                    const uint32_t = 327752
            pCode[1613]:                    const uint32_t = 127
            pCode[1614]:                    const uint32_t = 0
            pCode[1615]:                    const uint32_t = 35
            pCode[1616]:                    const uint32_t = 0
            pCode[1617]:                    const uint32_t = 327752
            pCode[1618]:                    const uint32_t = 127
            pCode[1619]:                    const uint32_t = 0
            pCode[1620]:                    const uint32_t = 7
            pCode[1621]:                    const uint32_t = 16
            pCode[1622]:                    const uint32_t = 196679
            pCode[1623]:                    const uint32_t = 127
            pCode[1624]:                    const uint32_t = 2
            pCode[1625]:                    const uint32_t = 262215
            pCode[1626]:                    const uint32_t = 129
            pCode[1627]:                    const uint32_t = 34
            pCode[1628]:                    const uint32_t = 0
            pCode[1629]:                    const uint32_t = 262215
            pCode[1630]:                    const uint32_t = 129
            pCode[1631]:                    const uint32_t = 33
            pCode[1632]:                    const uint32_t = 6
            pCode[1633]:                    const uint32_t = 262215
            pCode[1634]:                    const uint32_t = 134
            pCode[1635]:                    const uint32_t = 34
            pCode[1636]:                    const uint32_t = 0
            pCode[1637]:                    const uint32_t = 262215
            pCode[1638]:                    const uint32_t = 134
            pCode[1639]:                    const uint32_t = 33
            pCode[1640]:                    const uint32_t = 7
            pCode[1641]:                    const uint32_t = 131091
            pCode[1642]:                    const uint32_t = 4
            pCode[1643]:                    const uint32_t = 196641
            pCode[1644]:                    const uint32_t = 5
            pCode[1645]:                    const uint32_t = 4
            pCode[1646]:                    const uint32_t = 262165
            pCode[1647]:                    const uint32_t = 8
            pCode[1648]:                    const uint32_t = 32
            pCode[1649]:                    const uint32_t = 0
            pCode[1650]:                    const uint32_t = 262176
            pCode[1651]:                    const uint32_t = 9
            pCode[1652]:                    const uint32_t = 7
            pCode[1653]:                    const uint32_t = 8
            pCode[1654]:                    const uint32_t = 262167
            pCode[1655]:                    const uint32_t = 11
            pCode[1656]:                    const uint32_t = 8
            pCode[1657]:                    const uint32_t = 3
            pCode[1658]:                    const uint32_t = 262176
            pCode[1659]:                    const uint32_t = 12
            pCode[1660]:                    const uint32_t = 1
            pCode[1661]:                    const uint32_t = 11
            pCode[1662]:                    const uint32_t = 262203
            pCode[1663]:                    const uint32_t = 12
            pCode[1664]:                    const uint32_t = 13
            pCode[1665]:                    const uint32_t = 1
            pCode[1666]:                    const uint32_t = 262187
            pCode[1667]:                    const uint32_t = 8
            pCode[1668]:                    const uint32_t = 14
            pCode[1669]:                    const uint32_t = 0
            pCode[1670]:                    const uint32_t = 262176
            pCode[1671]:                    const uint32_t = 15
            pCode[1672]:                    const uint32_t = 1
            pCode[1673]:                    const uint32_t = 8
            pCode[1674]:                    const uint32_t = 196630
            pCode[1675]:                    const uint32_t = 19
            pCode[1676]:                    const uint32_t = 32
            pCode[1677]:                    const uint32_t = 262167
            pCode[1678]:                    const uint32_t = 20
            pCode[1679]:                    const uint32_t = 19
            pCode[1680]:                    const uint32_t = 4
            pCode[1681]:                    const uint32_t = 262168
            pCode[1682]:                    const uint32_t = 21
            pCode[1683]:                    const uint32_t = 20
            pCode[1684]:                    const uint32_t = 4
            pCode[1685]:                    const uint32_t = 655390
            pCode[1686]:                    const uint32_t = 22
            pCode[1687]:                    const uint32_t = 21
            pCode[1688]:                    const uint32_t = 21
            pCode[1689]:                    const uint32_t = 21
            pCode[1690]:                    const uint32_t = 20
            pCode[1691]:                    const uint32_t = 20
            pCode[1692]:                    const uint32_t = 20
            pCode[1693]:                    const uint32_t = 20
            pCode[1694]:                    const uint32_t = 8
            pCode[1695]:                    const uint32_t = 262176
            pCode[1696]:                    const uint32_t = 23
            pCode[1697]:                    const uint32_t = 2
            pCode[1698]:                    const uint32_t = 22
            pCode[1699]:                    const uint32_t = 262203
            pCode[1700]:                    const uint32_t = 23
            pCode[1701]:                    const uint32_t = 24
            pCode[1702]:                    const uint32_t = 2
            pCode[1703]:                    const uint32_t = 262165
            pCode[1704]:                    const uint32_t = 25
            pCode[1705]:                    const uint32_t = 32
            pCode[1706]:                    const uint32_t = 1
            pCode[1707]:                    const uint32_t = 262187
            pCode[1708]:                    const uint32_t = 25
            pCode[1709]:                    const uint32_t = 26
            pCode[1710]:                    const uint32_t = 7
            pCode[1711]:                    const uint32_t = 262176
            pCode[1712]:                    const uint32_t = 27
            pCode[1713]:                    const uint32_t = 2
            pCode[1714]:                    const uint32_t = 8
            pCode[1715]:                    const uint32_t = 131092
            pCode[1716]:                    const uint32_t = 30
            pCode[1717]:                    const uint32_t = 393246
            pCode[1718]:                    const uint32_t = 35
            pCode[1719]:                    const uint32_t = 8
            pCode[1720]:                    const uint32_t = 8
            pCode[1721]:                    const uint32_t = 8
            pCode[1722]:                    const uint32_t = 8
            pCode[1723]:                    const uint32_t = 262176
            pCode[1724]:                    const uint32_t = 36
            pCode[1725]:                    const uint32_t = 7
            pCode[1726]:                    const uint32_t = 35
            pCode[1727]:                    const uint32_t = 393246
            pCode[1728]:                    const uint32_t = 38
            pCode[1729]:                    const uint32_t = 8
            pCode[1730]:                    const uint32_t = 8
            pCode[1731]:                    const uint32_t = 8
            pCode[1732]:                    const uint32_t = 8
            pCode[1733]:                    const uint32_t = 196637
            pCode[1734]:                    const uint32_t = 39
            pCode[1735]:                    const uint32_t = 38
            pCode[1736]:                    const uint32_t = 196638
            pCode[1737]:                    const uint32_t = 40
            pCode[1738]:                    const uint32_t = 39
            pCode[1739]:                    const uint32_t = 262176
            pCode[1740]:                    const uint32_t = 41
            pCode[1741]:                    const uint32_t = 12
            pCode[1742]:                    const uint32_t = 40
            pCode[1743]:                    const uint32_t = 262203
            pCode[1744]:                    const uint32_t = 41
            pCode[1745]:                    const uint32_t = 42
            pCode[1746]:                    const uint32_t = 12
            pCode[1747]:                    const uint32_t = 262187
            pCode[1748]:                    const uint32_t = 25
            pCode[1749]:                    const uint32_t = 43
            pCode[1750]:                    const uint32_t = 0
            pCode[1751]:                    const uint32_t = 262176
            pCode[1752]:                    const uint32_t = 45
            pCode[1753]:                    const uint32_t = 12
            pCode[1754]:                    const uint32_t = 38
            pCode[1755]:                    const uint32_t = 393246
            pCode[1756]:                    const uint32_t = 49
            pCode[1757]:                    const uint32_t = 8
            pCode[1758]:                    const uint32_t = 8
            pCode[1759]:                    const uint32_t = 25
            pCode[1760]:                    const uint32_t = 8
            pCode[1761]:                    const uint32_t = 262176
            pCode[1762]:                    const uint32_t = 50
            pCode[1763]:                    const uint32_t = 7
            pCode[1764]:                    const uint32_t = 49
            pCode[1765]:                    const uint32_t = 393246
            pCode[1766]:                    const uint32_t = 52
            pCode[1767]:                    const uint32_t = 8
            pCode[1768]:                    const uint32_t = 8
            pCode[1769]:                    const uint32_t = 25
            pCode[1770]:                    const uint32_t = 8
            pCode[1771]:                    const uint32_t = 196637
            pCode[1772]:                    const uint32_t = 53
            pCode[1773]:                    const uint32_t = 52
            pCode[1774]:                    const uint32_t = 196638
            pCode[1775]:                    const uint32_t = 54
            pCode[1776]:                    const uint32_t = 53
            pCode[1777]:                    const uint32_t = 262176
            pCode[1778]:                    const uint32_t = 55
            pCode[1779]:                    const uint32_t = 12
            pCode[1780]:                    const uint32_t = 54
            pCode[1781]:                    const uint32_t = 262203
            pCode[1782]:                    const uint32_t = 55
            pCode[1783]:                    const uint32_t = 56
            pCode[1784]:                    const uint32_t = 12
            pCode[1785]:                    const uint32_t = 262187
            pCode[1786]:                    const uint32_t = 25
            pCode[1787]:                    const uint32_t = 57
            pCode[1788]:                    const uint32_t = 2
            pCode[1789]:                    const uint32_t = 262176
            pCode[1790]:                    const uint32_t = 60
            pCode[1791]:                    const uint32_t = 12
            pCode[1792]:                    const uint32_t = 52
            pCode[1793]:                    const uint32_t = 655390
            pCode[1794]:                    const uint32_t = 64
            pCode[1795]:                    const uint32_t = 8
            pCode[1796]:                    const uint32_t = 8
            pCode[1797]:                    const uint32_t = 8
            pCode[1798]:                    const uint32_t = 25
            pCode[1799]:                    const uint32_t = 8
            pCode[1800]:                    const uint32_t = 8
            pCode[1801]:                    const uint32_t = 8
            pCode[1802]:                    const uint32_t = 8
            pCode[1803]:                    const uint32_t = 262176
            pCode[1804]:                    const uint32_t = 65
            pCode[1805]:                    const uint32_t = 7
            pCode[1806]:                    const uint32_t = 64
            pCode[1807]:                    const uint32_t = 262187
            pCode[1808]:                    const uint32_t = 25
            pCode[1809]:                    const uint32_t = 67
            pCode[1810]:                    const uint32_t = 1
            pCode[1811]:                    const uint32_t = 262187
            pCode[1812]:                    const uint32_t = 8
            pCode[1813]:                    const uint32_t = 71
            pCode[1814]:                    const uint32_t = 1
            pCode[1815]:                    const uint32_t = 262187
            pCode[1816]:                    const uint32_t = 25
            pCode[1817]:                    const uint32_t = 76
            pCode[1818]:                    const uint32_t = 3
            pCode[1819]:                    const uint32_t = 262176
            pCode[1820]:                    const uint32_t = 77
            pCode[1821]:                    const uint32_t = 7
            pCode[1822]:                    const uint32_t = 25
            pCode[1823]:                    const uint32_t = 262187
            pCode[1824]:                    const uint32_t = 25
            pCode[1825]:                    const uint32_t = 81
            pCode[1826]:                    const uint32_t = 4
            pCode[1827]:                    const uint32_t = 262187
            pCode[1828]:                    const uint32_t = 25
            pCode[1829]:                    const uint32_t = 83
            pCode[1830]:                    const uint32_t = 5
            pCode[1831]:                    const uint32_t = 262187
            pCode[1832]:                    const uint32_t = 25
            pCode[1833]:                    const uint32_t = 87
            pCode[1834]:                    const uint32_t = 6
            pCode[1835]:                    const uint32_t = 196637
            pCode[1836]:                    const uint32_t = 92
            pCode[1837]:                    const uint32_t = 8
            pCode[1838]:                    const uint32_t = 196638
            pCode[1839]:                    const uint32_t = 93
            pCode[1840]:                    const uint32_t = 92
            pCode[1841]:                    const uint32_t = 262176
            pCode[1842]:                    const uint32_t = 94
            pCode[1843]:                    const uint32_t = 12
            pCode[1844]:                    const uint32_t = 93
            pCode[1845]:                    const uint32_t = 262203
            pCode[1846]:                    const uint32_t = 94
            pCode[1847]:                    const uint32_t = 95
            pCode[1848]:                    const uint32_t = 12
            pCode[1849]:                    const uint32_t = 262176
            pCode[1850]:                    const uint32_t = 98
            pCode[1851]:                    const uint32_t = 12
            pCode[1852]:                    const uint32_t = 8
            pCode[1853]:                    const uint32_t = 196647
            pCode[1854]:                    const uint32_t = 101
            pCode[1855]:                    const uint32_t = 5349
            pCode[1856]:                    const uint32_t = 196637
            pCode[1857]:                    const uint32_t = 102
            pCode[1858]:                    const uint32_t = 101
            pCode[1859]:                    const uint32_t = 196638
            pCode[1860]:                    const uint32_t = 103
            pCode[1861]:                    const uint32_t = 102
            pCode[1862]:                    const uint32_t = 655390
            pCode[1863]:                    const uint32_t = 104
            pCode[1864]:                    const uint32_t = 8
            pCode[1865]:                    const uint32_t = 8
            pCode[1866]:                    const uint32_t = 8
            pCode[1867]:                    const uint32_t = 25
            pCode[1868]:                    const uint32_t = 8
            pCode[1869]:                    const uint32_t = 8
            pCode[1870]:                    const uint32_t = 8
            pCode[1871]:                    const uint32_t = 8
            pCode[1872]:                    const uint32_t = 196637
            pCode[1873]:                    const uint32_t = 105
            pCode[1874]:                    const uint32_t = 104
            pCode[1875]:                    const uint32_t = 196638
            pCode[1876]:                    const uint32_t = 106
            pCode[1877]:                    const uint32_t = 105
            pCode[1878]:                    const uint32_t = 262176
            pCode[1879]:                    const uint32_t = 101
            pCode[1880]:                    const uint32_t = 5349
            pCode[1881]:                    const uint32_t = 106
            pCode[1882]:                    const uint32_t = 196637
            pCode[1883]:                    const uint32_t = 107
            pCode[1884]:                    const uint32_t = 101
            pCode[1885]:                    const uint32_t = 262176
            pCode[1886]:                    const uint32_t = 108
            pCode[1887]:                    const uint32_t = 12
            pCode[1888]:                    const uint32_t = 103
            pCode[1889]:                    const uint32_t = 262203
            pCode[1890]:                    const uint32_t = 108
            pCode[1891]:                    const uint32_t = 109
            pCode[1892]:                    const uint32_t = 12
            pCode[1893]:                    const uint32_t = 262176
            pCode[1894]:                    const uint32_t = 112
            pCode[1895]:                    const uint32_t = 12
            pCode[1896]:                    const uint32_t = 101
            pCode[1897]:                    const uint32_t = 262176
            pCode[1898]:                    const uint32_t = 117
            pCode[1899]:                    const uint32_t = 5349
            pCode[1900]:                    const uint32_t = 104
            pCode[1901]:                    const uint32_t = 262167
            pCode[1902]:                    const uint32_t = 120
            pCode[1903]:                    const uint32_t = 19
            pCode[1904]:                    const uint32_t = 3
            pCode[1905]:                    const uint32_t = 458782
            pCode[1906]:                    const uint32_t = 121
            pCode[1907]:                    const uint32_t = 120
            pCode[1908]:                    const uint32_t = 19
            pCode[1909]:                    const uint32_t = 120
            pCode[1910]:                    const uint32_t = 19
            pCode[1911]:                    const uint32_t = 20
            pCode[1912]:                    const uint32_t = 196637
            pCode[1913]:                    const uint32_t = 122
            pCode[1914]:                    const uint32_t = 121
            pCode[1915]:                    const uint32_t = 196638
            pCode[1916]:                    const uint32_t = 123
            pCode[1917]:                    const uint32_t = 122
            pCode[1918]:                    const uint32_t = 262176
            pCode[1919]:                    const uint32_t = 124
            pCode[1920]:                    const uint32_t = 12
            pCode[1921]:                    const uint32_t = 123
            pCode[1922]:                    const uint32_t = 262203
            pCode[1923]:                    const uint32_t = 124
            pCode[1924]:                    const uint32_t = 125
            pCode[1925]:                    const uint32_t = 12
            pCode[1926]:                    const uint32_t = 196637
            pCode[1927]:                    const uint32_t = 126
            pCode[1928]:                    const uint32_t = 21
            pCode[1929]:                    const uint32_t = 196638
            pCode[1930]:                    const uint32_t = 127
            pCode[1931]:                    const uint32_t = 126
            pCode[1932]:                    const uint32_t = 262176
            pCode[1933]:                    const uint32_t = 128
            pCode[1934]:                    const uint32_t = 12
            pCode[1935]:                    const uint32_t = 127
            pCode[1936]:                    const uint32_t = 262203
            pCode[1937]:                    const uint32_t = 128
            pCode[1938]:                    const uint32_t = 129
            pCode[1939]:                    const uint32_t = 12
            pCode[1940]:                    const uint32_t = 589849
            pCode[1941]:                    const uint32_t = 130
            pCode[1942]:                    const uint32_t = 19
            pCode[1943]:                    const uint32_t = 1
            pCode[1944]:                    const uint32_t = 0
            pCode[1945]:                    const uint32_t = 0
            pCode[1946]:                    const uint32_t = 0
            pCode[1947]:                    const uint32_t = 1
            pCode[1948]:                    const uint32_t = 0
            pCode[1949]:                    const uint32_t = 196635
            pCode[1950]:                    const uint32_t = 131
            pCode[1951]:                    const uint32_t = 130
            pCode[1952]:                    const uint32_t = 262172
            pCode[1953]:                    const uint32_t = 132
            pCode[1954]:                    const uint32_t = 131
            pCode[1955]:                    const uint32_t = 71
            pCode[1956]:                    const uint32_t = 262176
            pCode[1957]:                    const uint32_t = 133
            pCode[1958]:                    const uint32_t = 0
            pCode[1959]:                    const uint32_t = 132
            pCode[1960]:                    const uint32_t = 262203
            pCode[1961]:                    const uint32_t = 133
            pCode[1962]:                    const uint32_t = 134
            pCode[1963]:                    const uint32_t = 0
            pCode[1964]:                    const uint32_t = 262187
            pCode[1965]:                    const uint32_t = 8
            pCode[1966]:                    const uint32_t = 135
            pCode[1967]:                    const uint32_t = 32
            pCode[1968]:                    const uint32_t = 393260
            pCode[1969]:                    const uint32_t = 11
            pCode[1970]:                    const uint32_t = 136
            pCode[1971]:                    const uint32_t = 135
            pCode[1972]:                    const uint32_t = 71
            pCode[1973]:                    const uint32_t = 71
            pCode[1974]:                    const uint32_t = 262152
            pCode[1975]:                    const uint32_t = 1
            pCode[1976]:                    const uint32_t = 12
            pCode[1977]:                    const uint32_t = 11
            pCode[1978]:                    const uint32_t = 327734
            pCode[1979]:                    const uint32_t = 4
            pCode[1980]:                    const uint32_t = 6
            pCode[1981]:                    const uint32_t = 0
            pCode[1982]:                    const uint32_t = 5
            pCode[1983]:                    const uint32_t = 131320
            pCode[1984]:                    const uint32_t = 7
            pCode[1985]:                    const uint32_t = 262203
            pCode[1986]:                    const uint32_t = 9
            pCode[1987]:                    const uint32_t = 10
            pCode[1988]:                    const uint32_t = 7
            pCode[1989]:                    const uint32_t = 262203
            pCode[1990]:                    const uint32_t = 36
            pCode[1991]:                    const uint32_t = 37
            pCode[1992]:                    const uint32_t = 7
            pCode[1993]:                    const uint32_t = 262203
            pCode[1994]:                    const uint32_t = 50
            pCode[1995]:                    const uint32_t = 51
            pCode[1996]:                    const uint32_t = 7
            pCode[1997]:                    const uint32_t = 262203
            pCode[1998]:                    const uint32_t = 65
            pCode[1999]:                    const uint32_t = 66
            pCode[2000]:                    const uint32_t = 7
            pCode[2001]:                    const uint32_t = 262203
            pCode[2002]:                    const uint32_t = 9
            pCode[2003]:                    const uint32_t = 91
            pCode[2004]:                    const uint32_t = 7
            pCode[2005]:                    const uint32_t = 262152
            pCode[2006]:                    const uint32_t = 1
            pCode[2007]:                    const uint32_t = 13
            pCode[2008]:                    const uint32_t = 0
            pCode[2009]:                    const uint32_t = 327745
            pCode[2010]:                    const uint32_t = 15
            pCode[2011]:                    const uint32_t = 16
            pCode[2012]:                    const uint32_t = 13
            pCode[2013]:                    const uint32_t = 14
            pCode[2014]:                    const uint32_t = 262205
            pCode[2015]:                    const uint32_t = 8
            pCode[2016]:                    const uint32_t = 17
            pCode[2017]:                    const uint32_t = 16
            pCode[2018]:                    const uint32_t = 196670
            pCode[2019]:                    const uint32_t = 10
            pCode[2020]:                    const uint32_t = 17
            pCode[2021]:                    const uint32_t = 262152
            pCode[2022]:                    const uint32_t = 1
            pCode[2023]:                    const uint32_t = 14
            pCode[2024]:                    const uint32_t = 0
            pCode[2025]:                    const uint32_t = 262205
            pCode[2026]:                    const uint32_t = 8
            pCode[2027]:                    const uint32_t = 18
            pCode[2028]:                    const uint32_t = 10
            pCode[2029]:                    const uint32_t = 327745
            pCode[2030]:                    const uint32_t = 27
            pCode[2031]:                    const uint32_t = 28
            pCode[2032]:                    const uint32_t = 24
            pCode[2033]:                    const uint32_t = 26
            pCode[2034]:                    const uint32_t = 262205
            pCode[2035]:                    const uint32_t = 8
            pCode[2036]:                    const uint32_t = 29
            pCode[2037]:                    const uint32_t = 28
            pCode[2038]:                    const uint32_t = 327854
            pCode[2039]:                    const uint32_t = 30
            pCode[2040]:                    const uint32_t = 31
            pCode[2041]:                    const uint32_t = 18
            pCode[2042]:                    const uint32_t = 29
            pCode[2043]:                    const uint32_t = 196855
            pCode[2044]:                    const uint32_t = 33
            pCode[2045]:                    const uint32_t = 0
            pCode[2046]:                    const uint32_t = 262394
            pCode[2047]:                    const uint32_t = 31
            pCode[2048]:                    const uint32_t = 32
            pCode[2049]:                    const uint32_t = 33
            pCode[2050]:                    const uint32_t = 131320
            pCode[2051]:                    const uint32_t = 32
            pCode[2052]:                    const uint32_t = 262152
            pCode[2053]:                    const uint32_t = 1
            pCode[2054]:                    const uint32_t = 15
            pCode[2055]:                    const uint32_t = 0
            pCode[2056]:                    const uint32_t = 65789
            pCode[2057]:                    const uint32_t = 131320
            pCode[2058]:                    const uint32_t = 33
            pCode[2059]:                    const uint32_t = 262152
            pCode[2060]:                    const uint32_t = 1
            pCode[2061]:                    const uint32_t = 17
            pCode[2062]:                    const uint32_t = 0
            pCode[2063]:                    const uint32_t = 262205
            pCode[2064]:                    const uint32_t = 8
            pCode[2065]:                    const uint32_t = 44
            pCode[2066]:                    const uint32_t = 10
            pCode[2067]:                    const uint32_t = 393281
            pCode[2068]:                    const uint32_t = 45
            pCode[2069]:                    const uint32_t = 46
            pCode[2070]:                    const uint32_t = 42
            pCode[2071]:                    const uint32_t = 43
            pCode[2072]:                    const uint32_t = 44
            pCode[2073]:                    const uint32_t = 262205
            pCode[2074]:                    const uint32_t = 38
            pCode[2075]:                    const uint32_t = 47
            pCode[2076]:                    const uint32_t = 46
            pCode[2077]:                    const uint32_t = 262544
            pCode[2078]:                    const uint32_t = 35
            pCode[2079]:                    const uint32_t = 48
            pCode[2080]:                    const uint32_t = 47
            pCode[2081]:                    const uint32_t = 196670
            pCode[2082]:                    const uint32_t = 37
            pCode[2083]:                    const uint32_t = 48
            pCode[2084]:                    const uint32_t = 262152
            pCode[2085]:                    const uint32_t = 1
            pCode[2086]:                    const uint32_t = 18
            pCode[2087]:                    const uint32_t = 0
            pCode[2088]:                    const uint32_t = 327745
            pCode[2089]:                    const uint32_t = 9
            pCode[2090]:                    const uint32_t = 58
            pCode[2091]:                    const uint32_t = 37
            pCode[2092]:                    const uint32_t = 57
            pCode[2093]:                    const uint32_t = 262205
            pCode[2094]:                    const uint32_t = 8
            pCode[2095]:                    const uint32_t = 59
            pCode[2096]:                    const uint32_t = 58
            pCode[2097]:                    const uint32_t = 393281
            pCode[2098]:                    const uint32_t = 60
            pCode[2099]:                    const uint32_t = 61
            pCode[2100]:                    const uint32_t = 56
            pCode[2101]:                    const uint32_t = 43
            pCode[2102]:                    const uint32_t = 59
            pCode[2103]:                    const uint32_t = 262205
            pCode[2104]:                    const uint32_t = 52
            pCode[2105]:                    const uint32_t = 62
            pCode[2106]:                    const uint32_t = 61
            pCode[2107]:                    const uint32_t = 262544
            pCode[2108]:                    const uint32_t = 49
            pCode[2109]:                    const uint32_t = 63
            pCode[2110]:                    const uint32_t = 62
            pCode[2111]:                    const uint32_t = 196670
            pCode[2112]:                    const uint32_t = 51
            pCode[2113]:                    const uint32_t = 63
            pCode[2114]:                    const uint32_t = 262152
            pCode[2115]:                    const uint32_t = 1
            pCode[2116]:                    const uint32_t = 20
            pCode[2117]:                    const uint32_t = 0
            pCode[2118]:                    const uint32_t = 327745
            pCode[2119]:                    const uint32_t = 9
            pCode[2120]:                    const uint32_t = 68
            pCode[2121]:                    const uint32_t = 51
            pCode[2122]:                    const uint32_t = 67
            pCode[2123]:                    const uint32_t = 262205
            pCode[2124]:                    const uint32_t = 8
            pCode[2125]:                    const uint32_t = 69
            pCode[2126]:                    const uint32_t = 68
            pCode[2127]:                    const uint32_t = 327745
            pCode[2128]:                    const uint32_t = 9
            pCode[2129]:                    const uint32_t = 70
            pCode[2130]:                    const uint32_t = 66
            pCode[2131]:                    const uint32_t = 43
            pCode[2132]:                    const uint32_t = 196670
            pCode[2133]:                    const uint32_t = 70
            pCode[2134]:                    const uint32_t = 69
            pCode[2135]:                    const uint32_t = 262152
            pCode[2136]:                    const uint32_t = 1
            pCode[2137]:                    const uint32_t = 21
            pCode[2138]:                    const uint32_t = 0
            pCode[2139]:                    const uint32_t = 327745
            pCode[2140]:                    const uint32_t = 9
            pCode[2141]:                    const uint32_t = 72
            pCode[2142]:                    const uint32_t = 66
            pCode[2143]:                    const uint32_t = 67
            pCode[2144]:                    const uint32_t = 196670
            pCode[2145]:                    const uint32_t = 72
            pCode[2146]:                    const uint32_t = 71
            pCode[2147]:                    const uint32_t = 262152
            pCode[2148]:                    const uint32_t = 1
            pCode[2149]:                    const uint32_t = 22
            pCode[2150]:                    const uint32_t = 0
            pCode[2151]:                    const uint32_t = 327745
            pCode[2152]:                    const uint32_t = 9
            pCode[2153]:                    const uint32_t = 73
            pCode[2154]:                    const uint32_t = 51
            pCode[2155]:                    const uint32_t = 43
            pCode[2156]:                    const uint32_t = 262205
            pCode[2157]:                    const uint32_t = 8
            pCode[2158]:                    const uint32_t = 74
            pCode[2159]:                    const uint32_t = 73
            pCode[2160]:                    const uint32_t = 327745
            pCode[2161]:                    const uint32_t = 9
            pCode[2162]:                    const uint32_t = 75
            pCode[2163]:                    const uint32_t = 66
            pCode[2164]:                    const uint32_t = 57
            pCode[2165]:                    const uint32_t = 196670
            pCode[2166]:                    const uint32_t = 75
            pCode[2167]:                    const uint32_t = 74
            pCode[2168]:                    const uint32_t = 262152
            pCode[2169]:                    const uint32_t = 1
            pCode[2170]:                    const uint32_t = 23
            pCode[2171]:                    const uint32_t = 0
            pCode[2172]:                    const uint32_t = 327745
            pCode[2173]:                    const uint32_t = 77
            pCode[2174]:                    const uint32_t = 78
            pCode[2175]:                    const uint32_t = 51
            pCode[2176]:                    const uint32_t = 57
            pCode[2177]:                    const uint32_t = 262205
            pCode[2178]:                    const uint32_t = 25
            pCode[2179]:                    const uint32_t = 79
            pCode[2180]:                    const uint32_t = 78
            pCode[2181]:                    const uint32_t = 327745
            pCode[2182]:                    const uint32_t = 77
            pCode[2183]:                    const uint32_t = 80
            pCode[2184]:                    const uint32_t = 66
            pCode[2185]:                    const uint32_t = 76
            pCode[2186]:                    const uint32_t = 196670
            pCode[2187]:                    const uint32_t = 80
            pCode[2188]:                    const uint32_t = 79
            pCode[2189]:                    const uint32_t = 262152
            pCode[2190]:                    const uint32_t = 1
            pCode[2191]:                    const uint32_t = 24
            pCode[2192]:                    const uint32_t = 0
            pCode[2193]:                    const uint32_t = 327745
            pCode[2194]:                    const uint32_t = 9
            pCode[2195]:                    const uint32_t = 82
            pCode[2196]:                    const uint32_t = 66
            pCode[2197]:                    const uint32_t = 81
            pCode[2198]:                    const uint32_t = 196670
            pCode[2199]:                    const uint32_t = 82
            pCode[2200]:                    const uint32_t = 14
            pCode[2201]:                    const uint32_t = 262152
            pCode[2202]:                    const uint32_t = 1
            pCode[2203]:                    const uint32_t = 25
            pCode[2204]:                    const uint32_t = 0
            pCode[2205]:                    const uint32_t = 327745
            pCode[2206]:                    const uint32_t = 9
            pCode[2207]:                    const uint32_t = 84
            pCode[2208]:                    const uint32_t = 37
            pCode[2209]:                    const uint32_t = 67
            pCode[2210]:                    const uint32_t = 262205
            pCode[2211]:                    const uint32_t = 8
            pCode[2212]:                    const uint32_t = 85
            pCode[2213]:                    const uint32_t = 84
            pCode[2214]:                    const uint32_t = 327745
            pCode[2215]:                    const uint32_t = 9
            pCode[2216]:                    const uint32_t = 86
            pCode[2217]:                    const uint32_t = 66
            pCode[2218]:                    const uint32_t = 83
            pCode[2219]:                    const uint32_t = 196670
            pCode[2220]:                    const uint32_t = 86
            pCode[2221]:                    const uint32_t = 85
            pCode[2222]:                    const uint32_t = 262152
            pCode[2223]:                    const uint32_t = 1
            pCode[2224]:                    const uint32_t = 26
            pCode[2225]:                    const uint32_t = 0
            pCode[2226]:                    const uint32_t = 327745
            pCode[2227]:                    const uint32_t = 9
            pCode[2228]:                    const uint32_t = 88
            pCode[2229]:                    const uint32_t = 37
            pCode[2230]:                    const uint32_t = 76
            pCode[2231]:                    const uint32_t = 262205
            pCode[2232]:                    const uint32_t = 8
            pCode[2233]:                    const uint32_t = 89
            pCode[2234]:                    const uint32_t = 88
            pCode[2235]:                    const uint32_t = 327745
            pCode[2236]:                    const uint32_t = 9
            pCode[2237]:                    const uint32_t = 90
            pCode[2238]:                    const uint32_t = 66
            pCode[2239]:                    const uint32_t = 87
            pCode[2240]:                    const uint32_t = 196670
            pCode[2241]:                    const uint32_t = 90
            pCode[2242]:                    const uint32_t = 89
            pCode[2243]:                    const uint32_t = 262152
            pCode[2244]:                    const uint32_t = 1
            pCode[2245]:                    const uint32_t = 28
            pCode[2246]:                    const uint32_t = 0
            pCode[2247]:                    const uint32_t = 327745
            pCode[2248]:                    const uint32_t = 9
            pCode[2249]:                    const uint32_t = 96
            pCode[2250]:                    const uint32_t = 37
            pCode[2251]:                    const uint32_t = 43
            pCode[2252]:                    const uint32_t = 262205
            pCode[2253]:                    const uint32_t = 8
            pCode[2254]:                    const uint32_t = 97
            pCode[2255]:                    const uint32_t = 96
            pCode[2256]:                    const uint32_t = 393281
            pCode[2257]:                    const uint32_t = 98
            pCode[2258]:                    const uint32_t = 99
            pCode[2259]:                    const uint32_t = 95
            pCode[2260]:                    const uint32_t = 43
            pCode[2261]:                    const uint32_t = 97
            pCode[2262]:                    const uint32_t = 458986
            pCode[2263]:                    const uint32_t = 8
            pCode[2264]:                    const uint32_t = 100
            pCode[2265]:                    const uint32_t = 99
            pCode[2266]:                    const uint32_t = 71
            pCode[2267]:                    const uint32_t = 14
            pCode[2268]:                    const uint32_t = 71
            pCode[2269]:                    const uint32_t = 196670
            pCode[2270]:                    const uint32_t = 91
            pCode[2271]:                    const uint32_t = 100
            pCode[2272]:                    const uint32_t = 262152
            pCode[2273]:                    const uint32_t = 1
            pCode[2274]:                    const uint32_t = 29
            pCode[2275]:                    const uint32_t = 0
            pCode[2276]:                    const uint32_t = 327745
            pCode[2277]:                    const uint32_t = 9
            pCode[2278]:                    const uint32_t = 110
            pCode[2279]:                    const uint32_t = 37
            pCode[2280]:                    const uint32_t = 43
            pCode[2281]:                    const uint32_t = 262205
            pCode[2282]:                    const uint32_t = 8
            pCode[2283]:                    const uint32_t = 111
            pCode[2284]:                    const uint32_t = 110
            pCode[2285]:                    const uint32_t = 393281
            pCode[2286]:                    const uint32_t = 112
            pCode[2287]:                    const uint32_t = 113
            pCode[2288]:                    const uint32_t = 109
            pCode[2289]:                    const uint32_t = 43
            pCode[2290]:                    const uint32_t = 111
            pCode[2291]:                    const uint32_t = 262205
            pCode[2292]:                    const uint32_t = 101
            pCode[2293]:                    const uint32_t = 114
            pCode[2294]:                    const uint32_t = 113
            pCode[2295]:                    const uint32_t = 262205
            pCode[2296]:                    const uint32_t = 8
            pCode[2297]:                    const uint32_t = 115
            pCode[2298]:                    const uint32_t = 91
            pCode[2299]:                    const uint32_t = 262205
            pCode[2300]:                    const uint32_t = 64
            pCode[2301]:                    const uint32_t = 116
            pCode[2302]:                    const uint32_t = 66
            pCode[2303]:                    const uint32_t = 393281
            pCode[2304]:                    const uint32_t = 117
            pCode[2305]:                    const uint32_t = 118
            pCode[2306]:                    const uint32_t = 114
            pCode[2307]:                    const uint32_t = 43
            pCode[2308]:                    const uint32_t = 115
            pCode[2309]:                    const uint32_t = 262544
            pCode[2310]:                    const uint32_t = 104
            pCode[2311]:                    const uint32_t = 119
            pCode[2312]:                    const uint32_t = 116
            pCode[2313]:                    const uint32_t = 327742
            pCode[2314]:                    const uint32_t = 118
            pCode[2315]:                    const uint32_t = 119
            pCode[2316]:                    const uint32_t = 2
            pCode[2317]:                    const uint32_t = 16
            pCode[2318]:                    const uint32_t = 65789
            pCode[2319]:                    const uint32_t = 65592
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 45D6D1000000004C

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 00000097A053F188:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 00000240C1E47060
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 59FFE0000000003D [Scene Descriptor Set Layout]
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 73A850000000004D

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE_LAYOUT (17)
        objectHandle:                   uint64_t = 8333999071379325005
        pObjectName:                    const char* = "Draw Generation Pipeline Layout"

Thread 0, Frame 0:
vkCreateComputePipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkComputePipelineCreateInfo* = 00000097A053F230
        pCreateInfos[0]:                const VkComputePipelineCreateInfo = 00000097A053F230:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO (29)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stage:                          VkPipelineShaderStageCreateInfo = 00000097A053F248:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                pNext:                          const void* = NULL
                flags:                          VkPipelineShaderStageCreateFlags = 0
                stage:                          VkShaderStageFlagBits = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
                module:                         VkShaderModule = 45D6D1000000004C
                pName:                          const char* = "main"
                pSpecializationInfo:            const VkSpecializationInfo* = NULL
            layout:                         VkPipelineLayout = 73A850000000004D [Draw Generation Pipeline Layout]
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 00000240C1E47050
        pPipelines[0]:                  VkPipeline = 612F93000000004E

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE (19)
        objectHandle:                   uint64_t = 7002977573793693774
        pObjectName:                    const char* = "Draw Generation Pipeline"

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    shaderModule:                   VkShaderModule = 45D6D1000000004C
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 00000097A053E7F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 9124
        pCode:                          const uint32_t* = 00000240C1E7AF80
            pCode[0]:                       const uint32_t = 119734787
            pCode[1]:                       const uint32_t = 67072
            pCode[2]:                       const uint32_t = 524299
            pCode[3]:                       const uint32_t = 191
            pCode[4]:                       const uint32_t = 0
            pCode[5]:                       const uint32_t = 131089
            pCode[6]:                       const uint32_t = 1
            pCode[7]:                       const uint32_t = 131089
            pCode[8]:                       const uint32_t = 4427
            pCode[9]:                       const uint32_t = 131089
            pCode[10]:                      const uint32_t = 5301
            pCode[11]:                      const uint32_t = 131089
            pCode[12]:                      const uint32_t = 5302
            pCode[13]:                      const uint32_t = 131089
            pCode[14]:                      const uint32_t = 5306
            pCode[15]:                      const uint32_t = 131089
            pCode[16]:                      const uint32_t = 5347
            pCode[17]:                      const uint32_t = 393227
            pCode[18]:                      const uint32_t = 3
            pCode[19]:                      const uint32_t = 1280527431
            pCode[20]:                      const uint32_t = 1685353262
            pCode[21]:                      const uint32_t = 808793134
            pCode[22]:                      const uint32_t = 0
            pCode[23]:                      const uint32_t = 196622
            pCode[24]:                      const uint32_t = 5348
            pCode[25]:                      const uint32_t = 1
            pCode[26]:                      const uint32_t = 1179663
            pCode[27]:                      const uint32_t = 0
            pCode[28]:                      const uint32_t = 6
            pCode[29]:                      const uint32_t = 1852399981
            pCode[30]:                      const uint32_t = 0
            pCode[31]:                      const uint32_t = 17
            pCode[32]:                      const uint32_t = 20
            pCode[33]:                      const uint32_t = 36
            pCode[34]:                      const uint32_t = 37
            pCode[35]:                      const uint32_t = 49
            pCode[36]:                      const uint32_t = 61
            pCode[37]:                      const uint32_t = 64
            pCode[38]:                      const uint32_t = 83
            pCode[39]:                      const uint32_t = 93
            pCode[40]:                      const uint32_t = 106
            pCode[41]:                      const uint32_t = 115
            pCode[42]:                      const uint32_t = 127
            pCode[43]:                      const uint32_t = 140
            pCode[44]:                      const uint32_t = 1179655
            pCode[45]:                      const uint32_t = 1
            pCode[46]:                      const uint32_t = 1429158467
            pCode[47]:                      const uint32_t = 1936876915
            pCode[48]:                      const uint32_t = 1651462703
            pCode[49]:                      const uint32_t = 796160613
            pCode[50]:                      const uint32_t = 1802724676
            pCode[51]:                      const uint32_t = 795897716
            pCode[52]:                      const uint32_t = 1953719636
            pCode[53]:                      const uint32_t = 1634628677
            pCode[54]:                      const uint32_t = 1936941359
            pCode[55]:                      const uint32_t = 796095589
            pCode[56]:                      const uint32_t = 1684105331
            pCode[57]:                      const uint32_t = 796095077
            pCode[58]:                      const uint32_t = 1852402786
            pCode[59]:                      const uint32_t = 1919770478
            pCode[60]:                      const uint32_t = 1919252014
            pCode[61]:                      const uint32_t = 116
            pCode[62]:                      const uint32_t = 1441799
            pCode[63]:                      const uint32_t = 2
            pCode[64]:                      const uint32_t = 1429158467
            pCode[65]:                      const uint32_t = 1936876915
            pCode[66]:                      const uint32_t = 1651462703
            pCode[67]:                      const uint32_t = 796160613
            pCode[68]:                      const uint32_t = 1802724676
            pCode[69]:                      const uint32_t = 795897716
            pCode[70]:                      const uint32_t = 1953719636
            pCode[71]:                      const uint32_t = 1634628677
            pCode[72]:                      const uint32_t = 1936941359
            pCode[73]:                      const uint32_t = 796095589
            pCode[74]:                      const uint32_t = 1684105331
            pCode[75]:                      const uint32_t = 796095077
            pCode[76]:                      const uint32_t = 1970302569
            pCode[77]:                      const uint32_t = 1953718132
            pCode[78]:                      const uint32_t = 1952675186
            pCode[79]:                      const uint32_t = 1936028277
            pCode[80]:                      const uint32_t = 1717924447
            pCode[81]:                      const uint32_t = 1869898593
            pCode[82]:                      const uint32_t = 1818701426
            pCode[83]:                      const uint32_t = 27763
            pCode[84]:                      const uint32_t = 23003139
            pCode[85]:                      const uint32_t = 2
            pCode[86]:                      const uint32_t = 460
            pCode[87]:                      const uint32_t = 1
            pCode[88]:                      const uint32_t = 1919252003
            pCode[89]:                      const uint32_t = 1852795251
            pCode[90]:                      const uint32_t = 808858656
            pCode[91]:                      const uint32_t = 2019894026
            pCode[92]:                      const uint32_t = 1936614772
            pCode[93]:                      const uint32_t = 544108393
            pCode[94]:                      const uint32_t = 1197427783
            pCode[95]:                      const uint32_t = 1279741775
            pCode[96]:                      const uint32_t = 1852399429
            pCode[97]:                      const uint32_t = 1685417059
            pCode[98]:                      const uint32_t = 1768185701
            pCode[99]:                      const uint32_t = 1952671090
            pCode[100]:                     const uint32_t = 543520361
            pCode[101]:                     const uint32_t = 1701978170
            pCode[102]:                     const uint32_t = 1919513969
            pCode[103]:                     const uint32_t = 587860581
            pCode[104]:                     const uint32_t = 1818455657
            pCode[105]:                     const uint32_t = 543515765
            pCode[106]:                     const uint32_t = 1886284066
            pCode[107]:                     const uint32_t = 1935635573
            pCode[108]:                     const uint32_t = 1668641396
            pCode[109]:                     const uint32_t = 1701999988
            pCode[110]:                     const uint32_t = 1701994355
            pCode[111]:                     const uint32_t = 1952670054
            pCode[112]:                     const uint32_t = 1731097199
            pCode[113]:                     const uint32_t = 577532780
            pCode[114]:                     const uint32_t = 539963146
            pCode[115]:                     const uint32_t = 542393683
            pCode[116]:                     const uint32_t = 1293957681
            pCode[117]:                     const uint32_t = 1919251553
            pCode[118]:                     const uint32_t = 543973737
            pCode[119]:                     const uint32_t = 1668506980
            pCode[120]:                     const uint32_t = 1953524082
            pCode[121]:                     const uint32_t = 175338095
            pCode[122]:                     const uint32_t = 539963146
            pCode[123]:                     const uint32_t = 1936287828
            pCode[124]:                     const uint32_t = 1701146144
            pCode[125]:                     const uint32_t = 1948283748
            pCode[126]:                     const uint32_t = 1700929647
            pCode[127]:                     const uint32_t = 1701998624
            pCode[128]:                     const uint32_t = 1953391987
            pCode[129]:                     const uint32_t = 544106784
            pCode[130]:                     const uint32_t = 1751343461
            pCode[131]:                     const uint32_t = 1701995296
            pCode[132]:                     const uint32_t = 1684370529
            pCode[133]:                     const uint32_t = 1952541984
            pCode[134]:                     const uint32_t = 1634300517
            pCode[135]:                     const uint32_t = 1634470508
            pCode[136]:                     const uint32_t = 1953853305
            pCode[137]:                     const uint32_t = 1952805672
            pCode[138]:                     const uint32_t = 824196384
            pCode[139]:                     const uint32_t = 1768038444
            pCode[140]:                     const uint32_t = 1852400750
            pCode[141]:                     const uint32_t = 540876903
            pCode[142]:                     const uint32_t = 1914710320
            pCode[143]:                     const uint32_t = 1868849509
            pCode[144]:                     const uint32_t = 544828526
            pCode[145]:                     const uint32_t = 1717990754
            pCode[146]:                     const uint32_t = 1646293605
            pCode[147]:                     const uint32_t = 1852729708
            pCode[148]:                     const uint32_t = 1634886751
            pCode[149]:                     const uint32_t = 1650422647
            pCode[150]:                     const uint32_t = 1701209717
            pCode[151]:                     const uint32_t = 175841394
            pCode[152]:                     const uint32_t = 538976288
            pCode[153]:                     const uint32_t = 2002874980
            pCode[154]:                     const uint32_t = 1836016479
            pCode[155]:                     const uint32_t = 1684955501
            pCode[156]:                     const uint32_t = 1768710688
            pCode[157]:                     const uint32_t = 1683975790
            pCode[158]:                     const uint32_t = 1937203570
            pCode[159]:                     const uint32_t = 171662683
            pCode[160]:                     const uint32_t = 168442749
            pCode[161]:                     const uint32_t = 1870225772
            pCode[162]:                     const uint32_t = 1932031093
            pCode[163]:                     const uint32_t = 1025537125
            pCode[164]:                     const uint32_t = 539767072
            pCode[165]:                     const uint32_t = 1684957538
            pCode[166]:                     const uint32_t = 543649385
            pCode[167]:                     const uint32_t = 691085373
            pCode[168]:                     const uint32_t = 1768846624
            pCode[169]:                     const uint32_t = 1836216166
            pCode[170]:                     const uint32_t = 1768710688
            pCode[171]:                     const uint32_t = 1834970734
            pCode[172]:                     const uint32_t = 1818386290
            pCode[173]:                     const uint32_t = 543908719
            pCode[174]:                     const uint32_t = 1980303995
            pCode[175]:                     const uint32_t = 540304229
            pCode[176]:                     const uint32_t = 1869377379
            pCode[177]:                     const uint32_t = 1634099058
            pCode[178]:                     const uint32_t = 1919906915
            pCode[179]:                     const uint32_t = 537541491
            pCode[180]:                     const uint32_t = 1981816864
            pCode[181]:                     const uint32_t = 540304229
            pCode[182]:                     const uint32_t = 1635018093
            pCode[183]:                     const uint32_t = 1869766508
            pCode[184]:                     const uint32_t = 1600677749
            pCode[185]:                     const uint32_t = 1952670054
            pCode[186]:                     const uint32_t = 997421679
            pCode[187]:                     const uint32_t = 1769277706
            pCode[188]:                     const uint32_t = 1663071342
            pCode[189]:                     const uint32_t = 1919904879
            pCode[190]:                     const uint32_t = 1684957535
            pCode[191]:                     const uint32_t = 171669605
            pCode[192]:                     const uint32_t = 1852405001
            pCode[193]:                     const uint32_t = 1701650548
            pCode[194]:                     const uint32_t = 1600938356
            pCode[195]:                     const uint32_t = 1735749490
            pCode[196]:                     const uint32_t = 1852399464
            pCode[197]:                     const uint32_t = 997746020
            pCode[198]:                     const uint32_t = 1646296330
            pCode[199]:                     const uint32_t = 1852729708
            pCode[200]:                     const uint32_t = 1534225759
            pCode[201]:                     const uint32_t = 168442717
            pCode[202]:                     const uint32_t = 1870225772
            pCode[203]:                     const uint32_t = 673215605
            pCode[204]:                     const uint32_t = 1633906540
            pCode[205]:                     const uint32_t = 1852795252
            pCode[206]:                     const uint32_t = 807419168
            pCode[207]:                     const uint32_t = 1970217001
            pCode[208]:                     const uint32_t = 1702240372
            pCode[209]:                     const uint32_t = 1864381283
            pCode[210]:                     const uint32_t = 1885303925
            pCode[211]:                     const uint32_t = 1953067887
            pCode[212]:                     const uint32_t = 997093225
            pCode[213]:                     const uint32_t = 2036427786
            pCode[214]:                     const uint32_t = 544503151
            pCode[215]:                     const uint32_t = 1668246568
            pCode[216]:                     const uint32_t = 1869182049
            pCode[217]:                     const uint32_t = 540876910
            pCode[218]:                     const uint32_t = 1864378673
            pCode[219]:                     const uint32_t = 1981838453
            pCode[220]:                     const uint32_t = 540238693
            pCode[221]:                     const uint32_t = 1601467759
            pCode[222]:                     const uint32_t = 1836216174
            pCode[223]:                     const uint32_t = 171666529
            pCode[224]:                     const uint32_t = 1870225772
            pCode[225]:                     const uint32_t = 673215605
            pCode[226]:                     const uint32_t = 1633906540
            pCode[227]:                     const uint32_t = 1852795252
            pCode[228]:                     const uint32_t = 840973600
            pCode[229]:                     const uint32_t = 1970217001
            pCode[230]:                     const uint32_t = 1702240372
            pCode[231]:                     const uint32_t = 1864381283
            pCode[232]:                     const uint32_t = 1667200117
            pCode[233]:                     const uint32_t = 1919904879
            pCode[234]:                     const uint32_t = 1634470459
            pCode[235]:                     const uint32_t = 1953853305
            pCode[236]:                     const uint32_t = 1869359136
            pCode[237]:                     const uint32_t = 1769234787
            pCode[238]:                     const uint32_t = 1025535599
            pCode[239]:                     const uint32_t = 539570976
            pCode[240]:                     const uint32_t = 544503151
            pCode[241]:                     const uint32_t = 845374838
            pCode[242]:                     const uint32_t = 1953853216
            pCode[243]:                     const uint32_t = 997619039
            pCode[244]:                     const uint32_t = 2036427786
            pCode[245]:                     const uint32_t = 544503151
            pCode[246]:                     const uint32_t = 1668246568
            pCode[247]:                     const uint32_t = 1869182049
            pCode[248]:                     const uint32_t = 540876910
            pCode[249]:                     const uint32_t = 1713383732
            pCode[250]:                     const uint32_t = 544498028
            pCode[251]:                     const uint32_t = 544503151
            pCode[252]:                     const uint32_t = 1953393013
            pCode[253]:                     const uint32_t = 1953853216
            pCode[254]:                     const uint32_t = 1819239263
            pCode[255]:                     const uint32_t = 1767862895
            pCode[256]:                     const uint32_t = 168442724
            pCode[257]:                     const uint32_t = 1684631414
            pCode[258]:                     const uint32_t = 1767992608
            pCode[259]:                     const uint32_t = 539568238
            pCode[260]:                     const uint32_t = 538970747
            pCode[261]:                     const uint32_t = 1919164448
            pCode[262]:                     const uint32_t = 1667200865
            pCode[263]:                     const uint32_t = 1634561391
            pCode[264]:                     const uint32_t = 1679844462
            pCode[265]:                     const uint32_t = 544694642
            pCode[266]:                     const uint32_t = 1818370109
            pCode[267]:                     const uint32_t = 1601072745
            pCode[268]:                     const uint32_t = 2002874980
            pCode[269]:                     const uint32_t = 1818712947
            pCode[270]:                     const uint32_t = 1634878559
            pCode[271]:                     const uint32_t = 1564756343
            pCode[272]:                     const uint32_t = 538970683
            pCode[273]:                     const uint32_t = 1702240288
            pCode[274]:                     const uint32_t = 2019914866
            pCode[275]:                     const uint32_t = 1025537568
            pCode[276]:                     const uint32_t = 1919252000
            pCode[277]:                     const uint32_t = 1701013876
            pCode[278]:                     const uint32_t = 1818712947
            pCode[279]:                     const uint32_t = 1919243871
            pCode[280]:                     const uint32_t = 1232627060
            pCode[281]:                     const uint32_t = 2019910766
            pCode[282]:                     const uint32_t = 537541469
            pCode[283]:                     const uint32_t = 1830821920
            pCode[284]:                     const uint32_t = 540308577
            pCode[285]:                     const uint32_t = 1701080941
            pCode[286]:                     const uint32_t = 540876908
            pCode[287]:                     const uint32_t = 1851880052
            pCode[288]:                     const uint32_t = 1919903347
            pCode[289]:                     const uint32_t = 1683714925
            pCode[290]:                     const uint32_t = 779575666
            pCode[291]:                     const uint32_t = 1851880052
            pCode[292]:                     const uint32_t = 1919903347
            pCode[293]:                     const uint32_t = 1684627309
            pCode[294]:                     const uint32_t = 168442717
            pCode[295]:                     const uint32_t = 538976288
            pCode[296]:                     const uint32_t = 1348430951
            pCode[297]:                     const uint32_t = 1953067887
            pCode[298]:                     const uint32_t = 544108393
            pCode[299]:                     const uint32_t = 1919295549
            pCode[300]:                     const uint32_t = 1600482657
            pCode[301]:                     const uint32_t = 1635017060
            pCode[302]:                     const uint32_t = 1701410350
            pCode[303]:                     const uint32_t = 1869770871
            pCode[304]:                     const uint32_t = 539631722
            pCode[305]:                     const uint32_t = 1701080941
            pCode[306]:                     const uint32_t = 539631724
            pCode[307]:                     const uint32_t = 878929270
            pCode[308]:                     const uint32_t = 1882093096
            pCode[309]:                     const uint32_t = 1953067887
            pCode[310]:                     const uint32_t = 745434985
            pCode[311]:                     const uint32_t = 808333600
            pCode[312]:                     const uint32_t = 171649382
            pCode[313]:                     const uint32_t = 538976266
            pCode[314]:                     const uint32_t = 1953853216
            pCode[315]:                     const uint32_t = 1936683103
            pCode[316]:                     const uint32_t = 1869182057
            pCode[317]:                     const uint32_t = 540876910
            pCode[318]:                     const uint32_t = 1685024040
            pCode[319]:                     const uint32_t = 706767973
            pCode[320]:                     const uint32_t = 1667593760
            pCode[321]:                     const uint32_t = 779495476
            pCode[322]:                     const uint32_t = 1769172848
            pCode[323]:                     const uint32_t = 1852795252
            pCode[324]:                     const uint32_t = 774971436
            pCode[325]:                     const uint32_t = 690578992
            pCode[326]:                     const uint32_t = 2054780974
            pCode[327]:                     const uint32_t = 537528891
            pCode[328]:                     const uint32_t = 790634528
            pCode[329]:                     const uint32_t = 1330913327
            pCode[330]:                     const uint32_t = 540692292
            pCode[331]:                     const uint32_t = 1886220099
            pCode[332]:                     const uint32_t = 543519861
            pCode[333]:                     const uint32_t = 543516788
            pCode[334]:                     const uint32_t = 1836216174
            pCode[335]:                     const uint32_t = 1830841441
            pCode[336]:                     const uint32_t = 1769108577
            pCode[337]:                     const uint32_t = 1852776568
            pCode[338]:                     const uint32_t = 1701344288
            pCode[339]:                     const uint32_t = 1431323424
            pCode[340]:                     const uint32_t = 1684955424
            pCode[341]:                     const uint32_t = 1953459744
            pCode[342]:                     const uint32_t = 1431324448
            pCode[343]:                     const uint32_t = 538976266
            pCode[344]:                     const uint32_t = 1953853216
            pCode[345]:                     const uint32_t = 1919905375
            pCode[346]:                     const uint32_t = 543973741
            pCode[347]:                     const uint32_t = 1948786749
            pCode[348]:                     const uint32_t = 1936613746
            pCode[349]:                     const uint32_t = 1702063984
            pCode[350]:                     const uint32_t = 1986947368
            pCode[351]:                     const uint32_t = 1702064741
            pCode[352]:                     const uint32_t = 1685024040
            pCode[353]:                     const uint32_t = 690580581
            pCode[354]:                     const uint32_t = 1981819424
            pCode[355]:                     const uint32_t = 674521957
            pCode[356]:                     const uint32_t = 1869491830
            pCode[357]:                     const uint32_t = 1818324338
            pCode[358]:                     const uint32_t = 774905900
            pCode[359]:                     const uint32_t = 690578992
            pCode[360]:                     const uint32_t = 2054780974
            pCode[361]:                     const uint32_t = 538970683
            pCode[362]:                     const uint32_t = 791617568
            pCode[363]:                     const uint32_t = 1953853216
            pCode[364]:                     const uint32_t = 1919905375
            pCode[365]:                     const uint32_t = 543973741
            pCode[366]:                     const uint32_t = 1881677885
            pCode[367]:                     const uint32_t = 1600680821
            pCode[368]:                     const uint32_t = 1936617315
            pCode[369]:                     const uint32_t = 1953390964
            pCode[370]:                     const uint32_t = 1701981811
            pCode[371]:                     const uint32_t = 1919247470
            pCode[372]:                     const uint32_t = 1952542047
            pCode[373]:                     const uint32_t = 544762226
            pCode[374]:                     const uint32_t = 1702240298
            pCode[375]:                     const uint32_t = 1982346339
            pCode[376]:                     const uint32_t = 1919905326
            pCode[377]:                     const uint32_t = 745300333
            pCode[378]:                     const uint32_t = 808333344
            pCode[379]:                     const uint32_t = 774449510
            pCode[380]:                     const uint32_t = 997882232
            pCode[381]:                     const uint32_t = 538970634
            pCode[382]:                     const uint32_t = 1970216992
            pCode[383]:                     const uint32_t = 1868783476
            pCode[384]:                     const uint32_t = 544370540
            pCode[385]:                     const uint32_t = 779493437
            pCode[386]:                     const uint32_t = 1869377379
            pCode[387]:                     const uint32_t = 2037919346
            pCode[388]:                     const uint32_t = 539631738
            pCode[389]:                     const uint32_t = 1852402786
            pCode[390]:                     const uint32_t = 1919770478
            pCode[391]:                     const uint32_t = 1852796507
            pCode[392]:                     const uint32_t = 1718185589
            pCode[393]:                     const uint32_t = 1164800623
            pCode[394]:                     const uint32_t = 1680364632
            pCode[395]:                     const uint32_t = 779575666
            pCode[396]:                     const uint32_t = 1702125933
            pCode[397]:                     const uint32_t = 1818323314
            pCode[398]:                     const uint32_t = 694446431
            pCode[399]:                     const uint32_t = 1868770909
            pCode[400]:                     const uint32_t = 1601335148
            pCode[401]:                     const uint32_t = 1952670054
            pCode[402]:                     const uint32_t = 779317871
            pCode[403]:                     const uint32_t = 997882232
            pCode[404]:                     const uint32_t = 538976266
            pCode[405]:                     const uint32_t = 1953853216
            pCode[406]:                     const uint32_t = 779515231
            pCode[407]:                     const uint32_t = 540876920
            pCode[408]:                     const uint32_t = 1987391094
            pCode[409]:                     const uint32_t = 171669599
            pCode[410]:                     const uint32_t = 538976288
            pCode[411]:                     const uint32_t = 1601467759
            pCode[412]:                     const uint32_t = 2033088117
            pCode[413]:                     const uint32_t = 1981824288
            pCode[414]:                     const uint32_t = 1601598766
            pCode[415]:                     const uint32_t = 168442745
            pCode[416]:                     const uint32_t = 538976288
            pCode[417]:                     const uint32_t = 1601467759
            pCode[418]:                     const uint32_t = 1869377379
            pCode[419]:                     const uint32_t = 1684627314
            pCode[420]:                     const uint32_t = 1646279968
            pCode[421]:                     const uint32_t = 1852729708
            pCode[422]:                     const uint32_t = 1534225759
            pCode[423]:                     const uint32_t = 1970171758
            pCode[424]:                     const uint32_t = 1868982638
            pCode[425]:                     const uint32_t = 1480945010
            pCode[426]:                     const uint32_t = 1919166548
            pCode[427]:                     const uint32_t = 1831761761
            pCode[428]:                     const uint32_t = 1919251553
            pCode[429]:                     const uint32_t = 1600938345
            pCode[430]:                     const uint32_t = 1562993769
            pCode[431]:                     const uint32_t = 1819239214
            pCode[432]:                     const uint32_t = 1767862895
            pCode[433]:                     const uint32_t = 2019910766
            pCode[434]:                     const uint32_t = 8194619
            pCode[435]:                     const uint32_t = 31195139
            pCode[436]:                     const uint32_t = 2
            pCode[437]:                     const uint32_t = 460
            pCode[438]:                     const uint32_t = 2
            pCode[439]:                     const uint32_t = 1954047267
            pCode[440]:                     const uint32_t = 1769172581
            pCode[441]:                     const uint32_t = 1193307759
            pCode[442]:                     const uint32_t = 1480941388
            pCode[443]:                     const uint32_t = 1969381204
            pCode[444]:                     const uint32_t = 1919247974
            pCode[445]:                     const uint32_t = 1717924447
            pCode[446]:                     const uint32_t = 1852142181
            pCode[447]:                     const uint32_t = 975201635
            pCode[448]:                     const uint32_t = 1902473760
            pCode[449]:                     const uint32_t = 1701996917
            pCode[450]:                     const uint32_t = 1696795149
            pCode[451]:                     const uint32_t = 1852142712
            pCode[452]:                     const uint32_t = 1852795251
            pCode[453]:                     const uint32_t = 1598834464
            pCode[454]:                     const uint32_t = 1599363141
            pCode[455]:                     const uint32_t = 1717990754
            pCode[456]:                     const uint32_t = 1918857829
            pCode[457]:                     const uint32_t = 1919247973
            pCode[458]:                     const uint32_t = 1701015141
            pCode[459]:                     const uint32_t = 540680242
            pCode[460]:                     const uint32_t = 1970365810
            pCode[461]:                     const uint32_t = 224752233
            pCode[462]:                     const uint32_t = 2019894026
            pCode[463]:                     const uint32_t = 1936614772
            pCode[464]:                     const uint32_t = 544108393
            pCode[465]:                     const uint32_t = 1163873351
            pCode[466]:                     const uint32_t = 1851741272
            pCode[467]:                     const uint32_t = 1853189743
            pCode[468]:                     const uint32_t = 1919903337
            pCode[469]:                     const uint32_t = 1970364269
            pCode[470]:                     const uint32_t = 1718185057
            pCode[471]:                     const uint32_t = 544367977
            pCode[472]:                     const uint32_t = 1701978170
            pCode[473]:                     const uint32_t = 1919513969
            pCode[474]:                     const uint32_t = 218762597
            pCode[475]:                     const uint32_t = 539963146
            pCode[476]:                     const uint32_t = 1717990722
            pCode[477]:                     const uint32_t = 1948283493
            pCode[478]:                     const uint32_t = 1701978223
            pCode[479]:                     const uint32_t = 1685221219
            pCode[480]:                     const uint32_t = 1970234144
            pCode[481]:                     const uint32_t = 544437358
            pCode[482]:                     const uint32_t = 544367984
            pCode[483]:                     const uint32_t = 1701865840
            pCode[484]:                     const uint32_t = 1701734764
            pCode[485]:                     const uint32_t = 1634235168
            pCode[486]:                     const uint32_t = 544367972
            pCode[487]:                     const uint32_t = 1701470831
            pCode[488]:                     const uint32_t = 168653923
            pCode[489]:                     const uint32_t = 1870225772
            pCode[490]:                     const uint32_t = 1932031093
            pCode[491]:                     const uint32_t = 1025537125
            pCode[492]:                     const uint32_t = 539766816
            pCode[493]:                     const uint32_t = 1684957538
            pCode[494]:                     const uint32_t = 543649385
            pCode[495]:                     const uint32_t = 691019837
            pCode[496]:                     const uint32_t = 1768846624
            pCode[497]:                     const uint32_t = 1836216166
            pCode[498]:                     const uint32_t = 1634887200
            pCode[499]:                     const uint32_t = 1683973485
            pCode[500]:                     const uint32_t = 1600222305
            pCode[501]:                     const uint32_t = 1668246626
            pCode[502]:                     const uint32_t = 226173035
            pCode[503]:                     const uint32_t = 1634535690
            pCode[504]:                     const uint32_t = 1981822068
            pCode[505]:                     const uint32_t = 997680489
            pCode[506]:                     const uint32_t = 1829308941
            pCode[507]:                     const uint32_t = 540308577
            pCode[508]:                     const uint32_t = 1785688688
            pCode[509]:                     const uint32_t = 151653691
            pCode[510]:                     const uint32_t = 880042349
            pCode[511]:                     const uint32_t = 1701410336
            pCode[512]:                     const uint32_t = 1869770871
            pCode[513]:                     const uint32_t = 168639338
            pCode[514]:                     const uint32_t = 1667593737
            pCode[515]:                     const uint32_t = 1769349172
            pCode[516]:                     const uint32_t = 1885304677
            pCode[517]:                     const uint32_t = 221999983
            pCode[518]:                     const uint32_t = 1702234378
            pCode[519]:                     const uint32_t = 1629500515
            pCode[520]:                     const uint32_t = 1701405293
            pCode[521]:                     const uint32_t = 1667200110
            pCode[522]:                     const uint32_t = 1919904879
            pCode[523]:                     const uint32_t = 151653691
            pCode[524]:                     const uint32_t = 878929270
            pCode[525]:                     const uint32_t = 1734962208
            pCode[526]:                     const uint32_t = 1667200104
            pCode[527]:                     const uint32_t = 1919904879
            pCode[528]:                     const uint32_t = 537529659
            pCode[529]:                     const uint32_t = 1981816864
            pCode[530]:                     const uint32_t = 540304229
            pCode[531]:                     const uint32_t = 1751607660
            pCode[532]:                     const uint32_t = 1869635444
            pCode[533]:                     const uint32_t = 1769236851
            pCode[534]:                     const uint32_t = 221998703
            pCode[535]:                     const uint32_t = 1769277706
            pCode[536]:                     const uint32_t = 1830843502
            pCode[537]:                     const uint32_t = 1683978337
            pCode[538]:                     const uint32_t = 1601659250
            pCode[539]:                     const uint32_t = 1853189987
            pCode[540]:                     const uint32_t = 168639348
            pCode[541]:                     const uint32_t = 1919295613
            pCode[542]:                     const uint32_t = 1600482657
            pCode[543]:                     const uint32_t = 1635017060
            pCode[544]:                     const uint32_t = 218762555
            pCode[545]:                     const uint32_t = 2036427786
            pCode[546]:                     const uint32_t = 678720879
            pCode[547]:                     const uint32_t = 544499059
            pCode[548]:                     const uint32_t = 741351485
            pCode[549]:                     const uint32_t = 1852400160
            pCode[550]:                     const uint32_t = 1735289188
            pCode[551]:                     const uint32_t = 824196384
            pCode[552]:                     const uint32_t = 1953701932
            pCode[553]:                     const uint32_t = 808662116
            pCode[554]:                     const uint32_t = 1969365033
            pCode[555]:                     const uint32_t = 1919247974
            pCode[556]:                     const uint32_t = 1634886688
            pCode[557]:                     const uint32_t = 1868783479
            pCode[558]:                     const uint32_t = 1937010293
            pCode[559]:                     const uint32_t = 168655648
            pCode[560]:                     const uint32_t = 1852405001
            pCode[561]:                     const uint32_t = 1868767348
            pCode[562]:                     const uint32_t = 1937010293
            pCode[563]:                     const uint32_t = 221994331
            pCode[564]:                     const uint32_t = 222002442
            pCode[565]:                     const uint32_t = 1930038538
            pCode[566]:                     const uint32_t = 1668641396
            pCode[567]:                     const uint32_t = 1919164532
            pCode[568]:                     const uint32_t = 1667200865
            pCode[569]:                     const uint32_t = 1634561391
            pCode[570]:                     const uint32_t = 2065720430
            pCode[571]:                     const uint32_t = 1963526669
            pCode[572]:                     const uint32_t = 544501353
            pCode[573]:                     const uint32_t = 1701080681
            pCode[574]:                     const uint32_t = 1868783480
            pCode[575]:                     const uint32_t = 997486197
            pCode[576]:                     const uint32_t = 1963526669
            pCode[577]:                     const uint32_t = 544501353
            pCode[578]:                     const uint32_t = 1953721961
            pCode[579]:                     const uint32_t = 1701015137
            pCode[580]:                     const uint32_t = 1970234207
            pCode[581]:                     const uint32_t = 222000238
            pCode[582]:                     const uint32_t = 1769277706
            pCode[583]:                     const uint32_t = 1713402990
            pCode[584]:                     const uint32_t = 1953722985
            pCode[585]:                     const uint32_t = 1684957535
            pCode[586]:                     const uint32_t = 222001253
            pCode[587]:                     const uint32_t = 1852377354
            pCode[588]:                     const uint32_t = 1702240372
            pCode[589]:                     const uint32_t = 2019914866
            pCode[590]:                     const uint32_t = 1717989215
            pCode[591]:                     const uint32_t = 997483891
            pCode[592]:                     const uint32_t = 1963526669
            pCode[593]:                     const uint32_t = 544501353
            pCode[594]:                     const uint32_t = 1936877926
            pCode[595]:                     const uint32_t = 1852399476
            pCode[596]:                     const uint32_t = 1851880563
            pCode[597]:                     const uint32_t = 221996387
            pCode[598]:                     const uint32_t = 151653642
            pCode[599]:                     const uint32_t = 1953393013
            pCode[600]:                     const uint32_t = 1952541984
            pCode[601]:                     const uint32_t = 1634300517
            pCode[602]:                     const uint32_t = 1684627308
            pCode[603]:                     const uint32_t = 151653691
            pCode[604]:                     const uint32_t = 1953393013
            pCode[605]:                     const uint32_t = 1634890784
            pCode[606]:                     const uint32_t = 1868985198
            pCode[607]:                     const uint32_t = 1767861618
            pCode[608]:                     const uint32_t = 168639332
            pCode[609]:                     const uint32_t = 1852405001
            pCode[610]:                     const uint32_t = 1634738292
            pCode[611]:                     const uint32_t = 221996132
            pCode[612]:                     const uint32_t = 222002442
            pCode[613]:                     const uint32_t = 2036427786
            pCode[614]:                     const uint32_t = 678720879
            pCode[615]:                     const uint32_t = 1717990754
            pCode[616]:                     const uint32_t = 1918857829
            pCode[617]:                     const uint32_t = 1919247973
            pCode[618]:                     const uint32_t = 1701015141
            pCode[619]:                     const uint32_t = 1969365033
            pCode[620]:                     const uint32_t = 1919247974
            pCode[621]:                     const uint32_t = 1634886688
            pCode[622]:                     const uint32_t = 1969381239
            pCode[623]:                     const uint32_t = 1919247974
            pCode[624]:                     const uint32_t = 168655648
            pCode[625]:                     const uint32_t = 1634886665
            pCode[626]:                     const uint32_t = 1868783479
            pCode[627]:                     const uint32_t = 1851878765
            pCode[628]:                     const uint32_t = 1919164516
            pCode[629]:                     const uint32_t = 1534293857
            pCode[630]:                     const uint32_t = 168639325
            pCode[631]:                     const uint32_t = 168639357
            pCode[632]:                     const uint32_t = 1377840943
            pCode[633]:                     const uint32_t = 1919902565
            pCode[634]:                     const uint32_t = 1919164516
            pCode[635]:                     const uint32_t = 1663072097
            pCode[636]:                     const uint32_t = 1634561391
            pCode[637]:                     const uint32_t = 544433262
            pCode[638]:                     const uint32_t = 544367984
            pCode[639]:                     const uint32_t = 1701865840
            pCode[640]:                     const uint32_t = 1701734764
            pCode[641]:                     const uint32_t = 1634235168
            pCode[642]:                     const uint32_t = 544367972
            pCode[643]:                     const uint32_t = 1701470831
            pCode[644]:                     const uint32_t = 168653923
            pCode[645]:                     const uint32_t = 1870225772
            pCode[646]:                     const uint32_t = 1932031093
            pCode[647]:                     const uint32_t = 1025537125
            pCode[648]:                     const uint32_t = 539766816
            pCode[649]:                     const uint32_t = 1684957538
            pCode[650]:                     const uint32_t = 543649385
            pCode[651]:                     const uint32_t = 691150909
            pCode[652]:                     const uint32_t = 1718968864
            pCode[653]:                     const uint32_t = 544367974
            pCode[654]:                     const uint32_t = 2002874980
            pCode[655]:                     const uint32_t = 1718968927
            pCode[656]:                     const uint32_t = 2065724262
            pCode[657]:                     const uint32_t = 1678313997
            pCode[658]:                     const uint32_t = 1601659250
            pCode[659]:                     const uint32_t = 1717990754
            pCode[660]:                     const uint32_t = 1679848037
            pCode[661]:                     const uint32_t = 1601659250
            pCode[662]:                     const uint32_t = 1717990754
            pCode[663]:                     const uint32_t = 1534292581
            pCode[664]:                     const uint32_t = 168639325
            pCode[665]:                     const uint32_t = 168639357
            pCode[666]:                     const uint32_t = 791611917
            pCode[667]:                     const uint32_t = 1701728032
            pCode[668]:                     const uint32_t = 1919903264
            pCode[669]:                     const uint32_t = 1667327264
            pCode[670]:                     const uint32_t = 1852383336
            pCode[671]:                     const uint32_t = 1851880563
            pCode[672]:                     const uint32_t = 1864394083
            pCode[673]:                     const uint32_t = 1701257318
            pCode[674]:                     const uint32_t = 1952804207
            pCode[675]:                     const uint32_t = 1998616946
            pCode[676]:                     const uint32_t = 1768453225
            pCode[677]:                     const uint32_t = 543236206
            pCode[678]:                     const uint32_t = 1852138355
            pCode[679]:                     const uint32_t = 1998597221
            pCode[680]:                     const uint32_t = 543716457
            pCode[681]:                     const uint32_t = 1634541665
            pCode[682]:                     const uint32_t = 1769104756
            pCode[683]:                     const uint32_t = 639659105
            pCode[684]:                     const uint32_t = 1634890784
            pCode[685]:                     const uint32_t = 1868985198
            pCode[686]:                     const uint32_t = 168652146
            pCode[687]:                     const uint32_t = 1970435187
            pCode[688]:                     const uint32_t = 1864397923
            pCode[689]:                     const uint32_t = 1667590754
            pCode[690]:                     const uint32_t = 226173044
            pCode[691]:                     const uint32_t = 1769277706
            pCode[692]:                     const uint32_t = 1881175150
            pCode[693]:                     const uint32_t = 1767862131
            pCode[694]:                     const uint32_t = 151599972
            pCode[695]:                     const uint32_t = 1344286511
            pCode[696]:                     const uint32_t = 1818587241
            pCode[697]:                     const uint32_t = 1399156329
            pCode[698]:                     const uint32_t = 1701077352
            pCode[699]:                     const uint32_t = 1784827762
            pCode[700]:                     const uint32_t = 745825125
            pCode[701]:                     const uint32_t = 1701736224
            pCode[702]:                     const uint32_t = 1919250464
            pCode[703]:                     const uint32_t = 1634235168
            pCode[704]:                     const uint32_t = 796026212
            pCode[705]:                     const uint32_t = 1702125933
            pCode[706]:                     const uint32_t = 1818323314
            pCode[707]:                     const uint32_t = 1963526669
            pCode[708]:                     const uint32_t = 544501353
            pCode[709]:                     const uint32_t = 1601462637
            pCode[710]:                     const uint32_t = 154887273
            pCode[711]:                     const uint32_t = 539963145
            pCode[712]:                     const uint32_t = 1702125901
            pCode[713]:                     const uint32_t = 1818323314
            pCode[714]:                     const uint32_t = 1936607520
            pCode[715]:                     const uint32_t = 1668178292
            pCode[716]:                     const uint32_t = 151653733
            pCode[717]:                     const uint32_t = 1953393013
            pCode[718]:                     const uint32_t = 1868916512
            pCode[719]:                     const uint32_t = 996436319
            pCode[720]:                     const uint32_t = 791611657
            pCode[721]:                     const uint32_t = 1868908320
            pCode[722]:                     const uint32_t = 1920230765
            pCode[723]:                     const uint32_t = 151653753
            pCode[724]:                     const uint32_t = 1953393013
            pCode[725]:                     const uint32_t = 1634890784
            pCode[726]:                     const uint32_t = 1868985198
            pCode[727]:                     const uint32_t = 1767861618
            pCode[728]:                     const uint32_t = 789134180
            pCode[729]:                     const uint32_t = 1918115887
            pCode[730]:                     const uint32_t = 1718840929
            pCode[731]:                     const uint32_t = 225276527
            pCode[732]:                     const uint32_t = 222002442
            pCode[733]:                     const uint32_t = 2036427786
            pCode[734]:                     const uint32_t = 678720879
            pCode[735]:                     const uint32_t = 544499059
            pCode[736]:                     const uint32_t = 741351485
            pCode[737]:                     const uint32_t = 1852400160
            pCode[738]:                     const uint32_t = 1735289188
            pCode[739]:                     const uint32_t = 857750816
            pCode[740]:                     const uint32_t = 1953701932
            pCode[741]:                     const uint32_t = 808662116
            pCode[742]:                     const uint32_t = 1701978153
            pCode[743]:                     const uint32_t = 1852793953
            pCode[744]:                     const uint32_t = 1646295404
            pCode[745]:                     const uint32_t = 1701209717
            pCode[746]:                     const uint32_t = 1651449970
            pCode[747]:                     const uint32_t = 1952671082
            pCode[748]:                     const uint32_t = 1718968927
            pCode[749]:                     const uint32_t = 544367974
            pCode[750]:                     const uint32_t = 151653755
            pCode[751]:                     const uint32_t = 1701470831
            pCode[752]:                     const uint32_t = 1864397923
            pCode[753]:                     const uint32_t = 1667590754
            pCode[754]:                     const uint32_t = 1566274420
            pCode[755]:                     const uint32_t = 2097810747
            pCode[756]:                     const uint32_t = 218762555
            pCode[757]:                     const uint32_t = 539963146
            pCode[758]:                     const uint32_t = 1329876820
            pCode[759]:                     const uint32_t = 1681989690
            pCode[760]:                     const uint32_t = 1969430628
            pCode[761]:                     const uint32_t = 1852402796
            pCode[762]:                     const uint32_t = 1634738279
            pCode[763]:                     const uint32_t = 1701667186
            pCode[764]:                     const uint32_t = 1936876916
            pCode[765]:                     const uint32_t = 1953696269
            pCode[766]:                     const uint32_t = 1952675186
            pCode[767]:                     const uint32_t = 1868916512
            pCode[768]:                     const uint32_t = 1920230765
            pCode[769]:                     const uint32_t = 226173049
            pCode[770]:                     const uint32_t = 1769277706
            pCode[771]:                     const uint32_t = 1931506798
            pCode[772]:                     const uint32_t = 1953653108
            pCode[773]:                     const uint32_t = 1684957535
            pCode[774]:                     const uint32_t = 222001253
            pCode[775]:                     const uint32_t = 1769277706
            pCode[776]:                     const uint32_t = 1763734638
            pCode[777]:                     const uint32_t = 2019910766
            pCode[778]:                     const uint32_t = 1970234207
            pCode[779]:                     const uint32_t = 222000238
            pCode[780]:                     const uint32_t = 1852377354
            pCode[781]:                     const uint32_t = 1702240372
            pCode[782]:                     const uint32_t = 2019914866
            pCode[783]:                     const uint32_t = 1717989215
            pCode[784]:                     const uint32_t = 997483891
            pCode[785]:                     const uint32_t = 1963526669
            pCode[786]:                     const uint32_t = 544501353
            pCode[787]:                     const uint32_t = 1684300144
            pCode[788]:                     const uint32_t = 2097810747
            pCode[789]:                     const uint32_t = 789187899
            pCode[790]:                     const uint32_t = 1330913327
            pCode[791]:                     const uint32_t = 540692292
            pCode[792]:                     const uint32_t = 222580293
            pCode[793]:                     const uint32_t = 2036427786
            pCode[794]:                     const uint32_t = 678720879
            pCode[795]:                     const uint32_t = 544499059
            pCode[796]:                     const uint32_t = 741351485
            pCode[797]:                     const uint32_t = 1852400160
            pCode[798]:                     const uint32_t = 1735289188
            pCode[799]:                     const uint32_t = 874528032
            pCode[800]:                     const uint32_t = 1953701932
            pCode[801]:                     const uint32_t = 808662116
            pCode[802]:                     const uint32_t = 1701978153
            pCode[803]:                     const uint32_t = 1852793953
            pCode[804]:                     const uint32_t = 1646295404
            pCode[805]:                     const uint32_t = 1701209717
            pCode[806]:                     const uint32_t = 1701257330
            pCode[807]:                     const uint32_t = 1952804207
            pCode[808]:                     const uint32_t = 1650424178
            pCode[809]:                     const uint32_t = 1701209717
            pCode[810]:                     const uint32_t = 226173042
            pCode[811]:                     const uint32_t = 1701251338
            pCode[812]:                     const uint32_t = 1952804207
            pCode[813]:                     const uint32_t = 1730181490
            pCode[814]:                     const uint32_t = 1701670757
            pCode[815]:                     const uint32_t = 1701409396
            pCode[816]:                     const uint32_t = 995974003
            pCode[817]:                     const uint32_t = 998050317
            pCode[818]:                     const uint32_t = 168626701
            pCode[819]:                     const uint32_t = 1970435187
            pCode[820]:                     const uint32_t = 1981838435
            pCode[821]:                     const uint32_t = 1702130277
            pCode[822]:                     const uint32_t = 226173048
            pCode[823]:                     const uint32_t = 538976266
            pCode[824]:                     const uint32_t = 1667593760
            pCode[825]:                     const uint32_t = 1869619251
            pCode[826]:                     const uint32_t = 1769236851
            pCode[827]:                     const uint32_t = 221998703
            pCode[828]:                     const uint32_t = 538976266
            pCode[829]:                     const uint32_t = 1869375008
            pCode[830]:                     const uint32_t = 1965061217
            pCode[831]:                     const uint32_t = 997744502
            pCode[832]:                     const uint32_t = 538970637
            pCode[833]:                     const uint32_t = 1702240288
            pCode[834]:                     const uint32_t = 1847604067
            pCode[835]:                     const uint32_t = 1634562671
            pCode[836]:                     const uint32_t = 168639340
            pCode[837]:                     const uint32_t = 538976288
            pCode[838]:                     const uint32_t = 1634692198
            pCode[839]:                     const uint32_t = 1987387508
            pCode[840]:                     const uint32_t = 222001503
            pCode[841]:                     const uint32_t = 538976266
            pCode[842]:                     const uint32_t = 1667593760
            pCode[843]:                     const uint32_t = 1868767284
            pCode[844]:                     const uint32_t = 997355372
            pCode[845]:                     const uint32_t = 998050317
            pCode[846]:                     const uint32_t = 1634470413
            pCode[847]:                     const uint32_t = 1953853305
            pCode[848]:                     const uint32_t = 1952805672
            pCode[849]:                     const uint32_t = 807419168
            pCode[850]:                     const uint32_t = 1768038444
            pCode[851]:                     const uint32_t = 1852400750
            pCode[852]:                     const uint32_t = 540876903
            pCode[853]:                     const uint32_t = 1931488309
            pCode[854]:                     const uint32_t = 859071604
            pCode[855]:                     const uint32_t = 1914710320
            pCode[856]:                     const uint32_t = 1868849509
            pCode[857]:                     const uint32_t = 544828526
            pCode[858]:                     const uint32_t = 1717990754
            pCode[859]:                     const uint32_t = 1981837925
            pCode[860]:                     const uint32_t = 1702130277
            pCode[861]:                     const uint32_t = 1969381240
            pCode[862]:                     const uint32_t = 1919247974
            pCode[863]:                     const uint32_t = 168655648
            pCode[864]:                     const uint32_t = 1919251977
            pCode[865]:                     const uint32_t = 544761204
            pCode[866]:                     const uint32_t = 1953654134
            pCode[867]:                     const uint32_t = 1936024425
            pCode[868]:                     const uint32_t = 221994331
            pCode[869]:                     const uint32_t = 222002442
            pCode[870]:                     const uint32_t = 1812598026
            pCode[871]:                     const uint32_t = 1970239841
            pCode[872]:                     const uint32_t = 1702045812
            pCode[873]:                     const uint32_t = 540876916
            pCode[874]:                     const uint32_t = 1646275632
            pCode[875]:                     const uint32_t = 1768189545
            pCode[876]:                     const uint32_t = 1025533806
            pCode[877]:                     const uint32_t = 539768352
            pCode[878]:                     const uint32_t = 878998643
            pCode[879]:                     const uint32_t = 539570227
            pCode[880]:                     const uint32_t = 1684104562
            pCode[881]:                     const uint32_t = 2037149295
            pCode[882]:                     const uint32_t = 1718968864
            pCode[883]:                     const uint32_t = 544367974
            pCode[884]:                     const uint32_t = 1851880052
            pCode[885]:                     const uint32_t = 1919903347
            pCode[886]:                     const uint32_t = 1969381229
            pCode[887]:                     const uint32_t = 1919247974
            pCode[888]:                     const uint32_t = 168655648
            pCode[889]:                     const uint32_t = 1952541961
            pCode[890]:                     const uint32_t = 1920213044
            pCode[891]:                     const uint32_t = 1718840929
            pCode[892]:                     const uint32_t = 1936552559
            pCode[893]:                     const uint32_t = 221994331
            pCode[894]:                     const uint32_t = 222002442
            pCode[895]:                     const uint32_t = 1812598026
            pCode[896]:                     const uint32_t = 1970239841
            pCode[897]:                     const uint32_t = 1702045812
            pCode[898]:                     const uint32_t = 540876916
            pCode[899]:                     const uint32_t = 1646275632
            pCode[900]:                     const uint32_t = 1768189545
            pCode[901]:                     const uint32_t = 1025533806
            pCode[902]:                     const uint32_t = 539572000
            pCode[903]:                     const uint32_t = 1718185589
            pCode[904]:                     const uint32_t = 544043631
            pCode[905]:                     const uint32_t = 1886216563
            pCode[906]:                     const uint32_t = 846357868
            pCode[907]:                     const uint32_t = 1702109252
            pCode[908]:                     const uint32_t = 1920300152
            pCode[909]:                     const uint32_t = 1566274405
            pCode[910]:                     const uint32_t = 59
            pCode[911]:                     const uint32_t = 458756
            pCode[912]:                     const uint32_t = 1163873351
            pCode[913]:                     const uint32_t = 1650414680
            pCode[914]:                     const uint32_t = 1701209717
            pCode[915]:                     const uint32_t = 1701994354
            pCode[916]:                     const uint32_t = 1701995878
            pCode[917]:                     const uint32_t = 6644590
            pCode[918]:                     const uint32_t = 524292
            pCode[919]:                     const uint32_t = 1163873351
            pCode[920]:                     const uint32_t = 1650414680
            pCode[921]:                     const uint32_t = 1701209717
            pCode[922]:                     const uint32_t = 1701994354
            pCode[923]:                     const uint32_t = 1701995878
            pCode[924]:                     const uint32_t = 845505390
            pCode[925]:                     const uint32_t = 0
            pCode[926]:                     const uint32_t = 524292
            pCode[927]:                     const uint32_t = 1163873351
            pCode[928]:                     const uint32_t = 1851741272
            pCode[929]:                     const uint32_t = 1853189743
            pCode[930]:                     const uint32_t = 1919903337
            pCode[931]:                     const uint32_t = 1970364269
            pCode[932]:                     const uint32_t = 1718185057
            pCode[933]:                     const uint32_t = 7497065
            pCode[934]:                     const uint32_t = 655364
            pCode[935]:                     const uint32_t = 1197427783
            pCode[936]:                     const uint32_t = 1279741775
            pCode[937]:                     const uint32_t = 1885560645
            pCode[938]:                     const uint32_t = 1953718128
            pCode[939]:                     const uint32_t = 1600482425
            pCode[940]:                     const uint32_t = 1701734764
            pCode[941]:                     const uint32_t = 1919509599
            pCode[942]:                     const uint32_t = 1769235301
            pCode[943]:                     const uint32_t = 25974
            pCode[944]:                     const uint32_t = 524292
            pCode[945]:                     const uint32_t = 1197427783
            pCode[946]:                     const uint32_t = 1279741775
            pCode[947]:                     const uint32_t = 1852399429
            pCode[948]:                     const uint32_t = 1685417059
            pCode[949]:                     const uint32_t = 1768185701
            pCode[950]:                     const uint32_t = 1952671090
            pCode[951]:                     const uint32_t = 6649449
            pCode[952]:                     const uint32_t = 262149
            pCode[953]:                     const uint32_t = 6
            pCode[954]:                     const uint32_t = 1852399981
            pCode[955]:                     const uint32_t = 0
            pCode[956]:                     const uint32_t = 393221
            pCode[957]:                     const uint32_t = 10
            pCode[958]:                     const uint32_t = 2002874980
            pCode[959]:                     const uint32_t = 1836016479
            pCode[960]:                     const uint32_t = 1684955501
            pCode[961]:                     const uint32_t = 0
            pCode[962]:                     const uint32_t = 393222
            pCode[963]:                     const uint32_t = 10
            pCode[964]:                     const uint32_t = 0
            pCode[965]:                     const uint32_t = 1701080681
            pCode[966]:                     const uint32_t = 1868783480
            pCode[967]:                     const uint32_t = 7630453
            pCode[968]:                     const uint32_t = 458758
            pCode[969]:                     const uint32_t = 10
            pCode[970]:                     const uint32_t = 1
            pCode[971]:                     const uint32_t = 1953721961
            pCode[972]:                     const uint32_t = 1701015137
            pCode[973]:                     const uint32_t = 1970234207
            pCode[974]:                     const uint32_t = 29806
            pCode[975]:                     const uint32_t = 393222
            pCode[976]:                     const uint32_t = 10
            pCode[977]:                     const uint32_t = 2
            pCode[978]:                     const uint32_t = 1936877926
            pCode[979]:                     const uint32_t = 1852399476
            pCode[980]:                     const uint32_t = 7890276
            pCode[981]:                     const uint32_t = 458758
            pCode[982]:                     const uint32_t = 10
            pCode[983]:                     const uint32_t = 3
            pCode[984]:                     const uint32_t = 1953654134
            pCode[985]:                     const uint32_t = 1868527717
            pCode[986]:                     const uint32_t = 1702061670
            pCode[987]:                     const uint32_t = 116
            pCode[988]:                     const uint32_t = 458758
            pCode[989]:                     const uint32_t = 10
            pCode[990]:                     const uint32_t = 4
            pCode[991]:                     const uint32_t = 1936877926
            pCode[992]:                     const uint32_t = 1852399476
            pCode[993]:                     const uint32_t = 1851880563
            pCode[994]:                     const uint32_t = 25955
            pCode[995]:                     const uint32_t = 393222
            pCode[996]:                     const uint32_t = 10
            pCode[997]:                     const uint32_t = 5
            pCode[998]:                     const uint32_t = 1702125933
            pCode[999]:                     const uint32_t = 1818323314
            pCode[1000]:                    const uint32_t = 6580575
            pCode[1001]:                    const uint32_t = 458758
            pCode[1002]:                    const uint32_t = 10
            pCode[1003]:                    const uint32_t = 6
            pCode[1004]:                    const uint32_t = 1851880052
            pCode[1005]:                    const uint32_t = 1919903347
            pCode[1006]:                    const uint32_t = 1684627309
            pCode[1007]:                    const uint32_t = 0
            pCode[1008]:                    const uint32_t = 327686
            pCode[1009]:                    const uint32_t = 10
            pCode[1010]:                    const uint32_t = 7
            pCode[1011]:                    const uint32_t = 1684300144
            pCode[1012]:                    const uint32_t = 0
            pCode[1013]:                    const uint32_t = 393221
            pCode[1014]:                    const uint32_t = 13
            pCode[1015]:                    const uint32_t = 2002874980
            pCode[1016]:                    const uint32_t = 1836016479
            pCode[1017]:                    const uint32_t = 1684955501
            pCode[1018]:                    const uint32_t = 0
            pCode[1019]:                    const uint32_t = 393222
            pCode[1020]:                    const uint32_t = 13
            pCode[1021]:                    const uint32_t = 0
            pCode[1022]:                    const uint32_t = 1701080681
            pCode[1023]:                    const uint32_t = 1868783480
            pCode[1024]:                    const uint32_t = 7630453
            pCode[1025]:                    const uint32_t = 458758
            pCode[1026]:                    const uint32_t = 13
            pCode[1027]:                    const uint32_t = 1
            pCode[1028]:                    const uint32_t = 1953721961
            pCode[1029]:                    const uint32_t = 1701015137
            pCode[1030]:                    const uint32_t = 1970234207
            pCode[1031]:                    const uint32_t = 29806
            pCode[1032]:                    const uint32_t = 393222
            pCode[1033]:                    const uint32_t = 13
            pCode[1034]:                    const uint32_t = 2
            pCode[1035]:                    const uint32_t = 1936877926
            pCode[1036]:                    const uint32_t = 1852399476
            pCode[1037]:                    const uint32_t = 7890276
            pCode[1038]:                    const uint32_t = 458758
            pCode[1039]:                    const uint32_t = 13
            pCode[1040]:                    const uint32_t = 3
            pCode[1041]:                    const uint32_t = 1953654134
            pCode[1042]:                    const uint32_t = 1868527717
            pCode[1043]:                    const uint32_t = 1702061670
            pCode[1044]:                    const uint32_t = 116
            pCode[1045]:                    const uint32_t = 458758
            pCode[1046]:                    const uint32_t = 13
            pCode[1047]:                    const uint32_t = 4
            pCode[1048]:                    const uint32_t = 1936877926
            pCode[1049]:                    const uint32_t = 1852399476
            pCode[1050]:                    const uint32_t = 1851880563
            pCode[1051]:                    const uint32_t = 25955
            pCode[1052]:                    const uint32_t = 393222
            pCode[1053]:                    const uint32_t = 13
            pCode[1054]:                    const uint32_t = 5
            pCode[1055]:                    const uint32_t = 1702125933
            pCode[1056]:                    const uint32_t = 1818323314
            pCode[1057]:                    const uint32_t = 6580575
            pCode[1058]:                    const uint32_t = 458758
            pCode[1059]:                    const uint32_t = 13
            pCode[1060]:                    const uint32_t = 6
            pCode[1061]:                    const uint32_t = 1851880052
            pCode[1062]:                    const uint32_t = 1919903347
            pCode[1063]:                    const uint32_t = 1684627309
            pCode[1064]:                    const uint32_t = 0
            pCode[1065]:                    const uint32_t = 327686
            pCode[1066]:                    const uint32_t = 13
            pCode[1067]:                    const uint32_t = 7
            pCode[1068]:                    const uint32_t = 1684300144
            pCode[1069]:                    const uint32_t = 0
            pCode[1070]:                    const uint32_t = 458757
            pCode[1071]:                    const uint32_t = 15
            pCode[1072]:                    const uint32_t = 1852402786
            pCode[1073]:                    const uint32_t = 1919180654
            pCode[1074]:                    const uint32_t = 1601402721
            pCode[1075]:                    const uint32_t = 1717990754
            pCode[1076]:                    const uint32_t = 29285
            pCode[1077]:                    const uint32_t = 393222
            pCode[1078]:                    const uint32_t = 15
            pCode[1079]:                    const uint32_t = 0
            pCode[1080]:                    const uint32_t = 1852402786
            pCode[1081]:                    const uint32_t = 1919180654
            pCode[1082]:                    const uint32_t = 7567201
            pCode[1083]:                    const uint32_t = 196613
            pCode[1084]:                    const uint32_t = 17
            pCode[1085]:                    const uint32_t = 0
            pCode[1086]:                    const uint32_t = 327685
            pCode[1087]:                    const uint32_t = 20
            pCode[1088]:                    const uint32_t = 1147104359
            pCode[1089]:                    const uint32_t = 1232560498
            pCode[1090]:                    const uint32_t = 68
            pCode[1091]:                    const uint32_t = 262149
            pCode[1092]:                    const uint32_t = 29
            pCode[1093]:                    const uint32_t = 1953654134
            pCode[1094]:                    const uint32_t = 30821
            pCode[1095]:                    const uint32_t = 393222
            pCode[1096]:                    const uint32_t = 29
            pCode[1097]:                    const uint32_t = 0
            pCode[1098]:                    const uint32_t = 1769172848
            pCode[1099]:                    const uint32_t = 1852795252
            pCode[1100]:                    const uint32_t = 0
            pCode[1101]:                    const uint32_t = 327686
            pCode[1102]:                    const uint32_t = 29
            pCode[1103]:                    const uint32_t = 1
            pCode[1104]:                    const uint32_t = 2019522165
            pCode[1105]:                    const uint32_t = 0
            pCode[1106]:                    const uint32_t = 327686
            pCode[1107]:                    const uint32_t = 29
            pCode[1108]:                    const uint32_t = 2
            pCode[1109]:                    const uint32_t = 1836216174
            pCode[1110]:                    const uint32_t = 27745
            pCode[1111]:                    const uint32_t = 327686
            pCode[1112]:                    const uint32_t = 29
            pCode[1113]:                    const uint32_t = 3
            pCode[1114]:                    const uint32_t = 2036299381
            pCode[1115]:                    const uint32_t = 0
            pCode[1116]:                    const uint32_t = 327686
            pCode[1117]:                    const uint32_t = 29
            pCode[1118]:                    const uint32_t = 4
            pCode[1119]:                    const uint32_t = 1869377379
            pCode[1120]:                    const uint32_t = 114
            pCode[1121]:                    const uint32_t = 262149
            pCode[1122]:                    const uint32_t = 32
            pCode[1123]:                    const uint32_t = 1953654134
            pCode[1124]:                    const uint32_t = 30821
            pCode[1125]:                    const uint32_t = 393222
            pCode[1126]:                    const uint32_t = 32
            pCode[1127]:                    const uint32_t = 0
            pCode[1128]:                    const uint32_t = 1769172848
            pCode[1129]:                    const uint32_t = 1852795252
            pCode[1130]:                    const uint32_t = 0
            pCode[1131]:                    const uint32_t = 327686
            pCode[1132]:                    const uint32_t = 32
            pCode[1133]:                    const uint32_t = 1
            pCode[1134]:                    const uint32_t = 2019522165
            pCode[1135]:                    const uint32_t = 0
            pCode[1136]:                    const uint32_t = 327686
            pCode[1137]:                    const uint32_t = 32
            pCode[1138]:                    const uint32_t = 2
            pCode[1139]:                    const uint32_t = 1836216174
            pCode[1140]:                    const uint32_t = 27745
            pCode[1141]:                    const uint32_t = 327686
            pCode[1142]:                    const uint32_t = 32
            pCode[1143]:                    const uint32_t = 3
            pCode[1144]:                    const uint32_t = 2036299381
            pCode[1145]:                    const uint32_t = 0
            pCode[1146]:                    const uint32_t = 327686
            pCode[1147]:                    const uint32_t = 32
            pCode[1148]:                    const uint32_t = 4
            pCode[1149]:                    const uint32_t = 1869377379
            pCode[1150]:                    const uint32_t = 114
            pCode[1151]:                    const uint32_t = 393221
            pCode[1152]:                    const uint32_t = 34
            pCode[1153]:                    const uint32_t = 1953654134
            pCode[1154]:                    const uint32_t = 1650423909
            pCode[1155]:                    const uint32_t = 1701209717
            pCode[1156]:                    const uint32_t = 114
            pCode[1157]:                    const uint32_t = 393222
            pCode[1158]:                    const uint32_t = 34
            pCode[1159]:                    const uint32_t = 0
            pCode[1160]:                    const uint32_t = 1953654134
            pCode[1161]:                    const uint32_t = 1936024425
            pCode[1162]:                    const uint32_t = 0
            pCode[1163]:                    const uint32_t = 196613
            pCode[1164]:                    const uint32_t = 36
            pCode[1165]:                    const uint32_t = 0
            pCode[1166]:                    const uint32_t = 393221
            pCode[1167]:                    const uint32_t = 37
            pCode[1168]:                    const uint32_t = 1449094247
            pCode[1169]:                    const uint32_t = 1702130277
            pCode[1170]:                    const uint32_t = 1684949368
            pCode[1171]:                    const uint32_t = 30821
            pCode[1172]:                    const uint32_t = 458757
            pCode[1173]:                    const uint32_t = 47
            pCode[1174]:                    const uint32_t = 1851880052
            pCode[1175]:                    const uint32_t = 1919903347
            pCode[1176]:                    const uint32_t = 1969381229
            pCode[1177]:                    const uint32_t = 1919247974
            pCode[1178]:                    const uint32_t = 0
            pCode[1179]:                    const uint32_t = 393222
            pCode[1180]:                    const uint32_t = 47
            pCode[1181]:                    const uint32_t = 0
            pCode[1182]:                    const uint32_t = 1851880052
            pCode[1183]:                    const uint32_t = 1919903347
            pCode[1184]:                    const uint32_t = 29549
            pCode[1185]:                    const uint32_t = 196613
            pCode[1186]:                    const uint32_t = 49
            pCode[1187]:                    const uint32_t = 0
            pCode[1188]:                    const uint32_t = 393221
            pCode[1189]:                    const uint32_t = 59
            pCode[1190]:                    const uint32_t = 1348430951
            pCode[1191]:                    const uint32_t = 1700164197
            pCode[1192]:                    const uint32_t = 2019914866
            pCode[1193]:                    const uint32_t = 0
            pCode[1194]:                    const uint32_t = 393222
            pCode[1195]:                    const uint32_t = 59
            pCode[1196]:                    const uint32_t = 0
            pCode[1197]:                    const uint32_t = 1348430951
            pCode[1198]:                    const uint32_t = 1953067887
            pCode[1199]:                    const uint32_t = 7237481
            pCode[1200]:                    const uint32_t = 458758
            pCode[1201]:                    const uint32_t = 59
            pCode[1202]:                    const uint32_t = 1
            pCode[1203]:                    const uint32_t = 1348430951
            pCode[1204]:                    const uint32_t = 1953393007
            pCode[1205]:                    const uint32_t = 1702521171
            pCode[1206]:                    const uint32_t = 0
            pCode[1207]:                    const uint32_t = 458758
            pCode[1208]:                    const uint32_t = 59
            pCode[1209]:                    const uint32_t = 2
            pCode[1210]:                    const uint32_t = 1130327143
            pCode[1211]:                    const uint32_t = 1148217708
            pCode[1212]:                    const uint32_t = 1635021673
            pCode[1213]:                    const uint32_t = 6644590
            pCode[1214]:                    const uint32_t = 458758
            pCode[1215]:                    const uint32_t = 59
            pCode[1216]:                    const uint32_t = 3
            pCode[1217]:                    const uint32_t = 1130327143
            pCode[1218]:                    const uint32_t = 1147956341
            pCode[1219]:                    const uint32_t = 1635021673
            pCode[1220]:                    const uint32_t = 6644590
            pCode[1221]:                    const uint32_t = 196613
            pCode[1222]:                    const uint32_t = 61
            pCode[1223]:                    const uint32_t = 0
            pCode[1224]:                    const uint32_t = 458757
            pCode[1225]:                    const uint32_t = 62
            pCode[1226]:                    const uint32_t = 1835102822
            pCode[1227]:                    const uint32_t = 1633967973
            pCode[1228]:                    const uint32_t = 1650418036
            pCode[1229]:                    const uint32_t = 1801678700
            pCode[1230]:                    const uint32_t = 0
            pCode[1231]:                    const uint32_t = 327686
            pCode[1232]:                    const uint32_t = 62
            pCode[1233]:                    const uint32_t = 0
            pCode[1234]:                    const uint32_t = 2003134838
            pCode[1235]:                    const uint32_t = 0
            pCode[1236]:                    const uint32_t = 327686
            pCode[1237]:                    const uint32_t = 62
            pCode[1238]:                    const uint32_t = 1
            pCode[1239]:                    const uint32_t = 1785688688
            pCode[1240]:                    const uint32_t = 0
            pCode[1241]:                    const uint32_t = 393222
            pCode[1242]:                    const uint32_t = 62
            pCode[1243]:                    const uint32_t = 2
            pCode[1244]:                    const uint32_t = 2003134838
            pCode[1245]:                    const uint32_t = 1785688688
            pCode[1246]:                    const uint32_t = 0
            pCode[1247]:                    const uint32_t = 393222
            pCode[1248]:                    const uint32_t = 62
            pCode[1249]:                    const uint32_t = 3
            pCode[1250]:                    const uint32_t = 2003134838
            pCode[1251]:                    const uint32_t = 1936683103
            pCode[1252]:                    const uint32_t = 0
            pCode[1253]:                    const uint32_t = 458758
            pCode[1254]:                    const uint32_t = 62
            pCode[1255]:                    const uint32_t = 4
            pCode[1256]:                    const uint32_t = 1768058209
            pCode[1257]:                    const uint32_t = 1601465957
            pCode[1258]:                    const uint32_t = 1869377379
            pCode[1259]:                    const uint32_t = 114
            pCode[1260]:                    const uint32_t = 393222
            pCode[1261]:                    const uint32_t = 62
            pCode[1262]:                    const uint32_t = 5
            pCode[1263]:                    const uint32_t = 1751607660
            pCode[1264]:                    const uint32_t = 1868783476
            pCode[1265]:                    const uint32_t = 7499628
            pCode[1266]:                    const uint32_t = 458758
            pCode[1267]:                    const uint32_t = 62
            pCode[1268]:                    const uint32_t = 6
            pCode[1269]:                    const uint32_t = 1751607660
            pCode[1270]:                    const uint32_t = 1869635444
            pCode[1271]:                    const uint32_t = 1769236851
            pCode[1272]:                    const uint32_t = 28271
            pCode[1273]:                    const uint32_t = 458758
            pCode[1274]:                    const uint32_t = 62
            pCode[1275]:                    const uint32_t = 7
            pCode[1276]:                    const uint32_t = 1601724781
            pCode[1277]:                    const uint32_t = 2002874980
            pCode[1278]:                    const uint32_t = 1970234207
            pCode[1279]:                    const uint32_t = 29806
            pCode[1280]:                    const uint32_t = 327685
            pCode[1281]:                    const uint32_t = 64
            pCode[1282]:                    const uint32_t = 1835102822
            pCode[1283]:                    const uint32_t = 1633967973
            pCode[1284]:                    const uint32_t = 24948
            pCode[1285]:                    const uint32_t = 393221
            pCode[1286]:                    const uint32_t = 83
            pCode[1287]:                    const uint32_t = 1601467759
            pCode[1288]:                    const uint32_t = 1769172848
            pCode[1289]:                    const uint32_t = 1852795252
            pCode[1290]:                    const uint32_t = 0
            pCode[1291]:                    const uint32_t = 327685
            pCode[1292]:                    const uint32_t = 93
            pCode[1293]:                    const uint32_t = 1601467759
            pCode[1294]:                    const uint32_t = 1836216174
            pCode[1295]:                    const uint32_t = 27745
            pCode[1296]:                    const uint32_t = 327685
            pCode[1297]:                    const uint32_t = 106
            pCode[1298]:                    const uint32_t = 1601467759
            pCode[1299]:                    const uint32_t = 1869377379
            pCode[1300]:                    const uint32_t = 114
            pCode[1301]:                    const uint32_t = 393221
            pCode[1302]:                    const uint32_t = 112
            pCode[1303]:                    const uint32_t = 1852402786
            pCode[1304]:                    const uint32_t = 1919770478
            pCode[1305]:                    const uint32_t = 1869374047
            pCode[1306]:                    const uint32_t = 27491
            pCode[1307]:                    const uint32_t = 458758
            pCode[1308]:                    const uint32_t = 112
            pCode[1309]:                    const uint32_t = 0
            pCode[1310]:                    const uint32_t = 1869377379
            pCode[1311]:                    const uint32_t = 1634099058
            pCode[1312]:                    const uint32_t = 1919906915
            pCode[1313]:                    const uint32_t = 115
            pCode[1314]:                    const uint32_t = 524294
            pCode[1315]:                    const uint32_t = 112
            pCode[1316]:                    const uint32_t = 1
            pCode[1317]:                    const uint32_t = 1635018093
            pCode[1318]:                    const uint32_t = 1869766508
            pCode[1319]:                    const uint32_t = 1600677749
            pCode[1320]:                    const uint32_t = 1952670054
            pCode[1321]:                    const uint32_t = 7565935
            pCode[1322]:                    const uint32_t = 393222
            pCode[1323]:                    const uint32_t = 112
            pCode[1324]:                    const uint32_t = 2
            pCode[1325]:                    const uint32_t = 1869377379
            pCode[1326]:                    const uint32_t = 1852399474
            pCode[1327]:                    const uint32_t = 7890276
            pCode[1328]:                    const uint32_t = 524294
            pCode[1329]:                    const uint32_t = 112
            pCode[1330]:                    const uint32_t = 3
            pCode[1331]:                    const uint32_t = 1635018093
            pCode[1332]:                    const uint32_t = 1869766508
            pCode[1333]:                    const uint32_t = 1600677749
            pCode[1334]:                    const uint32_t = 1701080681
            pCode[1335]:                    const uint32_t = 120
            pCode[1336]:                    const uint32_t = 327685
            pCode[1337]:                    const uint32_t = 115
            pCode[1338]:                    const uint32_t = 1852402786
            pCode[1339]:                    const uint32_t = 1919770478
            pCode[1340]:                    const uint32_t = 0
            pCode[1341]:                    const uint32_t = 262149
            pCode[1342]:                    const uint32_t = 127
            pCode[1343]:                    const uint32_t = 1601467759
            pCode[1344]:                    const uint32_t = 30325
            pCode[1345]:                    const uint32_t = 393221
            pCode[1346]:                    const uint32_t = 140
            pCode[1347]:                    const uint32_t = 1601467759
            pCode[1348]:                    const uint32_t = 1869377379
            pCode[1349]:                    const uint32_t = 1684627314
            pCode[1350]:                    const uint32_t = 0
            pCode[1351]:                    const uint32_t = 393546
            pCode[1352]:                    const uint32_t = 1701407843
            pCode[1353]:                    const uint32_t = 1981838446
            pCode[1354]:                    const uint32_t = 1634430069
            pCode[1355]:                    const uint32_t = 808464750
            pCode[1356]:                    const uint32_t = 0
            pCode[1357]:                    const uint32_t = 393546
            pCode[1358]:                    const uint32_t = 1735549300
            pCode[1359]:                    const uint32_t = 1697477733
            pCode[1360]:                    const uint32_t = 1931507310
            pCode[1361]:                    const uint32_t = 1987209584
            pCode[1362]:                    const uint32_t = 3550769
            pCode[1363]:                    const uint32_t = 459082
            pCode[1364]:                    const uint32_t = 1735549300
            pCode[1365]:                    const uint32_t = 1697477733
            pCode[1366]:                    const uint32_t = 1981838958
            pCode[1367]:                    const uint32_t = 1634430069
            pCode[1368]:                    const uint32_t = 858665326
            pCode[1369]:                    const uint32_t = 0
            pCode[1370]:                    const uint32_t = 393546
            pCode[1371]:                    const uint32_t = 1920233061
            pCode[1372]:                    const uint32_t = 1869622649
            pCode[1373]:                    const uint32_t = 544501353
            pCode[1374]:                    const uint32_t = 1852399981
            pCode[1375]:                    const uint32_t = 0
            pCode[1376]:                    const uint32_t = 327752
            pCode[1377]:                    const uint32_t = 13
            pCode[1378]:                    const uint32_t = 0
            pCode[1379]:                    const uint32_t = 35
            pCode[1380]:                    const uint32_t = 0
            pCode[1381]:                    const uint32_t = 327752
            pCode[1382]:                    const uint32_t = 13
            pCode[1383]:                    const uint32_t = 1
            pCode[1384]:                    const uint32_t = 35
            pCode[1385]:                    const uint32_t = 4
            pCode[1386]:                    const uint32_t = 327752
            pCode[1387]:                    const uint32_t = 13
            pCode[1388]:                    const uint32_t = 2
            pCode[1389]:                    const uint32_t = 35
            pCode[1390]:                    const uint32_t = 8
            pCode[1391]:                    const uint32_t = 327752
            pCode[1392]:                    const uint32_t = 13
            pCode[1393]:                    const uint32_t = 3
            pCode[1394]:                    const uint32_t = 35
            pCode[1395]:                    const uint32_t = 12
            pCode[1396]:                    const uint32_t = 327752
            pCode[1397]:                    const uint32_t = 13
            pCode[1398]:                    const uint32_t = 4
            pCode[1399]:                    const uint32_t = 35
            pCode[1400]:                    const uint32_t = 16
            pCode[1401]:                    const uint32_t = 327752
            pCode[1402]:                    const uint32_t = 13
            pCode[1403]:                    const uint32_t = 5
            pCode[1404]:                    const uint32_t = 35
            pCode[1405]:                    const uint32_t = 20
            pCode[1406]:                    const uint32_t = 327752
            pCode[1407]:                    const uint32_t = 13
            pCode[1408]:                    const uint32_t = 6
            pCode[1409]:                    const uint32_t = 35
            pCode[1410]:                    const uint32_t = 24
            pCode[1411]:                    const uint32_t = 327752
            pCode[1412]:                    const uint32_t = 13
            pCode[1413]:                    const uint32_t = 7
            pCode[1414]:                    const uint32_t = 35
            pCode[1415]:                    const uint32_t = 28
            pCode[1416]:                    const uint32_t = 262215
            pCode[1417]:                    const uint32_t = 14
            pCode[1418]:                    const uint32_t = 6
            pCode[1419]:                    const uint32_t = 32
            pCode[1420]:                    const uint32_t = 262216
            pCode[1421]:                    const uint32_t = 15
            pCode[1422]:                    const uint32_t = 0
            pCode[1423]:                    const uint32_t = 24
            pCode[1424]:                    const uint32_t = 327752
            pCode[1425]:                    const uint32_t = 15
            pCode[1426]:                    const uint32_t = 0
            pCode[1427]:                    const uint32_t = 35
            pCode[1428]:                    const uint32_t = 0
            pCode[1429]:                    const uint32_t = 196679
            pCode[1430]:                    const uint32_t = 15
            pCode[1431]:                    const uint32_t = 2
            pCode[1432]:                    const uint32_t = 262215
            pCode[1433]:                    const uint32_t = 17
            pCode[1434]:                    const uint32_t = 34
            pCode[1435]:                    const uint32_t = 1
            pCode[1436]:                    const uint32_t = 262215
            pCode[1437]:                    const uint32_t = 17
            pCode[1438]:                    const uint32_t = 33
            pCode[1439]:                    const uint32_t = 0
            pCode[1440]:                    const uint32_t = 262215
            pCode[1441]:                    const uint32_t = 20
            pCode[1442]:                    const uint32_t = 11
            pCode[1443]:                    const uint32_t = 4426
            pCode[1444]:                    const uint32_t = 327752
            pCode[1445]:                    const uint32_t = 32
            pCode[1446]:                    const uint32_t = 0
            pCode[1447]:                    const uint32_t = 35
            pCode[1448]:                    const uint32_t = 0
            pCode[1449]:                    const uint32_t = 327752
            pCode[1450]:                    const uint32_t = 32
            pCode[1451]:                    const uint32_t = 1
            pCode[1452]:                    const uint32_t = 35
            pCode[1453]:                    const uint32_t = 12
            pCode[1454]:                    const uint32_t = 327752
            pCode[1455]:                    const uint32_t = 32
            pCode[1456]:                    const uint32_t = 2
            pCode[1457]:                    const uint32_t = 35
            pCode[1458]:                    const uint32_t = 16
            pCode[1459]:                    const uint32_t = 327752
            pCode[1460]:                    const uint32_t = 32
            pCode[1461]:                    const uint32_t = 3
            pCode[1462]:                    const uint32_t = 35
            pCode[1463]:                    const uint32_t = 28
            pCode[1464]:                    const uint32_t = 327752
            pCode[1465]:                    const uint32_t = 32
            pCode[1466]:                    const uint32_t = 4
            pCode[1467]:                    const uint32_t = 35
            pCode[1468]:                    const uint32_t = 32
            pCode[1469]:                    const uint32_t = 262215
            pCode[1470]:                    const uint32_t = 33
            pCode[1471]:                    const uint32_t = 6
            pCode[1472]:                    const uint32_t = 48
            pCode[1473]:                    const uint32_t = 262216
            pCode[1474]:                    const uint32_t = 34
            pCode[1475]:                    const uint32_t = 0
            pCode[1476]:                    const uint32_t = 24
            pCode[1477]:                    const uint32_t = 327752
            pCode[1478]:                    const uint32_t = 34
            pCode[1479]:                    const uint32_t = 0
            pCode[1480]:                    const uint32_t = 35
            pCode[1481]:                    const uint32_t = 0
            pCode[1482]:                    const uint32_t = 196679
            pCode[1483]:                    const uint32_t = 34
            pCode[1484]:                    const uint32_t = 2
            pCode[1485]:                    const uint32_t = 262215
            pCode[1486]:                    const uint32_t = 36
            pCode[1487]:                    const uint32_t = 34
            pCode[1488]:                    const uint32_t = 0
            pCode[1489]:                    const uint32_t = 262215
            pCode[1490]:                    const uint32_t = 36
            pCode[1491]:                    const uint32_t = 33
            pCode[1492]:                    const uint32_t = 5
            pCode[1493]:                    const uint32_t = 262215
            pCode[1494]:                    const uint32_t = 37
            pCode[1495]:                    const uint32_t = 11
            pCode[1496]:                    const uint32_t = 42
            pCode[1497]:                    const uint32_t = 262215
            pCode[1498]:                    const uint32_t = 46
            pCode[1499]:                    const uint32_t = 6
            pCode[1500]:                    const uint32_t = 64
            pCode[1501]:                    const uint32_t = 262216
            pCode[1502]:                    const uint32_t = 47
            pCode[1503]:                    const uint32_t = 0
            pCode[1504]:                    const uint32_t = 5
            pCode[1505]:                    const uint32_t = 262216
            pCode[1506]:                    const uint32_t = 47
            pCode[1507]:                    const uint32_t = 0
            pCode[1508]:                    const uint32_t = 24
            pCode[1509]:                    const uint32_t = 327752
            pCode[1510]:                    const uint32_t = 47
            pCode[1511]:                    const uint32_t = 0
            pCode[1512]:                    const uint32_t = 35
            pCode[1513]:                    const uint32_t = 0
            pCode[1514]:                    const uint32_t = 327752
            pCode[1515]:                    const uint32_t = 47
            pCode[1516]:                    const uint32_t = 0
            pCode[1517]:                    const uint32_t = 7
            pCode[1518]:                    const uint32_t = 16
            pCode[1519]:                    const uint32_t = 196679
            pCode[1520]:                    const uint32_t = 47
            pCode[1521]:                    const uint32_t = 2
            pCode[1522]:                    const uint32_t = 262215
            pCode[1523]:                    const uint32_t = 49
            pCode[1524]:                    const uint32_t = 34
            pCode[1525]:                    const uint32_t = 0
            pCode[1526]:                    const uint32_t = 262215
            pCode[1527]:                    const uint32_t = 49
            pCode[1528]:                    const uint32_t = 33
            pCode[1529]:                    const uint32_t = 6
            pCode[1530]:                    const uint32_t = 327752
            pCode[1531]:                    const uint32_t = 59
            pCode[1532]:                    const uint32_t = 0
            pCode[1533]:                    const uint32_t = 11
            pCode[1534]:                    const uint32_t = 0
            pCode[1535]:                    const uint32_t = 327752
            pCode[1536]:                    const uint32_t = 59
            pCode[1537]:                    const uint32_t = 1
            pCode[1538]:                    const uint32_t = 11
            pCode[1539]:                    const uint32_t = 1
            pCode[1540]:                    const uint32_t = 327752
            pCode[1541]:                    const uint32_t = 59
            pCode[1542]:                    const uint32_t = 2
            pCode[1543]:                    const uint32_t = 11
            pCode[1544]:                    const uint32_t = 3
            pCode[1545]:                    const uint32_t = 327752
            pCode[1546]:                    const uint32_t = 59
            pCode[1547]:                    const uint32_t = 3
            pCode[1548]:                    const uint32_t = 11
            pCode[1549]:                    const uint32_t = 4
            pCode[1550]:                    const uint32_t = 196679
            pCode[1551]:                    const uint32_t = 59
            pCode[1552]:                    const uint32_t = 2
            pCode[1553]:                    const uint32_t = 262216
            pCode[1554]:                    const uint32_t = 62
            pCode[1555]:                    const uint32_t = 0
            pCode[1556]:                    const uint32_t = 5
            pCode[1557]:                    const uint32_t = 327752
            pCode[1558]:                    const uint32_t = 62
            pCode[1559]:                    const uint32_t = 0
            pCode[1560]:                    const uint32_t = 35
            pCode[1561]:                    const uint32_t = 0
            pCode[1562]:                    const uint32_t = 327752
            pCode[1563]:                    const uint32_t = 62
            pCode[1564]:                    const uint32_t = 0
            pCode[1565]:                    const uint32_t = 7
            pCode[1566]:                    const uint32_t = 16
            pCode[1567]:                    const uint32_t = 262216
            pCode[1568]:                    const uint32_t = 62
            pCode[1569]:                    const uint32_t = 1
            pCode[1570]:                    const uint32_t = 5
            pCode[1571]:                    const uint32_t = 327752
            pCode[1572]:                    const uint32_t = 62
            pCode[1573]:                    const uint32_t = 1
            pCode[1574]:                    const uint32_t = 35
            pCode[1575]:                    const uint32_t = 64
            pCode[1576]:                    const uint32_t = 327752
            pCode[1577]:                    const uint32_t = 62
            pCode[1578]:                    const uint32_t = 1
            pCode[1579]:                    const uint32_t = 7
            pCode[1580]:                    const uint32_t = 16
            pCode[1581]:                    const uint32_t = 262216
            pCode[1582]:                    const uint32_t = 62
            pCode[1583]:                    const uint32_t = 2
            pCode[1584]:                    const uint32_t = 5
            pCode[1585]:                    const uint32_t = 327752
            pCode[1586]:                    const uint32_t = 62
            pCode[1587]:                    const uint32_t = 2
            pCode[1588]:                    const uint32_t = 35
            pCode[1589]:                    const uint32_t = 128
            pCode[1590]:                    const uint32_t = 327752
            pCode[1591]:                    const uint32_t = 62
            pCode[1592]:                    const uint32_t = 2
            pCode[1593]:                    const uint32_t = 7
            pCode[1594]:                    const uint32_t = 16
            pCode[1595]:                    const uint32_t = 327752
            pCode[1596]:                    const uint32_t = 62
            pCode[1597]:                    const uint32_t = 3
            pCode[1598]:                    const uint32_t = 35
            pCode[1599]:                    const uint32_t = 192
            pCode[1600]:                    const uint32_t = 327752
            pCode[1601]:                    const uint32_t = 62
            pCode[1602]:                    const uint32_t = 4
            pCode[1603]:                    const uint32_t = 35
            pCode[1604]:                    const uint32_t = 208
            pCode[1605]:                    const uint32_t = 327752
            pCode[1606]:                    const uint32_t = 62
            pCode[1607]:                    const uint32_t = 5
            pCode[1608]:                    const uint32_t = 35
            pCode[1609]:                    const uint32_t = 224
            pCode[1610]:                    const uint32_t = 327752
            pCode[1611]:                    const uint32_t = 62
            pCode[1612]:                    const uint32_t = 6
            pCode[1613]:                    const uint32_t = 35
            pCode[1614]:                    const uint32_t = 240
            pCode[1615]:                    const uint32_t = 327752
            pCode[1616]:                    const uint32_t = 62
            pCode[1617]:                    const uint32_t = 7
            pCode[1618]:                    const uint32_t = 35
            pCode[1619]:                    const uint32_t = 256
            pCode[1620]:                    const uint32_t = 196679
            pCode[1621]:                    const uint32_t = 62
            pCode[1622]:                    const uint32_t = 2
            pCode[1623]:                    const uint32_t = 262215
            pCode[1624]:                    const uint32_t = 64
            pCode[1625]:                    const uint32_t = 34
            pCode[1626]:                    const uint32_t = 0
            pCode[1627]:                    const uint32_t = 262215
            pCode[1628]:                    const uint32_t = 64
            pCode[1629]:                    const uint32_t = 33
            pCode[1630]:                    const uint32_t = 0
            pCode[1631]:                    const uint32_t = 262215
            pCode[1632]:                    const uint32_t = 83
            pCode[1633]:                    const uint32_t = 30
            pCode[1634]:                    const uint32_t = 0
            pCode[1635]:                    const uint32_t = 262215
            pCode[1636]:                    const uint32_t = 93
            pCode[1637]:                    const uint32_t = 30
            pCode[1638]:                    const uint32_t = 1
            pCode[1639]:                    const uint32_t = 262215
            pCode[1640]:                    const uint32_t = 106
            pCode[1641]:                    const uint32_t = 30
            pCode[1642]:                    const uint32_t = 2
            pCode[1643]:                    const uint32_t = 327752
            pCode[1644]:                    const uint32_t = 112
            pCode[1645]:                    const uint32_t = 0
            pCode[1646]:                    const uint32_t = 35
            pCode[1647]:                    const uint32_t = 0
            pCode[1648]:                    const uint32_t = 327752
            pCode[1649]:                    const uint32_t = 112
            pCode[1650]:                    const uint32_t = 1
            pCode[1651]:                    const uint32_t = 35
            pCode[1652]:                    const uint32_t = 16
            pCode[1653]:                    const uint32_t = 327752
            pCode[1654]:                    const uint32_t = 112
            pCode[1655]:                    const uint32_t = 2
            pCode[1656]:                    const uint32_t = 35
            pCode[1657]:                    const uint32_t = 32
            pCode[1658]:                    const uint32_t = 327752
            pCode[1659]:                    const uint32_t = 112
            pCode[1660]:                    const uint32_t = 3
            pCode[1661]:                    const uint32_t = 35
            pCode[1662]:                    const uint32_t = 36
            pCode[1663]:                    const uint32_t = 196679
            pCode[1664]:                    const uint32_t = 112
            pCode[1665]:                    const uint32_t = 2
            pCode[1666]:                    const uint32_t = 262215
            pCode[1667]:                    const uint32_t = 115
            pCode[1668]:                    const uint32_t = 34
            pCode[1669]:                    const uint32_t = 1
            pCode[1670]:                    const uint32_t = 262215
            pCode[1671]:                    const uint32_t = 115
            pCode[1672]:                    const uint32_t = 33
            pCode[1673]:                    const uint32_t = 1
            pCode[1674]:                    const uint32_t = 196679
            pCode[1675]:                    const uint32_t = 119
            pCode[1676]:                    const uint32_t = 5300
            pCode[1677]:                    const uint32_t = 196679
            pCode[1678]:                    const uint32_t = 121
            pCode[1679]:                    const uint32_t = 5300
            pCode[1680]:                    const uint32_t = 196679
            pCode[1681]:                    const uint32_t = 122
            pCode[1682]:                    const uint32_t = 5300
            pCode[1683]:                    const uint32_t = 196679
            pCode[1684]:                    const uint32_t = 123
            pCode[1685]:                    const uint32_t = 5300
            pCode[1686]:                    const uint32_t = 196679
            pCode[1687]:                    const uint32_t = 124
            pCode[1688]:                    const uint32_t = 5300
            pCode[1689]:                    const uint32_t = 262215
            pCode[1690]:                    const uint32_t = 127
            pCode[1691]:                    const uint32_t = 30
            pCode[1692]:                    const uint32_t = 3
            pCode[1693]:                    const uint32_t = 196679
            pCode[1694]:                    const uint32_t = 140
            pCode[1695]:                    const uint32_t = 14
            pCode[1696]:                    const uint32_t = 262215
            pCode[1697]:                    const uint32_t = 140
            pCode[1698]:                    const uint32_t = 30
            pCode[1699]:                    const uint32_t = 4
            pCode[1700]:                    const uint32_t = 196679
            pCode[1701]:                    const uint32_t = 145
            pCode[1702]:                    const uint32_t = 5300
            pCode[1703]:                    const uint32_t = 196679
            pCode[1704]:                    const uint32_t = 146
            pCode[1705]:                    const uint32_t = 5300
            pCode[1706]:                    const uint32_t = 131091
            pCode[1707]:                    const uint32_t = 4
            pCode[1708]:                    const uint32_t = 196641
            pCode[1709]:                    const uint32_t = 5
            pCode[1710]:                    const uint32_t = 4
            pCode[1711]:                    const uint32_t = 262165
            pCode[1712]:                    const uint32_t = 8
            pCode[1713]:                    const uint32_t = 32
            pCode[1714]:                    const uint32_t = 0
            pCode[1715]:                    const uint32_t = 262165
            pCode[1716]:                    const uint32_t = 9
            pCode[1717]:                    const uint32_t = 32
            pCode[1718]:                    const uint32_t = 1
            pCode[1719]:                    const uint32_t = 655390
            pCode[1720]:                    const uint32_t = 10
            pCode[1721]:                    const uint32_t = 8
            pCode[1722]:                    const uint32_t = 8
            pCode[1723]:                    const uint32_t = 8
            pCode[1724]:                    const uint32_t = 9
            pCode[1725]:                    const uint32_t = 8
            pCode[1726]:                    const uint32_t = 8
            pCode[1727]:                    const uint32_t = 8
            pCode[1728]:                    const uint32_t = 8
            pCode[1729]:                    const uint32_t = 655390
            pCode[1730]:                    const uint32_t = 13
            pCode[1731]:                    const uint32_t = 8
            pCode[1732]:                    const uint32_t = 8
            pCode[1733]:                    const uint32_t = 8
            pCode[1734]:                    const uint32_t = 9
            pCode[1735]:                    const uint32_t = 8
            pCode[1736]:                    const uint32_t = 8
            pCode[1737]:                    const uint32_t = 8
            pCode[1738]:                    const uint32_t = 8
            pCode[1739]:                    const uint32_t = 196637
            pCode[1740]:                    const uint32_t = 14
            pCode[1741]:                    const uint32_t = 13
            pCode[1742]:                    const uint32_t = 196638
            pCode[1743]:                    const uint32_t = 15
            pCode[1744]:                    const uint32_t = 14
            pCode[1745]:                    const uint32_t = 262176
            pCode[1746]:                    const uint32_t = 16
            pCode[1747]:                    const uint32_t = 12
            pCode[1748]:                    const uint32_t = 15
            pCode[1749]:                    const uint32_t = 262203
            pCode[1750]:                    const uint32_t = 16
            pCode[1751]:                    const uint32_t = 17
            pCode[1752]:                    const uint32_t = 12
            pCode[1753]:                    const uint32_t = 262187
            pCode[1754]:                    const uint32_t = 9
            pCode[1755]:                    const uint32_t = 18
            pCode[1756]:                    const uint32_t = 0
            pCode[1757]:                    const uint32_t = 262176
            pCode[1758]:                    const uint32_t = 19
            pCode[1759]:                    const uint32_t = 1
            pCode[1760]:                    const uint32_t = 9
            pCode[1761]:                    const uint32_t = 262203
            pCode[1762]:                    const uint32_t = 19
            pCode[1763]:                    const uint32_t = 20
            pCode[1764]:                    const uint32_t = 1
            pCode[1765]:                    const uint32_t = 262176
            pCode[1766]:                    const uint32_t = 22
            pCode[1767]:                    const uint32_t = 12
            pCode[1768]:                    const uint32_t = 13
            pCode[1769]:                    const uint32_t = 196630
            pCode[1770]:                    const uint32_t = 26
            pCode[1771]:                    const uint32_t = 32
            pCode[1772]:                    const uint32_t = 262167
            pCode[1773]:                    const uint32_t = 27
            pCode[1774]:                    const uint32_t = 26
            pCode[1775]:                    const uint32_t = 3
            pCode[1776]:                    const uint32_t = 262167
            pCode[1777]:                    const uint32_t = 28
            pCode[1778]:                    const uint32_t = 26
            pCode[1779]:                    const uint32_t = 4
            pCode[1780]:                    const uint32_t = 458782
            pCode[1781]:                    const uint32_t = 29
            pCode[1782]:                    const uint32_t = 27
            pCode[1783]:                    const uint32_t = 26
            pCode[1784]:                    const uint32_t = 27
            pCode[1785]:                    const uint32_t = 26
            pCode[1786]:                    const uint32_t = 28
            pCode[1787]:                    const uint32_t = 458782
            pCode[1788]:                    const uint32_t = 32
            pCode[1789]:                    const uint32_t = 27
            pCode[1790]:                    const uint32_t = 26
            pCode[1791]:                    const uint32_t = 27
            pCode[1792]:                    const uint32_t = 26
            pCode[1793]:                    const uint32_t = 28
            pCode[1794]:                    const uint32_t = 196637
            pCode[1795]:                    const uint32_t = 33
            pCode[1796]:                    const uint32_t = 32
            pCode[1797]:                    const uint32_t = 196638
            pCode[1798]:                    const uint32_t = 34
            pCode[1799]:                    const uint32_t = 33
            pCode[1800]:                    const uint32_t = 262176
            pCode[1801]:                    const uint32_t = 35
            pCode[1802]:                    const uint32_t = 12
            pCode[1803]:                    const uint32_t = 34
            pCode[1804]:                    const uint32_t = 262203
            pCode[1805]:                    const uint32_t = 35
            pCode[1806]:                    const uint32_t = 36
            pCode[1807]:                    const uint32_t = 12
            pCode[1808]:                    const uint32_t = 262203
            pCode[1809]:                    const uint32_t = 19
            pCode[1810]:                    const uint32_t = 37
            pCode[1811]:                    const uint32_t = 1
            pCode[1812]:                    const uint32_t = 262176
            pCode[1813]:                    const uint32_t = 39
            pCode[1814]:                    const uint32_t = 12
            pCode[1815]:                    const uint32_t = 32
            pCode[1816]:                    const uint32_t = 262168
            pCode[1817]:                    const uint32_t = 43
            pCode[1818]:                    const uint32_t = 28
            pCode[1819]:                    const uint32_t = 4
            pCode[1820]:                    const uint32_t = 196637
            pCode[1821]:                    const uint32_t = 46
            pCode[1822]:                    const uint32_t = 43
            pCode[1823]:                    const uint32_t = 196638
            pCode[1824]:                    const uint32_t = 47
            pCode[1825]:                    const uint32_t = 46
            pCode[1826]:                    const uint32_t = 262176
            pCode[1827]:                    const uint32_t = 48
            pCode[1828]:                    const uint32_t = 12
            pCode[1829]:                    const uint32_t = 47
            pCode[1830]:                    const uint32_t = 262203
            pCode[1831]:                    const uint32_t = 48
            pCode[1832]:                    const uint32_t = 49
            pCode[1833]:                    const uint32_t = 12
            pCode[1834]:                    const uint32_t = 262176
            pCode[1835]:                    const uint32_t = 54
            pCode[1836]:                    const uint32_t = 12
            pCode[1837]:                    const uint32_t = 43
            pCode[1838]:                    const uint32_t = 262187
            pCode[1839]:                    const uint32_t = 8
            pCode[1840]:                    const uint32_t = 57
            pCode[1841]:                    const uint32_t = 1
            pCode[1842]:                    const uint32_t = 262172
            pCode[1843]:                    const uint32_t = 58
            pCode[1844]:                    const uint32_t = 26
            pCode[1845]:                    const uint32_t = 57
            pCode[1846]:                    const uint32_t = 393246
            pCode[1847]:                    const uint32_t = 59
            pCode[1848]:                    const uint32_t = 28
            pCode[1849]:                    const uint32_t = 26
            pCode[1850]:                    const uint32_t = 58
            pCode[1851]:                    const uint32_t = 58
            pCode[1852]:                    const uint32_t = 262176
            pCode[1853]:                    const uint32_t = 60
            pCode[1854]:                    const uint32_t = 3
            pCode[1855]:                    const uint32_t = 59
            pCode[1856]:                    const uint32_t = 262203
            pCode[1857]:                    const uint32_t = 60
            pCode[1858]:                    const uint32_t = 61
            pCode[1859]:                    const uint32_t = 3
            pCode[1860]:                    const uint32_t = 655390
            pCode[1861]:                    const uint32_t = 62
            pCode[1862]:                    const uint32_t = 43
            pCode[1863]:                    const uint32_t = 43
            pCode[1864]:                    const uint32_t = 43
            pCode[1865]:                    const uint32_t = 28
            pCode[1866]:                    const uint32_t = 28
            pCode[1867]:                    const uint32_t = 28
            pCode[1868]:                    const uint32_t = 28
            pCode[1869]:                    const uint32_t = 8
            pCode[1870]:                    const uint32_t = 262176
            pCode[1871]:                    const uint32_t = 63
            pCode[1872]:                    const uint32_t = 2
            pCode[1873]:                    const uint32_t = 62
            pCode[1874]:                    const uint32_t = 262203
            pCode[1875]:                    const uint32_t = 63
            pCode[1876]:                    const uint32_t = 64
            pCode[1877]:                    const uint32_t = 2
            pCode[1878]:                    const uint32_t = 262187
            pCode[1879]:                    const uint32_t = 9
            pCode[1880]:                    const uint32_t = 65
            pCode[1881]:                    const uint32_t = 2
            pCode[1882]:                    const uint32_t = 262176
            pCode[1883]:                    const uint32_t = 66
            pCode[1884]:                    const uint32_t = 2
            pCode[1885]:                    const uint32_t = 43
            pCode[1886]:                    const uint32_t = 262187
            pCode[1887]:                    const uint32_t = 26
            pCode[1888]:                    const uint32_t = 74
            pCode[1889]:                    const uint32_t = 1065353216
            pCode[1890]:                    const uint32_t = 262176
            pCode[1891]:                    const uint32_t = 80
            pCode[1892]:                    const uint32_t = 3
            pCode[1893]:                    const uint32_t = 28
            pCode[1894]:                    const uint32_t = 262176
            pCode[1895]:                    const uint32_t = 82
            pCode[1896]:                    const uint32_t = 3
            pCode[1897]:                    const uint32_t = 27
            pCode[1898]:                    const uint32_t = 262203
            pCode[1899]:                    const uint32_t = 82
            pCode[1900]:                    const uint32_t = 83
            pCode[1901]:                    const uint32_t = 3
            pCode[1902]:                    const uint32_t = 262203
            pCode[1903]:                    const uint32_t = 82
            pCode[1904]:                    const uint32_t = 93
            pCode[1905]:                    const uint32_t = 3
            pCode[1906]:                    const uint32_t = 262187
            pCode[1907]:                    const uint32_t = 26
            pCode[1908]:                    const uint32_t = 99
            pCode[1909]:                    const uint32_t = 0
            pCode[1910]:                    const uint32_t = 262203
            pCode[1911]:                    const uint32_t = 82
            pCode[1912]:                    const uint32_t = 106
            pCode[1913]:                    const uint32_t = 3
            pCode[1914]:                    const uint32_t = 393246
            pCode[1915]:                    const uint32_t = 112
            pCode[1916]:                    const uint32_t = 28
            pCode[1917]:                    const uint32_t = 28
            pCode[1918]:                    const uint32_t = 8
            pCode[1919]:                    const uint32_t = 8
            pCode[1920]:                    const uint32_t = 196637
            pCode[1921]:                    const uint32_t = 113
            pCode[1922]:                    const uint32_t = 112
            pCode[1923]:                    const uint32_t = 262176
            pCode[1924]:                    const uint32_t = 114
            pCode[1925]:                    const uint32_t = 2
            pCode[1926]:                    const uint32_t = 113
            pCode[1927]:                    const uint32_t = 262203
            pCode[1928]:                    const uint32_t = 114
            pCode[1929]:                    const uint32_t = 115
            pCode[1930]:                    const uint32_t = 2
            pCode[1931]:                    const uint32_t = 262176
            pCode[1932]:                    const uint32_t = 120
            pCode[1933]:                    const uint32_t = 2
            pCode[1934]:                    const uint32_t = 28
            pCode[1935]:                    const uint32_t = 262167
            pCode[1936]:                    const uint32_t = 125
            pCode[1937]:                    const uint32_t = 26
            pCode[1938]:                    const uint32_t = 2
            pCode[1939]:                    const uint32_t = 262176
            pCode[1940]:                    const uint32_t = 126
            pCode[1941]:                    const uint32_t = 3
            pCode[1942]:                    const uint32_t = 125
            pCode[1943]:                    const uint32_t = 262203
            pCode[1944]:                    const uint32_t = 126
            pCode[1945]:                    const uint32_t = 127
            pCode[1946]:                    const uint32_t = 3
            pCode[1947]:                    const uint32_t = 262187
            pCode[1948]:                    const uint32_t = 8
            pCode[1949]:                    const uint32_t = 132
            pCode[1950]:                    const uint32_t = 0
            pCode[1951]:                    const uint32_t = 262176
            pCode[1952]:                    const uint32_t = 133
            pCode[1953]:                    const uint32_t = 3
            pCode[1954]:                    const uint32_t = 26
            pCode[1955]:                    const uint32_t = 262176
            pCode[1956]:                    const uint32_t = 139
            pCode[1957]:                    const uint32_t = 3
            pCode[1958]:                    const uint32_t = 8
            pCode[1959]:                    const uint32_t = 262203
            pCode[1960]:                    const uint32_t = 139
            pCode[1961]:                    const uint32_t = 140
            pCode[1962]:                    const uint32_t = 3
            pCode[1963]:                    const uint32_t = 262176
            pCode[1964]:                    const uint32_t = 144
            pCode[1965]:                    const uint32_t = 2
            pCode[1966]:                    const uint32_t = 8
            pCode[1967]:                    const uint32_t = 262152
            pCode[1968]:                    const uint32_t = 1
            pCode[1969]:                    const uint32_t = 25
            pCode[1970]:                    const uint32_t = 11
            pCode[1971]:                    const uint32_t = 327734
            pCode[1972]:                    const uint32_t = 4
            pCode[1973]:                    const uint32_t = 6
            pCode[1974]:                    const uint32_t = 0
            pCode[1975]:                    const uint32_t = 5
            pCode[1976]:                    const uint32_t = 131320
            pCode[1977]:                    const uint32_t = 7
            pCode[1978]:                    const uint32_t = 262152
            pCode[1979]:                    const uint32_t = 1
            pCode[1980]:                    const uint32_t = 26
            pCode[1981]:                    const uint32_t = 0
            pCode[1982]:                    const uint32_t = 262205
            pCode[1983]:                    const uint32_t = 9
            pCode[1984]:                    const uint32_t = 21
            pCode[1985]:                    const uint32_t = 20
            pCode[1986]:                    const uint32_t = 393281
            pCode[1987]:                    const uint32_t = 22
            pCode[1988]:                    const uint32_t = 23
            pCode[1989]:                    const uint32_t = 17
            pCode[1990]:                    const uint32_t = 18
            pCode[1991]:                    const uint32_t = 21
            pCode[1992]:                    const uint32_t = 262205
            pCode[1993]:                    const uint32_t = 13
            pCode[1994]:                    const uint32_t = 24
            pCode[1995]:                    const uint32_t = 23
            pCode[1996]:                    const uint32_t = 262544
            pCode[1997]:                    const uint32_t = 10
            pCode[1998]:                    const uint32_t = 25
            pCode[1999]:                    const uint32_t = 24
            pCode[2000]:                    const uint32_t = 327761
            pCode[2001]:                    const uint32_t = 8
            pCode[2002]:                    const uint32_t = 179
            pCode[2003]:                    const uint32_t = 25
            pCode[2004]:                    const uint32_t = 5
            pCode[2005]:                    const uint32_t = 327761
            pCode[2006]:                    const uint32_t = 8
            pCode[2007]:                    const uint32_t = 180
            pCode[2008]:                    const uint32_t = 25
            pCode[2009]:                    const uint32_t = 6
            pCode[2010]:                    const uint32_t = 262152
            pCode[2011]:                    const uint32_t = 1
            pCode[2012]:                    const uint32_t = 27
            pCode[2013]:                    const uint32_t = 0
            pCode[2014]:                    const uint32_t = 262205
            pCode[2015]:                    const uint32_t = 9
            pCode[2016]:                    const uint32_t = 38
            pCode[2017]:                    const uint32_t = 37
            pCode[2018]:                    const uint32_t = 393281
            pCode[2019]:                    const uint32_t = 39
            pCode[2020]:                    const uint32_t = 40
            pCode[2021]:                    const uint32_t = 36
            pCode[2022]:                    const uint32_t = 18
            pCode[2023]:                    const uint32_t = 38
            pCode[2024]:                    const uint32_t = 262205
            pCode[2025]:                    const uint32_t = 32
            pCode[2026]:                    const uint32_t = 41
            pCode[2027]:                    const uint32_t = 40
            pCode[2028]:                    const uint32_t = 262544
            pCode[2029]:                    const uint32_t = 29
            pCode[2030]:                    const uint32_t = 42
            pCode[2031]:                    const uint32_t = 41
            pCode[2032]:                    const uint32_t = 327761
            pCode[2033]:                    const uint32_t = 27
            pCode[2034]:                    const uint32_t = 186
            pCode[2035]:                    const uint32_t = 42
            pCode[2036]:                    const uint32_t = 0
            pCode[2037]:                    const uint32_t = 327761
            pCode[2038]:                    const uint32_t = 26
            pCode[2039]:                    const uint32_t = 187
            pCode[2040]:                    const uint32_t = 42
            pCode[2041]:                    const uint32_t = 1
            pCode[2042]:                    const uint32_t = 327761
            pCode[2043]:                    const uint32_t = 27
            pCode[2044]:                    const uint32_t = 188
            pCode[2045]:                    const uint32_t = 42
            pCode[2046]:                    const uint32_t = 2
            pCode[2047]:                    const uint32_t = 327761
            pCode[2048]:                    const uint32_t = 26
            pCode[2049]:                    const uint32_t = 189
            pCode[2050]:                    const uint32_t = 42
            pCode[2051]:                    const uint32_t = 3
            pCode[2052]:                    const uint32_t = 327761
            pCode[2053]:                    const uint32_t = 28
            pCode[2054]:                    const uint32_t = 190
            pCode[2055]:                    const uint32_t = 42
            pCode[2056]:                    const uint32_t = 4
            pCode[2057]:                    const uint32_t = 262152
            pCode[2058]:                    const uint32_t = 1
            pCode[2059]:                    const uint32_t = 28
            pCode[2060]:                    const uint32_t = 0
            pCode[2061]:                    const uint32_t = 393281
            pCode[2062]:                    const uint32_t = 54
            pCode[2063]:                    const uint32_t = 55
            pCode[2064]:                    const uint32_t = 49
            pCode[2065]:                    const uint32_t = 18
            pCode[2066]:                    const uint32_t = 180
            pCode[2067]:                    const uint32_t = 262205
            pCode[2068]:                    const uint32_t = 43
            pCode[2069]:                    const uint32_t = 56
            pCode[2070]:                    const uint32_t = 55
            pCode[2071]:                    const uint32_t = 262152
            pCode[2072]:                    const uint32_t = 1
            pCode[2073]:                    const uint32_t = 30
            pCode[2074]:                    const uint32_t = 0
            pCode[2075]:                    const uint32_t = 327745
            pCode[2076]:                    const uint32_t = 66
            pCode[2077]:                    const uint32_t = 67
            pCode[2078]:                    const uint32_t = 64
            pCode[2079]:                    const uint32_t = 65
            pCode[2080]:                    const uint32_t = 262205
            pCode[2081]:                    const uint32_t = 43
            pCode[2082]:                    const uint32_t = 68
            pCode[2083]:                    const uint32_t = 67
            pCode[2084]:                    const uint32_t = 327826
            pCode[2085]:                    const uint32_t = 43
            pCode[2086]:                    const uint32_t = 70
            pCode[2087]:                    const uint32_t = 68
            pCode[2088]:                    const uint32_t = 56
            pCode[2089]:                    const uint32_t = 327761
            pCode[2090]:                    const uint32_t = 26
            pCode[2091]:                    const uint32_t = 75
            pCode[2092]:                    const uint32_t = 186
            pCode[2093]:                    const uint32_t = 0
            pCode[2094]:                    const uint32_t = 327761
            pCode[2095]:                    const uint32_t = 26
            pCode[2096]:                    const uint32_t = 76
            pCode[2097]:                    const uint32_t = 186
            pCode[2098]:                    const uint32_t = 1
            pCode[2099]:                    const uint32_t = 327761
            pCode[2100]:                    const uint32_t = 26
            pCode[2101]:                    const uint32_t = 77
            pCode[2102]:                    const uint32_t = 186
            pCode[2103]:                    const uint32_t = 2
            pCode[2104]:                    const uint32_t = 458832
            pCode[2105]:                    const uint32_t = 28
            pCode[2106]:                    const uint32_t = 78
            pCode[2107]:                    const uint32_t = 75
            pCode[2108]:                    const uint32_t = 76
            pCode[2109]:                    const uint32_t = 77
            pCode[2110]:                    const uint32_t = 74
            pCode[2111]:                    const uint32_t = 327825
            pCode[2112]:                    const uint32_t = 28
            pCode[2113]:                    const uint32_t = 79
            pCode[2114]:                    const uint32_t = 70
            pCode[2115]:                    const uint32_t = 78
            pCode[2116]:                    const uint32_t = 327745
            pCode[2117]:                    const uint32_t = 80
            pCode[2118]:                    const uint32_t = 81
            pCode[2119]:                    const uint32_t = 61
            pCode[2120]:                    const uint32_t = 18
            pCode[2121]:                    const uint32_t = 196670
            pCode[2122]:                    const uint32_t = 81
            pCode[2123]:                    const uint32_t = 79
            pCode[2124]:                    const uint32_t = 262152
            pCode[2125]:                    const uint32_t = 1
            pCode[2126]:                    const uint32_t = 32
            pCode[2127]:                    const uint32_t = 0
            pCode[2128]:                    const uint32_t = 327825
            pCode[2129]:                    const uint32_t = 28
            pCode[2130]:                    const uint32_t = 91
            pCode[2131]:                    const uint32_t = 56
            pCode[2132]:                    const uint32_t = 78
            pCode[2133]:                    const uint32_t = 524367
            pCode[2134]:                    const uint32_t = 27
            pCode[2135]:                    const uint32_t = 92
            pCode[2136]:                    const uint32_t = 91
            pCode[2137]:                    const uint32_t = 91
            pCode[2138]:                    const uint32_t = 0
            pCode[2139]:                    const uint32_t = 1
            pCode[2140]:                    const uint32_t = 2
            pCode[2141]:                    const uint32_t = 196670
            pCode[2142]:                    const uint32_t = 83
            pCode[2143]:                    const uint32_t = 92
            pCode[2144]:                    const uint32_t = 262152
            pCode[2145]:                    const uint32_t = 1
            pCode[2146]:                    const uint32_t = 35
            pCode[2147]:                    const uint32_t = 0
            pCode[2148]:                    const uint32_t = 393228
            pCode[2149]:                    const uint32_t = 43
            pCode[2150]:                    const uint32_t = 95
            pCode[2151]:                    const uint32_t = 3
            pCode[2152]:                    const uint32_t = 34
            pCode[2153]:                    const uint32_t = 56
            pCode[2154]:                    const uint32_t = 262228
            pCode[2155]:                    const uint32_t = 43
            pCode[2156]:                    const uint32_t = 96
            pCode[2157]:                    const uint32_t = 95
            pCode[2158]:                    const uint32_t = 327761
            pCode[2159]:                    const uint32_t = 26
            pCode[2160]:                    const uint32_t = 100
            pCode[2161]:                    const uint32_t = 188
            pCode[2162]:                    const uint32_t = 0
            pCode[2163]:                    const uint32_t = 327761
            pCode[2164]:                    const uint32_t = 26
            pCode[2165]:                    const uint32_t = 101
            pCode[2166]:                    const uint32_t = 188
            pCode[2167]:                    const uint32_t = 1
            pCode[2168]:                    const uint32_t = 327761
            pCode[2169]:                    const uint32_t = 26
            pCode[2170]:                    const uint32_t = 102
            pCode[2171]:                    const uint32_t = 188
            pCode[2172]:                    const uint32_t = 2
            pCode[2173]:                    const uint32_t = 458832
            pCode[2174]:                    const uint32_t = 28
            pCode[2175]:                    const uint32_t = 103
            pCode[2176]:                    const uint32_t = 100
            pCode[2177]:                    const uint32_t = 101
            pCode[2178]:                    const uint32_t = 102
            pCode[2179]:                    const uint32_t = 99
            pCode[2180]:                    const uint32_t = 327825
            pCode[2181]:                    const uint32_t = 28
            pCode[2182]:                    const uint32_t = 104
            pCode[2183]:                    const uint32_t = 96
            pCode[2184]:                    const uint32_t = 103
            pCode[2185]:                    const uint32_t = 524367
            pCode[2186]:                    const uint32_t = 27
            pCode[2187]:                    const uint32_t = 105
            pCode[2188]:                    const uint32_t = 104
            pCode[2189]:                    const uint32_t = 104
            pCode[2190]:                    const uint32_t = 0
            pCode[2191]:                    const uint32_t = 1
            pCode[2192]:                    const uint32_t = 2
            pCode[2193]:                    const uint32_t = 196670
            pCode[2194]:                    const uint32_t = 93
            pCode[2195]:                    const uint32_t = 105
            pCode[2196]:                    const uint32_t = 262152
            pCode[2197]:                    const uint32_t = 1
            pCode[2198]:                    const uint32_t = 38
            pCode[2199]:                    const uint32_t = 0
            pCode[2200]:                    const uint32_t = 524367
            pCode[2201]:                    const uint32_t = 27
            pCode[2202]:                    const uint32_t = 111
            pCode[2203]:                    const uint32_t = 190
            pCode[2204]:                    const uint32_t = 190
            pCode[2205]:                    const uint32_t = 0
            pCode[2206]:                    const uint32_t = 1
            pCode[2207]:                    const uint32_t = 2
            pCode[2208]:                    const uint32_t = 262227
            pCode[2209]:                    const uint32_t = 8
            pCode[2210]:                    const uint32_t = 119
            pCode[2211]:                    const uint32_t = 179
            pCode[2212]:                    const uint32_t = 393281
            pCode[2213]:                    const uint32_t = 120
            pCode[2214]:                    const uint32_t = 121
            pCode[2215]:                    const uint32_t = 115
            pCode[2216]:                    const uint32_t = 119
            pCode[2217]:                    const uint32_t = 18
            pCode[2218]:                    const uint32_t = 262205
            pCode[2219]:                    const uint32_t = 28
            pCode[2220]:                    const uint32_t = 122
            pCode[2221]:                    const uint32_t = 121
            pCode[2222]:                    const uint32_t = 524367
            pCode[2223]:                    const uint32_t = 27
            pCode[2224]:                    const uint32_t = 123
            pCode[2225]:                    const uint32_t = 122
            pCode[2226]:                    const uint32_t = 122
            pCode[2227]:                    const uint32_t = 0
            pCode[2228]:                    const uint32_t = 1
            pCode[2229]:                    const uint32_t = 2
            pCode[2230]:                    const uint32_t = 327813
            pCode[2231]:                    const uint32_t = 27
            pCode[2232]:                    const uint32_t = 124
            pCode[2233]:                    const uint32_t = 111
            pCode[2234]:                    const uint32_t = 123
            pCode[2235]:                    const uint32_t = 196670
            pCode[2236]:                    const uint32_t = 106
            pCode[2237]:                    const uint32_t = 124
            pCode[2238]:                    const uint32_t = 262152
            pCode[2239]:                    const uint32_t = 1
            pCode[2240]:                    const uint32_t = 39
            pCode[2241]:                    const uint32_t = 0
            pCode[2242]:                    const uint32_t = 327745
            pCode[2243]:                    const uint32_t = 133
            pCode[2244]:                    const uint32_t = 134
            pCode[2245]:                    const uint32_t = 127
            pCode[2246]:                    const uint32_t = 132
            pCode[2247]:                    const uint32_t = 196670
            pCode[2248]:                    const uint32_t = 134
            pCode[2249]:                    const uint32_t = 187
            pCode[2250]:                    const uint32_t = 262152
            pCode[2251]:                    const uint32_t = 1
            pCode[2252]:                    const uint32_t = 40
            pCode[2253]:                    const uint32_t = 0
            pCode[2254]:                    const uint32_t = 327745
            pCode[2255]:                    const uint32_t = 133
            pCode[2256]:                    const uint32_t = 138
            pCode[2257]:                    const uint32_t = 127
            pCode[2258]:                    const uint32_t = 57
            pCode[2259]:                    const uint32_t = 196670
            pCode[2260]:                    const uint32_t = 138
            pCode[2261]:                    const uint32_t = 189
            pCode[2262]:                    const uint32_t = 262152
            pCode[2263]:                    const uint32_t = 1
            pCode[2264]:                    const uint32_t = 42
            pCode[2265]:                    const uint32_t = 0
            pCode[2266]:                    const uint32_t = 393281
            pCode[2267]:                    const uint32_t = 144
            pCode[2268]:                    const uint32_t = 145
            pCode[2269]:                    const uint32_t = 115
            pCode[2270]:                    const uint32_t = 119
            pCode[2271]:                    const uint32_t = 65
            pCode[2272]:                    const uint32_t = 262205
            pCode[2273]:                    const uint32_t = 8
            pCode[2274]:                    const uint32_t = 146
            pCode[2275]:                    const uint32_t = 145
            pCode[2276]:                    const uint32_t = 196670
            pCode[2277]:                    const uint32_t = 140
            pCode[2278]:                    const uint32_t = 146
            pCode[2279]:                    const uint32_t = 65789
            pCode[2280]:                    const uint32_t = 65592
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 7CD292000000004F

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 00000097A053E7F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 8088
        pCode:                          const uint32_t* = 00000240C1E7AF80
            pCode[0]:                       const uint32_t = 119734787
            pCode[1]:                       const uint32_t = 67072
            pCode[2]:                       const uint32_t = 524299
            pCode[3]:                       const uint32_t = 152
            pCode[4]:                       const uint32_t = 0
            pCode[5]:                       const uint32_t = 131089
            pCode[6]:                       const uint32_t = 1
            pCode[7]:                       const uint32_t = 131089
            pCode[8]:                       const uint32_t = 5301
            pCode[9]:                       const uint32_t = 131089
            pCode[10]:                      const uint32_t = 5302
            pCode[11]:                      const uint32_t = 131089
            pCode[12]:                      const uint32_t = 5307
            pCode[13]:                      const uint32_t = 131089
            pCode[14]:                      const uint32_t = 5347
            pCode[15]:                      const uint32_t = 393227
            pCode[16]:                      const uint32_t = 3
            pCode[17]:                      const uint32_t = 1280527431
            pCode[18]:                      const uint32_t = 1685353262
            pCode[19]:                      const uint32_t = 808793134
            pCode[20]:                      const uint32_t = 0
            pCode[21]:                      const uint32_t = 196622
            pCode[22]:                      const uint32_t = 5348
            pCode[23]:                      const uint32_t = 1
            pCode[24]:                      const uint32_t = 851983
            pCode[25]:                      const uint32_t = 4
            pCode[26]:                      const uint32_t = 6
            pCode[27]:                      const uint32_t = 1852399981
            pCode[28]:                      const uint32_t = 0
            pCode[29]:                      const uint32_t = 17
            pCode[30]:                      const uint32_t = 31
            pCode[31]:                      const uint32_t = 39
            pCode[32]:                      const uint32_t = 41
            pCode[33]:                      const uint32_t = 49
            pCode[34]:                      const uint32_t = 59
            pCode[35]:                      const uint32_t = 75
            pCode[36]:                      const uint32_t = 146
            pCode[37]:                      const uint32_t = 196624
            pCode[38]:                      const uint32_t = 6
            pCode[39]:                      const uint32_t = 7
            pCode[40]:                      const uint32_t = 1179655
            pCode[41]:                      const uint32_t = 1
            pCode[42]:                      const uint32_t = 1429158467
            pCode[43]:                      const uint32_t = 1936876915
            pCode[44]:                      const uint32_t = 1651462703
            pCode[45]:                      const uint32_t = 796160613
            pCode[46]:                      const uint32_t = 1802724676
            pCode[47]:                      const uint32_t = 795897716
            pCode[48]:                      const uint32_t = 1953719636
            pCode[49]:                      const uint32_t = 1634628677
            pCode[50]:                      const uint32_t = 1936941359
            pCode[51]:                      const uint32_t = 796095589
            pCode[52]:                      const uint32_t = 1684105331
            pCode[53]:                      const uint32_t = 796095077
            pCode[54]:                      const uint32_t = 1852402786
            pCode[55]:                      const uint32_t = 1919770478
            pCode[56]:                      const uint32_t = 1634887214
            pCode[57]:                      const uint32_t = 103
            pCode[58]:                      const uint32_t = 1441799
            pCode[59]:                      const uint32_t = 2
            pCode[60]:                      const uint32_t = 1429158467
            pCode[61]:                      const uint32_t = 1936876915
            pCode[62]:                      const uint32_t = 1651462703
            pCode[63]:                      const uint32_t = 796160613
            pCode[64]:                      const uint32_t = 1802724676
            pCode[65]:                      const uint32_t = 795897716
            pCode[66]:                      const uint32_t = 1953719636
            pCode[67]:                      const uint32_t = 1634628677
            pCode[68]:                      const uint32_t = 1936941359
            pCode[69]:                      const uint32_t = 796095589
            pCode[70]:                      const uint32_t = 1684105331
            pCode[71]:                      const uint32_t = 796095077
            pCode[72]:                      const uint32_t = 1970302569
            pCode[73]:                      const uint32_t = 1953718132
            pCode[74]:                      const uint32_t = 1952675186
            pCode[75]:                      const uint32_t = 1936028277
            pCode[76]:                      const uint32_t = 1717924447
            pCode[77]:                      const uint32_t = 1869898593
            pCode[78]:                      const uint32_t = 1818701426
            pCode[79]:                      const uint32_t = 27763
            pCode[80]:                      const uint32_t = 38993923
            pCode[81]:                      const uint32_t = 2
            pCode[82]:                      const uint32_t = 460
            pCode[83]:                      const uint32_t = 1
            pCode[84]:                      const uint32_t = 1411395375
            pCode[85]:                      const uint32_t = 978273359
            pCode[86]:                      const uint32_t = 1987005728
            pCode[87]:                      const uint32_t = 1869881445
            pCode[88]:                      const uint32_t = 1701410336
            pCode[89]:                      const uint32_t = 1886593143
            pCode[90]:                      const uint32_t = 543515489
            pCode[91]:                      const uint32_t = 1668047203
            pCode[92]:                      const uint32_t = 1952541813
            pCode[93]:                      const uint32_t = 1936617321
            pCode[94]:                      const uint32_t = 539963146
            pCode[95]:                      const uint32_t = 1329876820
            pCode[96]:                      const uint32_t = 796270650
            pCode[97]:                      const uint32_t = 757932152
            pCode[98]:                      const uint32_t = 544612414
            pCode[99]:                      const uint32_t = 791748650
            pCode[100]:                     const uint32_t = 1982007928
            pCode[101]:                     const uint32_t = 1769173605
            pCode[102]:                     const uint32_t = 874540655
            pCode[103]:                     const uint32_t = 587870262
            pCode[104]:                     const uint32_t = 1702131813
            pCode[105]:                     const uint32_t = 1869181806
            pCode[106]:                     const uint32_t = 1279729774
            pCode[107]:                     const uint32_t = 1330595679
            pCode[108]:                     const uint32_t = 1598377031
            pCode[109]:                     const uint32_t = 1818455657
            pCode[110]:                     const uint32_t = 1600480373
            pCode[111]:                     const uint32_t = 1701996900
            pCode[112]:                     const uint32_t = 1986622563
            pCode[113]:                     const uint32_t = 540680293
            pCode[114]:                     const uint32_t = 1970365810
            pCode[115]:                     const uint32_t = 174420585
            pCode[116]:                     const uint32_t = 1852384010
            pCode[117]:                     const uint32_t = 1685417059
            pCode[118]:                     const uint32_t = 1763844197
            pCode[119]:                     const uint32_t = 1953853550
            pCode[120]:                     const uint32_t = 1920234335
            pCode[121]:                     const uint32_t = 1970561909
            pCode[122]:                     const uint32_t = 1601398130
            pCode[123]:                     const uint32_t = 1634100594
            pCode[124]:                     const uint32_t = 1919906915
            pCode[125]:                     const uint32_t = 1936484142
            pCode[126]:                     const uint32_t = 168436332
            pCode[127]:                     const uint32_t = 1394618159
            pCode[128]:                     const uint32_t = 824202309
            pCode[129]:                     const uint32_t = 1632444474
            pCode[130]:                     const uint32_t = 1769104756
            pCode[131]:                     const uint32_t = 1679846497
            pCode[132]:                     const uint32_t = 1919120229
            pCode[133]:                     const uint32_t = 1869901929
            pCode[134]:                     const uint32_t = 1812624242
            pCode[135]:                     const uint32_t = 1970239841
            pCode[136]:                     const uint32_t = 1702045812
            pCode[137]:                     const uint32_t = 540876916
            pCode[138]:                     const uint32_t = 1646275633
            pCode[139]:                     const uint32_t = 1768189545
            pCode[140]:                     const uint32_t = 1025533806
            pCode[141]:                     const uint32_t = 539570208
            pCode[142]:                     const uint32_t = 1684104562
            pCode[143]:                     const uint32_t = 2037149295
            pCode[144]:                     const uint32_t = 1718968864
            pCode[145]:                     const uint32_t = 544367974
            pCode[146]:                     const uint32_t = 1852402786
            pCode[147]:                     const uint32_t = 1919180654
            pCode[148]:                     const uint32_t = 1601402721
            pCode[149]:                     const uint32_t = 1717990754
            pCode[150]:                     const uint32_t = 2065724005
            pCode[151]:                     const uint32_t = 538976266
            pCode[152]:                     const uint32_t = 1634886688
            pCode[153]:                     const uint32_t = 1868783479
            pCode[154]:                     const uint32_t = 1851878765
            pCode[155]:                     const uint32_t = 1818370148
            pCode[156]:                     const uint32_t = 1601072745
            pCode[157]:                     const uint32_t = 2002874980
            pCode[158]:                     const uint32_t = 995974003
            pCode[159]:                     const uint32_t = 171670794
            pCode[160]:                     const uint32_t = 2036427786
            pCode[161]:                     const uint32_t = 678720879
            pCode[162]:                     const uint32_t = 544499059
            pCode[163]:                     const uint32_t = 741417021
            pCode[164]:                     const uint32_t = 1852400160
            pCode[165]:                     const uint32_t = 1735289188
            pCode[166]:                     const uint32_t = 824196384
            pCode[167]:                     const uint32_t = 1853169705
            pCode[168]:                     const uint32_t = 1919903337
            pCode[169]:                     const uint32_t = 1818370157
            pCode[170]:                     const uint32_t = 1601072745
            pCode[171]:                     const uint32_t = 1650422381
            pCode[172]:                     const uint32_t = 1801678700
            pCode[173]:                     const uint32_t = 151681824
            pCode[174]:                     const uint32_t = 878929270
            pCode[175]:                     const uint32_t = 1819239200
            pCode[176]:                     const uint32_t = 1717531247
            pCode[177]:                     const uint32_t = 1869898593
            pCode[178]:                     const uint32_t = 171668338
            pCode[179]:                     const uint32_t = 538976288
            pCode[180]:                     const uint32_t = 878929270
            pCode[181]:                     const uint32_t = 1952804128
            pCode[182]:                     const uint32_t = 1918856289
            pCode[183]:                     const uint32_t = 1751610735
            pCode[184]:                     const uint32_t = 1667327583
            pCode[185]:                     const uint32_t = 1936879476
            pCode[186]:                     const uint32_t = 1963526715
            pCode[187]:                     const uint32_t = 544501353
            pCode[188]:                     const uint32_t = 1869377379
            pCode[189]:                     const uint32_t = 1852399474
            pCode[190]:                     const uint32_t = 997746020
            pCode[191]:                     const uint32_t = 1769277706
            pCode[192]:                     const uint32_t = 1830843502
            pCode[193]:                     const uint32_t = 1818326117
            pCode[194]:                     const uint32_t = 1970238047
            pCode[195]:                     const uint32_t = 1767860327
            pCode[196]:                     const uint32_t = 2019910766
            pCode[197]:                     const uint32_t = 545065531
            pCode[198]:                     const uint32_t = 1852402786
            pCode[199]:                     const uint32_t = 1919770478
            pCode[200]:                     const uint32_t = 171662683
            pCode[201]:                     const uint32_t = 2036427786
            pCode[202]:                     const uint32_t = 544503151
            pCode[203]:                     const uint32_t = 1668246568
            pCode[204]:                     const uint32_t = 1869182049
            pCode[205]:                     const uint32_t = 540876910
            pCode[206]:                     const uint32_t = 1763715376
            pCode[207]:                     const uint32_t = 1702240366
            pCode[208]:                     const uint32_t = 1763717987
            pCode[209]:                     const uint32_t = 1869635438
            pCode[210]:                     const uint32_t = 1769236851
            pCode[211]:                     const uint32_t = 171667055
            pCode[212]:                     const uint32_t = 1870225772
            pCode[213]:                     const uint32_t = 673215605
            pCode[214]:                     const uint32_t = 1633906540
            pCode[215]:                     const uint32_t = 1852795252
            pCode[216]:                     const uint32_t = 824196384
            pCode[217]:                     const uint32_t = 1852383273
            pCode[218]:                     const uint32_t = 1667593760
            pCode[219]:                     const uint32_t = 1852383283
            pCode[220]:                     const uint32_t = 1919905375
            pCode[221]:                     const uint32_t = 996958573
            pCode[222]:                     const uint32_t = 2036427786
            pCode[223]:                     const uint32_t = 544503151
            pCode[224]:                     const uint32_t = 1668246568
            pCode[225]:                     const uint32_t = 1869182049
            pCode[226]:                     const uint32_t = 540876910
            pCode[227]:                     const uint32_t = 1763715378
            pCode[228]:                     const uint32_t = 1702240366
            pCode[229]:                     const uint32_t = 1763717987
            pCode[230]:                     const uint32_t = 1868783470
            pCode[231]:                     const uint32_t = 997355372
            pCode[232]:                     const uint32_t = 2036427786
            pCode[233]:                     const uint32_t = 544503151
            pCode[234]:                     const uint32_t = 1668246568
            pCode[235]:                     const uint32_t = 1869182049
            pCode[236]:                     const uint32_t = 540876910
            pCode[237]:                     const uint32_t = 1763715379
            pCode[238]:                     const uint32_t = 1702240366
            pCode[239]:                     const uint32_t = 1763717731
            pCode[240]:                     const uint32_t = 1987403630
            pCode[241]:                     const uint32_t = 1634470459
            pCode[242]:                     const uint32_t = 1953853305
            pCode[243]:                     const uint32_t = 1869359136
            pCode[244]:                     const uint32_t = 1769234787
            pCode[245]:                     const uint32_t = 1025535599
            pCode[246]:                     const uint32_t = 539571232
            pCode[247]:                     const uint32_t = 1952541798
            pCode[248]:                     const uint32_t = 544106784
            pCode[249]:                     const uint32_t = 1953393013
            pCode[250]:                     const uint32_t = 1601071392
            pCode[251]:                     const uint32_t = 1869377379
            pCode[252]:                     const uint32_t = 1684627314
            pCode[253]:                     const uint32_t = 1812597307
            pCode[254]:                     const uint32_t = 1970239841
            pCode[255]:                     const uint32_t = 1869359220
            pCode[256]:                     const uint32_t = 1769234787
            pCode[257]:                     const uint32_t = 1025535599
            pCode[258]:                     const uint32_t = 539570208
            pCode[259]:                     const uint32_t = 544503151
            pCode[260]:                     const uint32_t = 878929270
            pCode[261]:                     const uint32_t = 1953853216
            pCode[262]:                     const uint32_t = 1634887263
            pCode[263]:                     const uint32_t = 1868783463
            pCode[264]:                     const uint32_t = 997355372
            pCode[265]:                     const uint32_t = 1868761610
            pCode[266]:                     const uint32_t = 544502638
            pCode[267]:                     const uint32_t = 862152054
            pCode[268]:                     const uint32_t = 1701868320
            pCode[269]:                     const uint32_t = 1634497891
            pCode[270]:                     const uint32_t = 1868783474
            pCode[271]:                     const uint32_t = 544370540
            pCode[272]:                     const uint32_t = 1702240317
            pCode[273]:                     const uint32_t = 807940963
            pCode[274]:                     const uint32_t = 744895278
            pCode[275]:                     const uint32_t = 858664992
            pCode[276]:                     const uint32_t = 807414886
            pCode[277]:                     const uint32_t = 694563630
            pCode[278]:                     const uint32_t = 1868761659
            pCode[279]:                     const uint32_t = 544502638
            pCode[280]:                     const uint32_t = 1634692198
            pCode[281]:                     const uint32_t = 1752375412
            pCode[282]:                     const uint32_t = 1852403305
            pCode[283]:                     const uint32_t = 544437093
            pCode[284]:                     const uint32_t = 842211389
            pCode[285]:                     const uint32_t = 1868761659
            pCode[286]:                     const uint32_t = 544502638
            pCode[287]:                     const uint32_t = 1634692198
            pCode[288]:                     const uint32_t = 1668489332
            pCode[289]:                     const uint32_t = 1852138866
            pCode[290]:                     const uint32_t = 1835099999
            pCode[291]:                     const uint32_t = 1025532269
            pCode[292]:                     const uint32_t = 841888288
            pCode[293]:                     const uint32_t = 1980369467
            pCode[294]:                     const uint32_t = 543451503
            pCode[295]:                     const uint32_t = 1852399981
            pCode[296]:                     const uint32_t = 2065705256
            pCode[297]:                     const uint32_t = 538976266
            pCode[298]:                     const uint32_t = 539963168
            pCode[299]:                     const uint32_t = 1768058177
            pCode[300]:                     const uint32_t = 544501349
            pCode[301]:                     const uint32_t = 1751607660
            pCode[302]:                     const uint32_t = 1735289204
            pCode[303]:                     const uint32_t = 1819239200
            pCode[304]:                     const uint32_t = 639660655
            pCode[305]:                     const uint32_t = 2003791904
            pCode[306]:                     const uint32_t = 1730179685
            pCode[307]:                     const uint32_t = 1702130799
            pCode[308]:                     const uint32_t = 1919295598
            pCode[309]:                     const uint32_t = 1948282223
            pCode[310]:                     const uint32_t = 1931502952
            pCode[311]:                     const uint32_t = 1701733731
            pCode[312]:                     const uint32_t = 1952539680
            pCode[313]:                     const uint32_t = 538970721
            pCode[314]:                     const uint32_t = 1702240288
            pCode[315]:                     const uint32_t = 1629500259
            pCode[316]:                     const uint32_t = 1701405293
            pCode[317]:                     const uint32_t = 1025537134
            pCode[318]:                     const uint32_t = 1634887200
            pCode[319]:                     const uint32_t = 1683973485
            pCode[320]:                     const uint32_t = 778138721
            pCode[321]:                     const uint32_t = 1768058209
            pCode[322]:                     const uint32_t = 1601465957
            pCode[323]:                     const uint32_t = 1869377379
            pCode[324]:                     const uint32_t = 1735536242
            pCode[325]:                     const uint32_t = 539631714
            pCode[326]:                     const uint32_t = 1835102822
            pCode[327]:                     const uint32_t = 1633967973
            pCode[328]:                     const uint32_t = 1630429556
            pCode[329]:                     const uint32_t = 1701405293
            pCode[330]:                     const uint32_t = 1667200110
            pCode[331]:                     const uint32_t = 1919904879
            pCode[332]:                     const uint32_t = 171669294
            pCode[333]:                     const uint32_t = 538976266
            pCode[334]:                     const uint32_t = 539963168
            pCode[335]:                     const uint32_t = 1663069769
            pCode[336]:                     const uint32_t = 1919904879
            pCode[337]:                     const uint32_t = 544434464
            pCode[338]:                     const uint32_t = 543516788
            pCode[339]:                     const uint32_t = 1953654134
            pCode[340]:                     const uint32_t = 1663072357
            pCode[341]:                     const uint32_t = 1919904879
            pCode[342]:                     const uint32_t = 1885413491
            pCode[343]:                     const uint32_t = 1701407856
            pCode[344]:                     const uint32_t = 1869881444
            pCode[345]:                     const uint32_t = 1701344288
            pCode[346]:                     const uint32_t = 2019914784
            pCode[347]:                     const uint32_t = 1701999988
            pCode[348]:                     const uint32_t = 538976266
            pCode[349]:                     const uint32_t = 1667593760
            pCode[350]:                     const uint32_t = 1768169523
            pCode[351]:                     const uint32_t = 1937073766
            pCode[352]:                     const uint32_t = 1868783461
            pCode[353]:                     const uint32_t = 1635021678
            pCode[354]:                     const uint32_t = 544437358
            pCode[355]:                     const uint32_t = 1852383293
            pCode[356]:                     const uint32_t = 1819239263
            pCode[357]:                     const uint32_t = 171668079
            pCode[358]:                     const uint32_t = 538976288
            pCode[359]:                     const uint32_t = 862152054
            pCode[360]:                     const uint32_t = 1718182944
            pCode[361]:                     const uint32_t = 1702065510
            pCode[362]:                     const uint32_t = 1819239263
            pCode[363]:                     const uint32_t = 1025536623
            pCode[364]:                     const uint32_t = 1718182944
            pCode[365]:                     const uint32_t = 1702065510
            pCode[366]:                     const uint32_t = 1852793695
            pCode[367]:                     const uint32_t = 1851880563
            pCode[368]:                     const uint32_t = 706769780
            pCode[369]:                     const uint32_t = 2019914784
            pCode[370]:                     const uint32_t = 1701999988
            pCode[371]:                     const uint32_t = 2019914792
            pCode[372]:                     const uint32_t = 1701999988
            pCode[373]:                     const uint32_t = 1869503347
            pCode[374]:                     const uint32_t = 1768846702
            pCode[375]:                     const uint32_t = 1836216166
            pCode[376]:                     const uint32_t = 676616261
            pCode[377]:                     const uint32_t = 1667198569
            pCode[378]:                     const uint32_t = 1919904879
            pCode[379]:                     const uint32_t = 694446431
            pCode[380]:                     const uint32_t = 1763716189
            pCode[381]:                     const uint32_t = 1987403630
            pCode[382]:                     const uint32_t = 1735536169
            pCode[383]:                     const uint32_t = 168442722
            pCode[384]:                     const uint32_t = 538976288
            pCode[385]:                     const uint32_t = 1176514351
            pCode[386]:                     const uint32_t = 544042866
            pCode[387]:                     const uint32_t = 1734439526
            pCode[388]:                     const uint32_t = 1953391981
            pCode[389]:                     const uint32_t = 1936683040
            pCode[390]:                     const uint32_t = 1869182057
            pCode[391]:                     const uint32_t = 1869881454
            pCode[392]:                     const uint32_t = 1734962208
            pCode[393]:                     const uint32_t = 1881175144
            pCode[394]:                     const uint32_t = 1953067887
            pCode[395]:                     const uint32_t = 544108393
            pCode[396]:                     const uint32_t = 1701996900
            pCode[397]:                     const uint32_t = 1869182051
            pCode[398]:                     const uint32_t = 538970734
            pCode[399]:                     const uint32_t = 1702240288
            pCode[400]:                     const uint32_t = 1814049635
            pCode[401]:                     const uint32_t = 1952999273
            pCode[402]:                     const uint32_t = 1919509599
            pCode[403]:                     const uint32_t = 1713388832
            pCode[404]:                     const uint32_t = 1701667186
            pCode[405]:                     const uint32_t = 1952539743
            pCode[406]:                     const uint32_t = 1768697441
            pCode[407]:                     const uint32_t = 1601464423
            pCode[408]:                     const uint32_t = 1769172848
            pCode[409]:                     const uint32_t = 1852795252
            pCode[410]:                     const uint32_t = 2054780974
            pCode[411]:                     const uint32_t = 1763716384
            pCode[412]:                     const uint32_t = 1869635438
            pCode[413]:                     const uint32_t = 1769236851
            pCode[414]:                     const uint32_t = 171667055
            pCode[415]:                     const uint32_t = 538976288
            pCode[416]:                     const uint32_t = 1634692198
            pCode[417]:                     const uint32_t = 1768169588
            pCode[418]:                     const uint32_t = 1025537139
            pCode[419]:                     const uint32_t = 1852140576
            pCode[420]:                     const uint32_t = 677934183
            pCode[421]:                     const uint32_t = 1751607660
            pCode[422]:                     const uint32_t = 1768185716
            pCode[423]:                     const uint32_t = 171649394
            pCode[424]:                     const uint32_t = 538976288
            pCode[425]:                     const uint32_t = 1634692198
            pCode[426]:                     const uint32_t = 1952522356
            pCode[427]:                     const uint32_t = 1970169204
            pCode[428]:                     const uint32_t = 1869182049
            pCode[429]:                     const uint32_t = 540876910
            pCode[430]:                     const uint32_t = 539959345
            pCode[431]:                     const uint32_t = 1936286760
            pCode[432]:                     const uint32_t = 539631732
            pCode[433]:                     const uint32_t = 1953720676
            pCode[434]:                     const uint32_t = 537541417
            pCode[435]:                     const uint32_t = 1814044704
            pCode[436]:                     const uint32_t = 1952999273
            pCode[437]:                     const uint32_t = 1919509599
            pCode[438]:                     const uint32_t = 1847606560
            pCode[439]:                     const uint32_t = 1634562671
            pCode[440]:                     const uint32_t = 1702521196
            pCode[441]:                     const uint32_t = 1734962216
            pCode[442]:                     const uint32_t = 1683977320
            pCode[443]:                     const uint32_t = 992572009
            pCode[444]:                     const uint32_t = 538976266
            pCode[445]:                     const uint32_t = 538970656
            pCode[446]:                     const uint32_t = 791617568
            pCode[447]:                     const uint32_t = 1919897120
            pCode[448]:                     const uint32_t = 1768710509
            pCode[449]:                     const uint32_t = 1948280186
            pCode[450]:                     const uint32_t = 1847616872
            pCode[451]:                     const uint32_t = 1634562671
            pCode[452]:                     const uint32_t = 538970732
            pCode[453]:                     const uint32_t = 1702240288
            pCode[454]:                     const uint32_t = 1847604067
            pCode[455]:                     const uint32_t = 1634562671
            pCode[456]:                     const uint32_t = 540876908
            pCode[457]:                     const uint32_t = 1836216174
            pCode[458]:                     const uint32_t = 2053729377
            pCode[459]:                     const uint32_t = 1852385381
            pCode[460]:                     const uint32_t = 1919905375
            pCode[461]:                     const uint32_t = 694968685
            pCode[462]:                     const uint32_t = 537528891
            pCode[463]:                     const uint32_t = 790634528
            pCode[464]:                     const uint32_t = 1632378927
            pCode[465]:                     const uint32_t = 1919246957
            pCode[466]:                     const uint32_t = 1851877748
            pCode[467]:                     const uint32_t = 1718182944
            pCode[468]:                     const uint32_t = 1702065510
            pCode[469]:                     const uint32_t = 1667327520
            pCode[470]:                     const uint32_t = 544370548
            pCode[471]:                     const uint32_t = 1768169514
            pCode[472]:                     const uint32_t = 1937073766
            pCode[473]:                     const uint32_t = 1868767333
            pCode[474]:                     const uint32_t = 175271788
            pCode[475]:                     const uint32_t = 538976288
            pCode[476]:                     const uint32_t = 1634692198
            pCode[477]:                     const uint32_t = 1634476148
            pCode[478]:                     const uint32_t = 1919246957
            pCode[479]:                     const uint32_t = 1851877748
            pCode[480]:                     const uint32_t = 1830829344
            pCode[481]:                     const uint32_t = 1680373857
            pCode[482]:                     const uint32_t = 1814590575
            pCode[483]:                     const uint32_t = 1952999273
            pCode[484]:                     const uint32_t = 1919509599
            pCode[485]:                     const uint32_t = 1869488172
            pCode[486]:                     const uint32_t = 1818324338
            pCode[487]:                     const uint32_t = 807414825
            pCode[488]:                     const uint32_t = 694562862
            pCode[489]:                     const uint32_t = 538970683
            pCode[490]:                     const uint32_t = 1702240288
            pCode[491]:                     const uint32_t = 1679831907
            pCode[492]:                     const uint32_t = 1969645161
            pCode[493]:                     const uint32_t = 1025533299
            pCode[494]:                     const uint32_t = 1835101216
            pCode[495]:                     const uint32_t = 1953654114
            pCode[496]:                     const uint32_t = 544104809
            pCode[497]:                     const uint32_t = 1768169514
            pCode[498]:                     const uint32_t = 1937073766
            pCode[499]:                     const uint32_t = 1868783461
            pCode[500]:                     const uint32_t = 997355372
            pCode[501]:                     const uint32_t = 538970634
            pCode[502]:                     const uint32_t = 791617568
            pCode[503]:                     const uint32_t = 1869760032
            pCode[504]:                     const uint32_t = 1919295597
            pCode[505]:                     const uint32_t = 1701668705
            pCode[506]:                     const uint32_t = 1881175150
            pCode[507]:                     const uint32_t = 1953067887
            pCode[508]:                     const uint32_t = 544108393
            pCode[509]:                     const uint32_t = 1981837172
            pCode[510]:                     const uint32_t = 544695657
            pCode[511]:                     const uint32_t = 1769172848
            pCode[512]:                     const uint32_t = 1852795252
            pCode[513]:                     const uint32_t = 1919509536
            pCode[514]:                     const uint32_t = 1769235301
            pCode[515]:                     const uint32_t = 537554543
            pCode[516]:                     const uint32_t = 1981816864
            pCode[517]:                     const uint32_t = 540238693
            pCode[518]:                     const uint32_t = 2003134838
            pCode[519]:                     const uint32_t = 1919509599
            pCode[520]:                     const uint32_t = 1847606560
            pCode[521]:                     const uint32_t = 1634562671
            pCode[522]:                     const uint32_t = 1702521196
            pCode[523]:                     const uint32_t = 1634887208
            pCode[524]:                     const uint32_t = 1683973485
            pCode[525]:                     const uint32_t = 778138721
            pCode[526]:                     const uint32_t = 2003134838
            pCode[527]:                     const uint32_t = 1936683103
            pCode[528]:                     const uint32_t = 2054780974
            pCode[529]:                     const uint32_t = 1763716384
            pCode[530]:                     const uint32_t = 1869635438
            pCode[531]:                     const uint32_t = 1769236851
            pCode[532]:                     const uint32_t = 992570991
            pCode[533]:                     const uint32_t = 538976266
            pCode[534]:                     const uint32_t = 1667593760
            pCode[535]:                     const uint32_t = 1634213939
            pCode[536]:                     const uint32_t = 1635214956
            pCode[537]:                     const uint32_t = 1768185721
            pCode[538]:                     const uint32_t = 540876914
            pCode[539]:                     const uint32_t = 1836216174
            pCode[540]:                     const uint32_t = 2053729377
            pCode[541]:                     const uint32_t = 1768695909
            pCode[542]:                     const uint32_t = 1601464423
            pCode[543]:                     const uint32_t = 544368996
            pCode[544]:                     const uint32_t = 1769349163
            pCode[545]:                     const uint32_t = 1683978085
            pCode[546]:                     const uint32_t = 992572009
            pCode[547]:                     const uint32_t = 538976266
            pCode[548]:                     const uint32_t = 1869375008
            pCode[549]:                     const uint32_t = 1931506785
            pCode[550]:                     const uint32_t = 543384944
            pCode[551]:                     const uint32_t = 1869619261
            pCode[552]:                     const uint32_t = 1634543735
            pCode[553]:                     const uint32_t = 1868834936
            pCode[554]:                     const uint32_t = 1869490292
            pCode[555]:                     const uint32_t = 1818324338
            pCode[556]:                     const uint32_t = 1634213932
            pCode[557]:                     const uint32_t = 1635214956
            pCode[558]:                     const uint32_t = 1768185721
            pCode[559]:                     const uint32_t = 539765106
            pCode[560]:                     const uint32_t = 1714433584
            pCode[561]:                     const uint32_t = 1931488297
            pCode[562]:                     const uint32_t = 1768843624
            pCode[563]:                     const uint32_t = 1936942446
            pCode[564]:                     const uint32_t = 168442665
            pCode[565]:                     const uint32_t = 538976288
            pCode[566]:                     const uint32_t = 862152054
            pCode[567]:                     const uint32_t = 1701868320
            pCode[568]:                     const uint32_t = 1634497891
            pCode[569]:                     const uint32_t = 540876914
            pCode[570]:                     const uint32_t = 1667592307
            pCode[571]:                     const uint32_t = 1918987381
            pCode[572]:                     const uint32_t = 1819239263
            pCode[573]:                     const uint32_t = 706769519
            pCode[574]:                     const uint32_t = 1701868320
            pCode[575]:                     const uint32_t = 790641507
            pCode[576]:                     const uint32_t = 1935745071
            pCode[577]:                     const uint32_t = 1768781171
            pCode[578]:                     const uint32_t = 1646290798
            pCode[579]:                     const uint32_t = 1751607666
            pCode[580]:                     const uint32_t = 1752637556
            pCode[581]:                     const uint32_t = 543519849
            pCode[582]:                     const uint32_t = 1751607660
            pCode[583]:                     const uint32_t = 1868767348
            pCode[584]:                     const uint32_t = 175271788
            pCode[585]:                     const uint32_t = 538976266
            pCode[586]:                     const uint32_t = 1667593760
            pCode[587]:                     const uint32_t = 1868767283
            pCode[588]:                     const uint32_t = 1601335148
            pCode[589]:                     const uint32_t = 1701734764
            pCode[590]:                     const uint32_t = 1025536609
            pCode[591]:                     const uint32_t = 1835083808
            pCode[592]:                     const uint32_t = 1852139874
            pCode[593]:                     const uint32_t = 539631732
            pCode[594]:                     const uint32_t = 1702130785
            pCode[595]:                     const uint32_t = 1952544110
            pCode[596]:                     const uint32_t = 695103337
            pCode[597]:                     const uint32_t = 169880352
            pCode[598]:                     const uint32_t = 538976288
            pCode[599]:                     const uint32_t = 538976288
            pCode[600]:                     const uint32_t = 1718182952
            pCode[601]:                     const uint32_t = 1702065510
            pCode[602]:                     const uint32_t = 1713383968
            pCode[603]:                     const uint32_t = 1701667186
            pCode[604]:                     const uint32_t = 1952539743
            pCode[605]:                     const uint32_t = 1768697441
            pCode[606]:                     const uint32_t = 1601464423
            pCode[607]:                     const uint32_t = 1869377379
            pCode[608]:                     const uint32_t = 1735536242
            pCode[609]:                     const uint32_t = 539631714
            pCode[610]:                     const uint32_t = 1835102822
            pCode[611]:                     const uint32_t = 1633967973
            pCode[612]:                     const uint32_t = 1814978932
            pCode[613]:                     const uint32_t = 1952999273
            pCode[614]:                     const uint32_t = 1819239263
            pCode[615]:                     const uint32_t = 1999532655
            pCode[616]:                     const uint32_t = 1629497888
            pCode[617]:                     const uint32_t = 1852142708
            pCode[618]:                     const uint32_t = 1769234805
            pCode[619]:                     const uint32_t = 539586159
            pCode[620]:                     const uint32_t = 538970667
            pCode[621]:                     const uint32_t = 538976288
            pCode[622]:                     const uint32_t = 1932009504
            pCode[623]:                     const uint32_t = 1969448304
            pCode[624]:                     const uint32_t = 544366956
            pCode[625]:                     const uint32_t = 1919295530
            pCode[626]:                     const uint32_t = 1600482657
            pCode[627]:                     const uint32_t = 1635017060
            pCode[628]:                     const uint32_t = 1734962222
            pCode[629]:                     const uint32_t = 1667200104
            pCode[630]:                     const uint32_t = 1919904879
            pCode[631]:                     const uint32_t = 1650946606
            pCode[632]:                     const uint32_t = 1713383968
            pCode[633]:                     const uint32_t = 1701667186
            pCode[634]:                     const uint32_t = 1952539743
            pCode[635]:                     const uint32_t = 1768697441
            pCode[636]:                     const uint32_t = 1601464423
            pCode[637]:                     const uint32_t = 1869377379
            pCode[638]:                     const uint32_t = 544681586
            pCode[639]:                     const uint32_t = 1952522282
            pCode[640]:                     const uint32_t = 1970169204
            pCode[641]:                     const uint32_t = 1869182049
            pCode[642]:                     const uint32_t = 171649390
            pCode[643]:                     const uint32_t = 538976266
            pCode[644]:                     const uint32_t = 1667593760
            pCode[645]:                     const uint32_t = 1634148403
            pCode[646]:                     const uint32_t = 1600220525
            pCode[647]:                     const uint32_t = 1920102243
            pCode[648]:                     const uint32_t = 1702126437
            pCode[649]:                     const uint32_t = 540876900
            pCode[650]:                     const uint32_t = 678915952
            pCode[651]:                     const uint32_t = 1869377379
            pCode[652]:                     const uint32_t = 1768710002
            pCode[653]:                     const uint32_t = 1918985582
            pCode[654]:                     const uint32_t = 1702240300
            pCode[655]:                     const uint32_t = 824718179
            pCode[656]:                     const uint32_t = 543567918
            pCode[657]:                     const uint32_t = 1668489263
            pCode[658]:                     const uint32_t = 1852138866
            pCode[659]:                     const uint32_t = 1835099999
            pCode[660]:                     const uint32_t = 690577773
            pCode[661]:                     const uint32_t = 537528891
            pCode[662]:                     const uint32_t = 1864376352
            pCode[663]:                     const uint32_t = 1717531765
            pCode[664]:                     const uint32_t = 1600610674
            pCode[665]:                     const uint32_t = 1869377379
            pCode[666]:                     const uint32_t = 540876914
            pCode[667]:                     const uint32_t = 878929270
            pCode[668]:                     const uint32_t = 1835099944
            pCode[669]:                     const uint32_t = 1667195245
            pCode[670]:                     const uint32_t = 1701999215
            pCode[671]:                     const uint32_t = 1684370531
            pCode[672]:                     const uint32_t = 774971436
            pCode[673]:                     const uint32_t = 992568880
            pCode[674]:                     const uint32_t = 32010
            pCode[675]:                     const uint32_t = 31195139
            pCode[676]:                     const uint32_t = 2
            pCode[677]:                     const uint32_t = 460
            pCode[678]:                     const uint32_t = 2
            pCode[679]:                     const uint32_t = 1954047267
            pCode[680]:                     const uint32_t = 1769172581
            pCode[681]:                     const uint32_t = 1193307759
            pCode[682]:                     const uint32_t = 1480941388
            pCode[683]:                     const uint32_t = 1969381204
            pCode[684]:                     const uint32_t = 1919247974
            pCode[685]:                     const uint32_t = 1717924447
            pCode[686]:                     const uint32_t = 1852142181
            pCode[687]:                     const uint32_t = 975201635
            pCode[688]:                     const uint32_t = 1902473760
            pCode[689]:                     const uint32_t = 1701996917
            pCode[690]:                     const uint32_t = 1696795149
            pCode[691]:                     const uint32_t = 1852142712
            pCode[692]:                     const uint32_t = 1852795251
            pCode[693]:                     const uint32_t = 1598834464
            pCode[694]:                     const uint32_t = 1599363141
            pCode[695]:                     const uint32_t = 1717990754
            pCode[696]:                     const uint32_t = 1918857829
            pCode[697]:                     const uint32_t = 1919247973
            pCode[698]:                     const uint32_t = 1701015141
            pCode[699]:                     const uint32_t = 540680242
            pCode[700]:                     const uint32_t = 1970365810
            pCode[701]:                     const uint32_t = 224752233
            pCode[702]:                     const uint32_t = 2019894026
            pCode[703]:                     const uint32_t = 1936614772
            pCode[704]:                     const uint32_t = 544108393
            pCode[705]:                     const uint32_t = 1163873351
            pCode[706]:                     const uint32_t = 1851741272
            pCode[707]:                     const uint32_t = 1853189743
            pCode[708]:                     const uint32_t = 1919903337
            pCode[709]:                     const uint32_t = 1970364269
            pCode[710]:                     const uint32_t = 1718185057
            pCode[711]:                     const uint32_t = 544367977
            pCode[712]:                     const uint32_t = 1701978170
            pCode[713]:                     const uint32_t = 1919513969
            pCode[714]:                     const uint32_t = 218762597
            pCode[715]:                     const uint32_t = 539963146
            pCode[716]:                     const uint32_t = 1717990722
            pCode[717]:                     const uint32_t = 1948283493
            pCode[718]:                     const uint32_t = 1701978223
            pCode[719]:                     const uint32_t = 1685221219
            pCode[720]:                     const uint32_t = 1970234144
            pCode[721]:                     const uint32_t = 544437358
            pCode[722]:                     const uint32_t = 544367984
            pCode[723]:                     const uint32_t = 1701865840
            pCode[724]:                     const uint32_t = 1701734764
            pCode[725]:                     const uint32_t = 1634235168
            pCode[726]:                     const uint32_t = 544367972
            pCode[727]:                     const uint32_t = 1701470831
            pCode[728]:                     const uint32_t = 168653923
            pCode[729]:                     const uint32_t = 1870225772
            pCode[730]:                     const uint32_t = 1932031093
            pCode[731]:                     const uint32_t = 1025537125
            pCode[732]:                     const uint32_t = 539766816
            pCode[733]:                     const uint32_t = 1684957538
            pCode[734]:                     const uint32_t = 543649385
            pCode[735]:                     const uint32_t = 691019837
            pCode[736]:                     const uint32_t = 1768846624
            pCode[737]:                     const uint32_t = 1836216166
            pCode[738]:                     const uint32_t = 1634887200
            pCode[739]:                     const uint32_t = 1683973485
            pCode[740]:                     const uint32_t = 1600222305
            pCode[741]:                     const uint32_t = 1668246626
            pCode[742]:                     const uint32_t = 226173035
            pCode[743]:                     const uint32_t = 1634535690
            pCode[744]:                     const uint32_t = 1981822068
            pCode[745]:                     const uint32_t = 997680489
            pCode[746]:                     const uint32_t = 1829308941
            pCode[747]:                     const uint32_t = 540308577
            pCode[748]:                     const uint32_t = 1785688688
            pCode[749]:                     const uint32_t = 151653691
            pCode[750]:                     const uint32_t = 880042349
            pCode[751]:                     const uint32_t = 1701410336
            pCode[752]:                     const uint32_t = 1869770871
            pCode[753]:                     const uint32_t = 168639338
            pCode[754]:                     const uint32_t = 1667593737
            pCode[755]:                     const uint32_t = 1769349172
            pCode[756]:                     const uint32_t = 1885304677
            pCode[757]:                     const uint32_t = 221999983
            pCode[758]:                     const uint32_t = 1702234378
            pCode[759]:                     const uint32_t = 1629500515
            pCode[760]:                     const uint32_t = 1701405293
            pCode[761]:                     const uint32_t = 1667200110
            pCode[762]:                     const uint32_t = 1919904879
            pCode[763]:                     const uint32_t = 151653691
            pCode[764]:                     const uint32_t = 878929270
            pCode[765]:                     const uint32_t = 1734962208
            pCode[766]:                     const uint32_t = 1667200104
            pCode[767]:                     const uint32_t = 1919904879
            pCode[768]:                     const uint32_t = 537529659
            pCode[769]:                     const uint32_t = 1981816864
            pCode[770]:                     const uint32_t = 540304229
            pCode[771]:                     const uint32_t = 1751607660
            pCode[772]:                     const uint32_t = 1869635444
            pCode[773]:                     const uint32_t = 1769236851
            pCode[774]:                     const uint32_t = 221998703
            pCode[775]:                     const uint32_t = 1769277706
            pCode[776]:                     const uint32_t = 1830843502
            pCode[777]:                     const uint32_t = 1683978337
            pCode[778]:                     const uint32_t = 1601659250
            pCode[779]:                     const uint32_t = 1853189987
            pCode[780]:                     const uint32_t = 168639348
            pCode[781]:                     const uint32_t = 1919295613
            pCode[782]:                     const uint32_t = 1600482657
            pCode[783]:                     const uint32_t = 1635017060
            pCode[784]:                     const uint32_t = 218762555
            pCode[785]:                     const uint32_t = 2036427786
            pCode[786]:                     const uint32_t = 678720879
            pCode[787]:                     const uint32_t = 544499059
            pCode[788]:                     const uint32_t = 741351485
            pCode[789]:                     const uint32_t = 1852400160
            pCode[790]:                     const uint32_t = 1735289188
            pCode[791]:                     const uint32_t = 824196384
            pCode[792]:                     const uint32_t = 1953701932
            pCode[793]:                     const uint32_t = 808662116
            pCode[794]:                     const uint32_t = 1969365033
            pCode[795]:                     const uint32_t = 1919247974
            pCode[796]:                     const uint32_t = 1634886688
            pCode[797]:                     const uint32_t = 1868783479
            pCode[798]:                     const uint32_t = 1937010293
            pCode[799]:                     const uint32_t = 168655648
            pCode[800]:                     const uint32_t = 1852405001
            pCode[801]:                     const uint32_t = 1868767348
            pCode[802]:                     const uint32_t = 1937010293
            pCode[803]:                     const uint32_t = 221994331
            pCode[804]:                     const uint32_t = 222002442
            pCode[805]:                     const uint32_t = 1930038538
            pCode[806]:                     const uint32_t = 1668641396
            pCode[807]:                     const uint32_t = 1919164532
            pCode[808]:                     const uint32_t = 1667200865
            pCode[809]:                     const uint32_t = 1634561391
            pCode[810]:                     const uint32_t = 2065720430
            pCode[811]:                     const uint32_t = 1963526669
            pCode[812]:                     const uint32_t = 544501353
            pCode[813]:                     const uint32_t = 1701080681
            pCode[814]:                     const uint32_t = 1868783480
            pCode[815]:                     const uint32_t = 997486197
            pCode[816]:                     const uint32_t = 1963526669
            pCode[817]:                     const uint32_t = 544501353
            pCode[818]:                     const uint32_t = 1953721961
            pCode[819]:                     const uint32_t = 1701015137
            pCode[820]:                     const uint32_t = 1970234207
            pCode[821]:                     const uint32_t = 222000238
            pCode[822]:                     const uint32_t = 1769277706
            pCode[823]:                     const uint32_t = 1713402990
            pCode[824]:                     const uint32_t = 1953722985
            pCode[825]:                     const uint32_t = 1684957535
            pCode[826]:                     const uint32_t = 222001253
            pCode[827]:                     const uint32_t = 1852377354
            pCode[828]:                     const uint32_t = 1702240372
            pCode[829]:                     const uint32_t = 2019914866
            pCode[830]:                     const uint32_t = 1717989215
            pCode[831]:                     const uint32_t = 997483891
            pCode[832]:                     const uint32_t = 1963526669
            pCode[833]:                     const uint32_t = 544501353
            pCode[834]:                     const uint32_t = 1936877926
            pCode[835]:                     const uint32_t = 1852399476
            pCode[836]:                     const uint32_t = 1851880563
            pCode[837]:                     const uint32_t = 221996387
            pCode[838]:                     const uint32_t = 151653642
            pCode[839]:                     const uint32_t = 1953393013
            pCode[840]:                     const uint32_t = 1952541984
            pCode[841]:                     const uint32_t = 1634300517
            pCode[842]:                     const uint32_t = 1684627308
            pCode[843]:                     const uint32_t = 151653691
            pCode[844]:                     const uint32_t = 1953393013
            pCode[845]:                     const uint32_t = 1634890784
            pCode[846]:                     const uint32_t = 1868985198
            pCode[847]:                     const uint32_t = 1767861618
            pCode[848]:                     const uint32_t = 168639332
            pCode[849]:                     const uint32_t = 1852405001
            pCode[850]:                     const uint32_t = 1634738292
            pCode[851]:                     const uint32_t = 221996132
            pCode[852]:                     const uint32_t = 222002442
            pCode[853]:                     const uint32_t = 2036427786
            pCode[854]:                     const uint32_t = 678720879
            pCode[855]:                     const uint32_t = 1717990754
            pCode[856]:                     const uint32_t = 1918857829
            pCode[857]:                     const uint32_t = 1919247973
            pCode[858]:                     const uint32_t = 1701015141
            pCode[859]:                     const uint32_t = 1969365033
            pCode[860]:                     const uint32_t = 1919247974
            pCode[861]:                     const uint32_t = 1634886688
            pCode[862]:                     const uint32_t = 1969381239
            pCode[863]:                     const uint32_t = 1919247974
            pCode[864]:                     const uint32_t = 168655648
            pCode[865]:                     const uint32_t = 1634886665
            pCode[866]:                     const uint32_t = 1868783479
            pCode[867]:                     const uint32_t = 1851878765
            pCode[868]:                     const uint32_t = 1919164516
            pCode[869]:                     const uint32_t = 1534293857
            pCode[870]:                     const uint32_t = 168639325
            pCode[871]:                     const uint32_t = 168639357
            pCode[872]:                     const uint32_t = 1377840943
            pCode[873]:                     const uint32_t = 1919902565
            pCode[874]:                     const uint32_t = 1919164516
            pCode[875]:                     const uint32_t = 1663072097
            pCode[876]:                     const uint32_t = 1634561391
            pCode[877]:                     const uint32_t = 544433262
            pCode[878]:                     const uint32_t = 544367984
            pCode[879]:                     const uint32_t = 1701865840
            pCode[880]:                     const uint32_t = 1701734764
            pCode[881]:                     const uint32_t = 1634235168
            pCode[882]:                     const uint32_t = 544367972
            pCode[883]:                     const uint32_t = 1701470831
            pCode[884]:                     const uint32_t = 168653923
            pCode[885]:                     const uint32_t = 1870225772
            pCode[886]:                     const uint32_t = 1932031093
            pCode[887]:                     const uint32_t = 1025537125
            pCode[888]:                     const uint32_t = 539766816
            pCode[889]:                     const uint32_t = 1684957538
            pCode[890]:                     const uint32_t = 543649385
            pCode[891]:                     const uint32_t = 691150909
            pCode[892]:                     const uint32_t = 1718968864
            pCode[893]:                     const uint32_t = 544367974
            pCode[894]:                     const uint32_t = 2002874980
            pCode[895]:                     const uint32_t = 1718968927
            pCode[896]:                     const uint32_t = 2065724262
            pCode[897]:                     const uint32_t = 1678313997
            pCode[898]:                     const uint32_t = 1601659250
            pCode[899]:                     const uint32_t = 1717990754
            pCode[900]:                     const uint32_t = 1679848037
            pCode[901]:                     const uint32_t = 1601659250
            pCode[902]:                     const uint32_t = 1717990754
            pCode[903]:                     const uint32_t = 1534292581
            pCode[904]:                     const uint32_t = 168639325
            pCode[905]:                     const uint32_t = 168639357
            pCode[906]:                     const uint32_t = 791611917
            pCode[907]:                     const uint32_t = 1701728032
            pCode[908]:                     const uint32_t = 1919903264
            pCode[909]:                     const uint32_t = 1667327264
            pCode[910]:                     const uint32_t = 1852383336
            pCode[911]:                     const uint32_t = 1851880563
            pCode[912]:                     const uint32_t = 1864394083
            pCode[913]:                     const uint32_t = 1701257318
            pCode[914]:                     const uint32_t = 1952804207
            pCode[915]:                     const uint32_t = 1998616946
            pCode[916]:                     const uint32_t = 1768453225
            pCode[917]:                     const uint32_t = 543236206
            pCode[918]:                     const uint32_t = 1852138355
            pCode[919]:                     const uint32_t = 1998597221
            pCode[920]:                     const uint32_t = 543716457
            pCode[921]:                     const uint32_t = 1634541665
            pCode[922]:                     const uint32_t = 1769104756
            pCode[923]:                     const uint32_t = 639659105
            pCode[924]:                     const uint32_t = 1634890784
            pCode[925]:                     const uint32_t = 1868985198
            pCode[926]:                     const uint32_t = 168652146
            pCode[927]:                     const uint32_t = 1970435187
            pCode[928]:                     const uint32_t = 1864397923
            pCode[929]:                     const uint32_t = 1667590754
            pCode[930]:                     const uint32_t = 226173044
            pCode[931]:                     const uint32_t = 1769277706
            pCode[932]:                     const uint32_t = 1881175150
            pCode[933]:                     const uint32_t = 1767862131
            pCode[934]:                     const uint32_t = 151599972
            pCode[935]:                     const uint32_t = 1344286511
            pCode[936]:                     const uint32_t = 1818587241
            pCode[937]:                     const uint32_t = 1399156329
            pCode[938]:                     const uint32_t = 1701077352
            pCode[939]:                     const uint32_t = 1784827762
            pCode[940]:                     const uint32_t = 745825125
            pCode[941]:                     const uint32_t = 1701736224
            pCode[942]:                     const uint32_t = 1919250464
            pCode[943]:                     const uint32_t = 1634235168
            pCode[944]:                     const uint32_t = 796026212
            pCode[945]:                     const uint32_t = 1702125933
            pCode[946]:                     const uint32_t = 1818323314
            pCode[947]:                     const uint32_t = 1963526669
            pCode[948]:                     const uint32_t = 544501353
            pCode[949]:                     const uint32_t = 1601462637
            pCode[950]:                     const uint32_t = 154887273
            pCode[951]:                     const uint32_t = 539963145
            pCode[952]:                     const uint32_t = 1702125901
            pCode[953]:                     const uint32_t = 1818323314
            pCode[954]:                     const uint32_t = 1936607520
            pCode[955]:                     const uint32_t = 1668178292
            pCode[956]:                     const uint32_t = 151653733
            pCode[957]:                     const uint32_t = 1953393013
            pCode[958]:                     const uint32_t = 1868916512
            pCode[959]:                     const uint32_t = 996436319
            pCode[960]:                     const uint32_t = 791611657
            pCode[961]:                     const uint32_t = 1868908320
            pCode[962]:                     const uint32_t = 1920230765
            pCode[963]:                     const uint32_t = 151653753
            pCode[964]:                     const uint32_t = 1953393013
            pCode[965]:                     const uint32_t = 1634890784
            pCode[966]:                     const uint32_t = 1868985198
            pCode[967]:                     const uint32_t = 1767861618
            pCode[968]:                     const uint32_t = 789134180
            pCode[969]:                     const uint32_t = 1918115887
            pCode[970]:                     const uint32_t = 1718840929
            pCode[971]:                     const uint32_t = 225276527
            pCode[972]:                     const uint32_t = 222002442
            pCode[973]:                     const uint32_t = 2036427786
            pCode[974]:                     const uint32_t = 678720879
            pCode[975]:                     const uint32_t = 544499059
            pCode[976]:                     const uint32_t = 741351485
            pCode[977]:                     const uint32_t = 1852400160
            pCode[978]:                     const uint32_t = 1735289188
            pCode[979]:                     const uint32_t = 857750816
            pCode[980]:                     const uint32_t = 1953701932
            pCode[981]:                     const uint32_t = 808662116
            pCode[982]:                     const uint32_t = 1701978153
            pCode[983]:                     const uint32_t = 1852793953
            pCode[984]:                     const uint32_t = 1646295404
            pCode[985]:                     const uint32_t = 1701209717
            pCode[986]:                     const uint32_t = 1651449970
            pCode[987]:                     const uint32_t = 1952671082
            pCode[988]:                     const uint32_t = 1718968927
            pCode[989]:                     const uint32_t = 544367974
            pCode[990]:                     const uint32_t = 151653755
            pCode[991]:                     const uint32_t = 1701470831
            pCode[992]:                     const uint32_t = 1864397923
            pCode[993]:                     const uint32_t = 1667590754
            pCode[994]:                     const uint32_t = 1566274420
            pCode[995]:                     const uint32_t = 2097810747
            pCode[996]:                     const uint32_t = 218762555
            pCode[997]:                     const uint32_t = 539963146
            pCode[998]:                     const uint32_t = 1329876820
            pCode[999]:                     const uint32_t = 1681989690
            pCode[1000]:                    const uint32_t = 1969430628
            pCode[1001]:                    const uint32_t = 1852402796
            pCode[1002]:                    const uint32_t = 1634738279
            pCode[1003]:                    const uint32_t = 1701667186
            pCode[1004]:                    const uint32_t = 1936876916
            pCode[1005]:                    const uint32_t = 1953696269
            pCode[1006]:                    const uint32_t = 1952675186
            pCode[1007]:                    const uint32_t = 1868916512
            pCode[1008]:                    const uint32_t = 1920230765
            pCode[1009]:                    const uint32_t = 226173049
            pCode[1010]:                    const uint32_t = 1769277706
            pCode[1011]:                    const uint32_t = 1931506798
            pCode[1012]:                    const uint32_t = 1953653108
            pCode[1013]:                    const uint32_t = 1684957535
            pCode[1014]:                    const uint32_t = 222001253
            pCode[1015]:                    const uint32_t = 1769277706
            pCode[1016]:                    const uint32_t = 1763734638
            pCode[1017]:                    const uint32_t = 2019910766
            pCode[1018]:                    const uint32_t = 1970234207
            pCode[1019]:                    const uint32_t = 222000238
            pCode[1020]:                    const uint32_t = 1852377354
            pCode[1021]:                    const uint32_t = 1702240372
            pCode[1022]:                    const uint32_t = 2019914866
            pCode[1023]:                    const uint32_t = 1717989215
            pCode[1024]:                    const uint32_t = 997483891
            pCode[1025]:                    const uint32_t = 1963526669
            pCode[1026]:                    const uint32_t = 544501353
            pCode[1027]:                    const uint32_t = 1684300144
            pCode[1028]:                    const uint32_t = 2097810747
            pCode[1029]:                    const uint32_t = 789187899
            pCode[1030]:                    const uint32_t = 1330913327
            pCode[1031]:                    const uint32_t = 540692292
            pCode[1032]:                    const uint32_t = 222580293
            pCode[1033]:                    const uint32_t = 2036427786
            pCode[1034]:                    const uint32_t = 678720879
            pCode[1035]:                    const uint32_t = 544499059
            pCode[1036]:                    const uint32_t = 741351485
            pCode[1037]:                    const uint32_t = 1852400160
            pCode[1038]:                    const uint32_t = 1735289188
            pCode[1039]:                    const uint32_t = 874528032
            pCode[1040]:                    const uint32_t = 1953701932
            pCode[1041]:                    const uint32_t = 808662116
            pCode[1042]:                    const uint32_t = 1701978153
            pCode[1043]:                    const uint32_t = 1852793953
            pCode[1044]:                    const uint32_t = 1646295404
            pCode[1045]:                    const uint32_t = 1701209717
            pCode[1046]:                    const uint32_t = 1701257330
            pCode[1047]:                    const uint32_t = 1952804207
            pCode[1048]:                    const uint32_t = 1650424178
            pCode[1049]:                    const uint32_t = 1701209717
            pCode[1050]:                    const uint32_t = 226173042
            pCode[1051]:                    const uint32_t = 1701251338
            pCode[1052]:                    const uint32_t = 1952804207
            pCode[1053]:                    const uint32_t = 1730181490
            pCode[1054]:                    const uint32_t = 1701670757
            pCode[1055]:                    const uint32_t = 1701409396
            pCode[1056]:                    const uint32_t = 995974003
            pCode[1057]:                    const uint32_t = 998050317
            pCode[1058]:                    const uint32_t = 168626701
            pCode[1059]:                    const uint32_t = 1970435187
            pCode[1060]:                    const uint32_t = 1981838435
            pCode[1061]:                    const uint32_t = 1702130277
            pCode[1062]:                    const uint32_t = 226173048
            pCode[1063]:                    const uint32_t = 538976266
            pCode[1064]:                    const uint32_t = 1667593760
            pCode[1065]:                    const uint32_t = 1869619251
            pCode[1066]:                    const uint32_t = 1769236851
            pCode[1067]:                    const uint32_t = 221998703
            pCode[1068]:                    const uint32_t = 538976266
            pCode[1069]:                    const uint32_t = 1869375008
            pCode[1070]:                    const uint32_t = 1965061217
            pCode[1071]:                    const uint32_t = 997744502
            pCode[1072]:                    const uint32_t = 538970637
            pCode[1073]:                    const uint32_t = 1702240288
            pCode[1074]:                    const uint32_t = 1847604067
            pCode[1075]:                    const uint32_t = 1634562671
            pCode[1076]:                    const uint32_t = 168639340
            pCode[1077]:                    const uint32_t = 538976288
            pCode[1078]:                    const uint32_t = 1634692198
            pCode[1079]:                    const uint32_t = 1987387508
            pCode[1080]:                    const uint32_t = 222001503
            pCode[1081]:                    const uint32_t = 538976266
            pCode[1082]:                    const uint32_t = 1667593760
            pCode[1083]:                    const uint32_t = 1868767284
            pCode[1084]:                    const uint32_t = 997355372
            pCode[1085]:                    const uint32_t = 998050317
            pCode[1086]:                    const uint32_t = 1634470413
            pCode[1087]:                    const uint32_t = 1953853305
            pCode[1088]:                    const uint32_t = 1952805672
            pCode[1089]:                    const uint32_t = 807419168
            pCode[1090]:                    const uint32_t = 1768038444
            pCode[1091]:                    const uint32_t = 1852400750
            pCode[1092]:                    const uint32_t = 540876903
            pCode[1093]:                    const uint32_t = 1931488309
            pCode[1094]:                    const uint32_t = 859071604
            pCode[1095]:                    const uint32_t = 1914710320
            pCode[1096]:                    const uint32_t = 1868849509
            pCode[1097]:                    const uint32_t = 544828526
            pCode[1098]:                    const uint32_t = 1717990754
            pCode[1099]:                    const uint32_t = 1981837925
            pCode[1100]:                    const uint32_t = 1702130277
            pCode[1101]:                    const uint32_t = 1969381240
            pCode[1102]:                    const uint32_t = 1919247974
            pCode[1103]:                    const uint32_t = 168655648
            pCode[1104]:                    const uint32_t = 1919251977
            pCode[1105]:                    const uint32_t = 544761204
            pCode[1106]:                    const uint32_t = 1953654134
            pCode[1107]:                    const uint32_t = 1936024425
            pCode[1108]:                    const uint32_t = 221994331
            pCode[1109]:                    const uint32_t = 222002442
            pCode[1110]:                    const uint32_t = 1812598026
            pCode[1111]:                    const uint32_t = 1970239841
            pCode[1112]:                    const uint32_t = 1702045812
            pCode[1113]:                    const uint32_t = 540876916
            pCode[1114]:                    const uint32_t = 1646275632
            pCode[1115]:                    const uint32_t = 1768189545
            pCode[1116]:                    const uint32_t = 1025533806
            pCode[1117]:                    const uint32_t = 539768352
            pCode[1118]:                    const uint32_t = 878998643
            pCode[1119]:                    const uint32_t = 539570227
            pCode[1120]:                    const uint32_t = 1684104562
            pCode[1121]:                    const uint32_t = 2037149295
            pCode[1122]:                    const uint32_t = 1718968864
            pCode[1123]:                    const uint32_t = 544367974
            pCode[1124]:                    const uint32_t = 1851880052
            pCode[1125]:                    const uint32_t = 1919903347
            pCode[1126]:                    const uint32_t = 1969381229
            pCode[1127]:                    const uint32_t = 1919247974
            pCode[1128]:                    const uint32_t = 168655648
            pCode[1129]:                    const uint32_t = 1952541961
            pCode[1130]:                    const uint32_t = 1920213044
            pCode[1131]:                    const uint32_t = 1718840929
            pCode[1132]:                    const uint32_t = 1936552559
            pCode[1133]:                    const uint32_t = 221994331
            pCode[1134]:                    const uint32_t = 222002442
            pCode[1135]:                    const uint32_t = 1812598026
            pCode[1136]:                    const uint32_t = 1970239841
            pCode[1137]:                    const uint32_t = 1702045812
            pCode[1138]:                    const uint32_t = 540876916
            pCode[1139]:                    const uint32_t = 1646275632
            pCode[1140]:                    const uint32_t = 1768189545
            pCode[1141]:                    const uint32_t = 1025533806
            pCode[1142]:                    const uint32_t = 539572000
            pCode[1143]:                    const uint32_t = 1718185589
            pCode[1144]:                    const uint32_t = 544043631
            pCode[1145]:                    const uint32_t = 1886216563
            pCode[1146]:                    const uint32_t = 846357868
            pCode[1147]:                    const uint32_t = 1702109252
            pCode[1148]:                    const uint32_t = 1920300152
            pCode[1149]:                    const uint32_t = 1566274405
            pCode[1150]:                    const uint32_t = 59
            pCode[1151]:                    const uint32_t = 458756
            pCode[1152]:                    const uint32_t = 1163873351
            pCode[1153]:                    const uint32_t = 1650414680
            pCode[1154]:                    const uint32_t = 1701209717
            pCode[1155]:                    const uint32_t = 1701994354
            pCode[1156]:                    const uint32_t = 1701995878
            pCode[1157]:                    const uint32_t = 6644590
            pCode[1158]:                    const uint32_t = 524292
            pCode[1159]:                    const uint32_t = 1163873351
            pCode[1160]:                    const uint32_t = 1650414680
            pCode[1161]:                    const uint32_t = 1701209717
            pCode[1162]:                    const uint32_t = 1701994354
            pCode[1163]:                    const uint32_t = 1701995878
            pCode[1164]:                    const uint32_t = 845505390
            pCode[1165]:                    const uint32_t = 0
            pCode[1166]:                    const uint32_t = 524292
            pCode[1167]:                    const uint32_t = 1163873351
            pCode[1168]:                    const uint32_t = 1851741272
            pCode[1169]:                    const uint32_t = 1853189743
            pCode[1170]:                    const uint32_t = 1919903337
            pCode[1171]:                    const uint32_t = 1970364269
            pCode[1172]:                    const uint32_t = 1718185057
            pCode[1173]:                    const uint32_t = 7497065
            pCode[1174]:                    const uint32_t = 655364
            pCode[1175]:                    const uint32_t = 1197427783
            pCode[1176]:                    const uint32_t = 1279741775
            pCode[1177]:                    const uint32_t = 1885560645
            pCode[1178]:                    const uint32_t = 1953718128
            pCode[1179]:                    const uint32_t = 1600482425
            pCode[1180]:                    const uint32_t = 1701734764
            pCode[1181]:                    const uint32_t = 1919509599
            pCode[1182]:                    const uint32_t = 1769235301
            pCode[1183]:                    const uint32_t = 25974
            pCode[1184]:                    const uint32_t = 524292
            pCode[1185]:                    const uint32_t = 1197427783
            pCode[1186]:                    const uint32_t = 1279741775
            pCode[1187]:                    const uint32_t = 1852399429
            pCode[1188]:                    const uint32_t = 1685417059
            pCode[1189]:                    const uint32_t = 1768185701
            pCode[1190]:                    const uint32_t = 1952671090
            pCode[1191]:                    const uint32_t = 6649449
            pCode[1192]:                    const uint32_t = 262149
            pCode[1193]:                    const uint32_t = 6
            pCode[1194]:                    const uint32_t = 1852399981
            pCode[1195]:                    const uint32_t = 0
            pCode[1196]:                    const uint32_t = 458757
            pCode[1197]:                    const uint32_t = 15
            pCode[1198]:                    const uint32_t = 1835102822
            pCode[1199]:                    const uint32_t = 1633967973
            pCode[1200]:                    const uint32_t = 1650418036
            pCode[1201]:                    const uint32_t = 1801678700
            pCode[1202]:                    const uint32_t = 0
            pCode[1203]:                    const uint32_t = 327686
            pCode[1204]:                    const uint32_t = 15
            pCode[1205]:                    const uint32_t = 0
            pCode[1206]:                    const uint32_t = 2003134838
            pCode[1207]:                    const uint32_t = 0
            pCode[1208]:                    const uint32_t = 327686
            pCode[1209]:                    const uint32_t = 15
            pCode[1210]:                    const uint32_t = 1
            pCode[1211]:                    const uint32_t = 1785688688
            pCode[1212]:                    const uint32_t = 0
            pCode[1213]:                    const uint32_t = 393222
            pCode[1214]:                    const uint32_t = 15
            pCode[1215]:                    const uint32_t = 2
            pCode[1216]:                    const uint32_t = 2003134838
            pCode[1217]:                    const uint32_t = 1785688688
            pCode[1218]:                    const uint32_t = 0
            pCode[1219]:                    const uint32_t = 393222
            pCode[1220]:                    const uint32_t = 15
            pCode[1221]:                    const uint32_t = 3
            pCode[1222]:                    const uint32_t = 2003134838
            pCode[1223]:                    const uint32_t = 1936683103
            pCode[1224]:                    const uint32_t = 0
            pCode[1225]:                    const uint32_t = 458758
            pCode[1226]:                    const uint32_t = 15
            pCode[1227]:                    const uint32_t = 4
            pCode[1228]:                    const uint32_t = 1768058209
            pCode[1229]:                    const uint32_t = 1601465957
            pCode[1230]:                    const uint32_t = 1869377379
            pCode[1231]:                    const uint32_t = 114
            pCode[1232]:                    const uint32_t = 393222
            pCode[1233]:                    const uint32_t = 15
            pCode[1234]:                    const uint32_t = 5
            pCode[1235]:                    const uint32_t = 1751607660
            pCode[1236]:                    const uint32_t = 1868783476
            pCode[1237]:                    const uint32_t = 7499628
            pCode[1238]:                    const uint32_t = 458758
            pCode[1239]:                    const uint32_t = 15
            pCode[1240]:                    const uint32_t = 6
            pCode[1241]:                    const uint32_t = 1751607660
            pCode[1242]:                    const uint32_t = 1869635444
            pCode[1243]:                    const uint32_t = 1769236851
            pCode[1244]:                    const uint32_t = 28271
            pCode[1245]:                    const uint32_t = 458758
            pCode[1246]:                    const uint32_t = 15
            pCode[1247]:                    const uint32_t = 7
            pCode[1248]:                    const uint32_t = 1601724781
            pCode[1249]:                    const uint32_t = 2002874980
            pCode[1250]:                    const uint32_t = 1970234207
            pCode[1251]:                    const uint32_t = 29806
            pCode[1252]:                    const uint32_t = 327685
            pCode[1253]:                    const uint32_t = 17
            pCode[1254]:                    const uint32_t = 1835102822
            pCode[1255]:                    const uint32_t = 1633967973
            pCode[1256]:                    const uint32_t = 24948
            pCode[1257]:                    const uint32_t = 327685
            pCode[1258]:                    const uint32_t = 31
            pCode[1259]:                    const uint32_t = 1667198569
            pCode[1260]:                    const uint32_t = 1919904879
            pCode[1261]:                    const uint32_t = 0
            pCode[1262]:                    const uint32_t = 327685
            pCode[1263]:                    const uint32_t = 39
            pCode[1264]:                    const uint32_t = 1954047348
            pCode[1265]:                    const uint32_t = 1936028277
            pCode[1266]:                    const uint32_t = 0
            pCode[1267]:                    const uint32_t = 327685
            pCode[1268]:                    const uint32_t = 41
            pCode[1269]:                    const uint32_t = 1667198569
            pCode[1270]:                    const uint32_t = 1919904879
            pCode[1271]:                    const uint32_t = 6580575
            pCode[1272]:                    const uint32_t = 262149
            pCode[1273]:                    const uint32_t = 49
            pCode[1274]:                    const uint32_t = 1969188457
            pCode[1275]:                    const uint32_t = 118
            pCode[1276]:                    const uint32_t = 327685
            pCode[1277]:                    const uint32_t = 59
            pCode[1278]:                    const uint32_t = 1885302377
            pCode[1279]:                    const uint32_t = 1953067887
            pCode[1280]:                    const uint32_t = 7237481
            pCode[1281]:                    const uint32_t = 327685
            pCode[1282]:                    const uint32_t = 75
            pCode[1283]:                    const uint32_t = 1851747945
            pCode[1284]:                    const uint32_t = 1634562671
            pCode[1285]:                    const uint32_t = 108
            pCode[1286]:                    const uint32_t = 393221
            pCode[1287]:                    const uint32_t = 146
            pCode[1288]:                    const uint32_t = 1601467759
            pCode[1289]:                    const uint32_t = 1734439526
            pCode[1290]:                    const uint32_t = 1819239263
            pCode[1291]:                    const uint32_t = 29295
            pCode[1292]:                    const uint32_t = 393546
            pCode[1293]:                    const uint32_t = 1701407843
            pCode[1294]:                    const uint32_t = 1981838446
            pCode[1295]:                    const uint32_t = 1634430069
            pCode[1296]:                    const uint32_t = 808464750
            pCode[1297]:                    const uint32_t = 0
            pCode[1298]:                    const uint32_t = 393546
            pCode[1299]:                    const uint32_t = 1735549300
            pCode[1300]:                    const uint32_t = 1697477733
            pCode[1301]:                    const uint32_t = 1931507310
            pCode[1302]:                    const uint32_t = 1987209584
            pCode[1303]:                    const uint32_t = 3550769
            pCode[1304]:                    const uint32_t = 459082
            pCode[1305]:                    const uint32_t = 1735549300
            pCode[1306]:                    const uint32_t = 1697477733
            pCode[1307]:                    const uint32_t = 1981838958
            pCode[1308]:                    const uint32_t = 1634430069
            pCode[1309]:                    const uint32_t = 858665326
            pCode[1310]:                    const uint32_t = 0
            pCode[1311]:                    const uint32_t = 393546
            pCode[1312]:                    const uint32_t = 1920233061
            pCode[1313]:                    const uint32_t = 1869622649
            pCode[1314]:                    const uint32_t = 544501353
            pCode[1315]:                    const uint32_t = 1852399981
            pCode[1316]:                    const uint32_t = 0
            pCode[1317]:                    const uint32_t = 262216
            pCode[1318]:                    const uint32_t = 15
            pCode[1319]:                    const uint32_t = 0
            pCode[1320]:                    const uint32_t = 5
            pCode[1321]:                    const uint32_t = 327752
            pCode[1322]:                    const uint32_t = 15
            pCode[1323]:                    const uint32_t = 0
            pCode[1324]:                    const uint32_t = 35
            pCode[1325]:                    const uint32_t = 0
            pCode[1326]:                    const uint32_t = 327752
            pCode[1327]:                    const uint32_t = 15
            pCode[1328]:                    const uint32_t = 0
            pCode[1329]:                    const uint32_t = 7
            pCode[1330]:                    const uint32_t = 16
            pCode[1331]:                    const uint32_t = 262216
            pCode[1332]:                    const uint32_t = 15
            pCode[1333]:                    const uint32_t = 1
            pCode[1334]:                    const uint32_t = 5
            pCode[1335]:                    const uint32_t = 327752
            pCode[1336]:                    const uint32_t = 15
            pCode[1337]:                    const uint32_t = 1
            pCode[1338]:                    const uint32_t = 35
            pCode[1339]:                    const uint32_t = 64
            pCode[1340]:                    const uint32_t = 327752
            pCode[1341]:                    const uint32_t = 15
            pCode[1342]:                    const uint32_t = 1
            pCode[1343]:                    const uint32_t = 7
            pCode[1344]:                    const uint32_t = 16
            pCode[1345]:                    const uint32_t = 262216
            pCode[1346]:                    const uint32_t = 15
            pCode[1347]:                    const uint32_t = 2
            pCode[1348]:                    const uint32_t = 5
            pCode[1349]:                    const uint32_t = 327752
            pCode[1350]:                    const uint32_t = 15
            pCode[1351]:                    const uint32_t = 2
            pCode[1352]:                    const uint32_t = 35
            pCode[1353]:                    const uint32_t = 128
            pCode[1354]:                    const uint32_t = 327752
            pCode[1355]:                    const uint32_t = 15
            pCode[1356]:                    const uint32_t = 2
            pCode[1357]:                    const uint32_t = 7
            pCode[1358]:                    const uint32_t = 16
            pCode[1359]:                    const uint32_t = 327752
            pCode[1360]:                    const uint32_t = 15
            pCode[1361]:                    const uint32_t = 3
            pCode[1362]:                    const uint32_t = 35
            pCode[1363]:                    const uint32_t = 192
            pCode[1364]:                    const uint32_t = 327752
            pCode[1365]:                    const uint32_t = 15
            pCode[1366]:                    const uint32_t = 4
            pCode[1367]:                    const uint32_t = 35
            pCode[1368]:                    const uint32_t = 208
            pCode[1369]:                    const uint32_t = 327752
            pCode[1370]:                    const uint32_t = 15
            pCode[1371]:                    const uint32_t = 5
            pCode[1372]:                    const uint32_t = 35
            pCode[1373]:                    const uint32_t = 224
            pCode[1374]:                    const uint32_t = 327752
            pCode[1375]:                    const uint32_t = 15
            pCode[1376]:                    const uint32_t = 6
            pCode[1377]:                    const uint32_t = 35
            pCode[1378]:                    const uint32_t = 240
            pCode[1379]:                    const uint32_t = 327752
            pCode[1380]:                    const uint32_t = 15
            pCode[1381]:                    const uint32_t = 7
            pCode[1382]:                    const uint32_t = 35
            pCode[1383]:                    const uint32_t = 256
            pCode[1384]:                    const uint32_t = 196679
            pCode[1385]:                    const uint32_t = 15
            pCode[1386]:                    const uint32_t = 2
            pCode[1387]:                    const uint32_t = 262215
            pCode[1388]:                    const uint32_t = 17
            pCode[1389]:                    const uint32_t = 34
            pCode[1390]:                    const uint32_t = 0
            pCode[1391]:                    const uint32_t = 262215
            pCode[1392]:                    const uint32_t = 17
            pCode[1393]:                    const uint32_t = 33
            pCode[1394]:                    const uint32_t = 0
            pCode[1395]:                    const uint32_t = 262215
            pCode[1396]:                    const uint32_t = 31
            pCode[1397]:                    const uint32_t = 30
            pCode[1398]:                    const uint32_t = 2
            pCode[1399]:                    const uint32_t = 262215
            pCode[1400]:                    const uint32_t = 39
            pCode[1401]:                    const uint32_t = 34
            pCode[1402]:                    const uint32_t = 0
            pCode[1403]:                    const uint32_t = 262215
            pCode[1404]:                    const uint32_t = 39
            pCode[1405]:                    const uint32_t = 33
            pCode[1406]:                    const uint32_t = 7
            pCode[1407]:                    const uint32_t = 196679
            pCode[1408]:                    const uint32_t = 41
            pCode[1409]:                    const uint32_t = 14
            pCode[1410]:                    const uint32_t = 262215
            pCode[1411]:                    const uint32_t = 41
            pCode[1412]:                    const uint32_t = 30
            pCode[1413]:                    const uint32_t = 4
            pCode[1414]:                    const uint32_t = 196679
            pCode[1415]:                    const uint32_t = 43
            pCode[1416]:                    const uint32_t = 5300
            pCode[1417]:                    const uint32_t = 196679
            pCode[1418]:                    const uint32_t = 45
            pCode[1419]:                    const uint32_t = 5300
            pCode[1420]:                    const uint32_t = 196679
            pCode[1421]:                    const uint32_t = 46
            pCode[1422]:                    const uint32_t = 5300
            pCode[1423]:                    const uint32_t = 262215
            pCode[1424]:                    const uint32_t = 49
            pCode[1425]:                    const uint32_t = 30
            pCode[1426]:                    const uint32_t = 3
            pCode[1427]:                    const uint32_t = 262215
            pCode[1428]:                    const uint32_t = 59
            pCode[1429]:                    const uint32_t = 30
            pCode[1430]:                    const uint32_t = 0
            pCode[1431]:                    const uint32_t = 262215
            pCode[1432]:                    const uint32_t = 75
            pCode[1433]:                    const uint32_t = 30
            pCode[1434]:                    const uint32_t = 1
            pCode[1435]:                    const uint32_t = 262215
            pCode[1436]:                    const uint32_t = 146
            pCode[1437]:                    const uint32_t = 30
            pCode[1438]:                    const uint32_t = 0
            pCode[1439]:                    const uint32_t = 131091
            pCode[1440]:                    const uint32_t = 4
            pCode[1441]:                    const uint32_t = 196641
            pCode[1442]:                    const uint32_t = 5
            pCode[1443]:                    const uint32_t = 4
            pCode[1444]:                    const uint32_t = 196630
            pCode[1445]:                    const uint32_t = 8
            pCode[1446]:                    const uint32_t = 32
            pCode[1447]:                    const uint32_t = 262167
            pCode[1448]:                    const uint32_t = 9
            pCode[1449]:                    const uint32_t = 8
            pCode[1450]:                    const uint32_t = 3
            pCode[1451]:                    const uint32_t = 262167
            pCode[1452]:                    const uint32_t = 12
            pCode[1453]:                    const uint32_t = 8
            pCode[1454]:                    const uint32_t = 4
            pCode[1455]:                    const uint32_t = 262168
            pCode[1456]:                    const uint32_t = 13
            pCode[1457]:                    const uint32_t = 12
            pCode[1458]:                    const uint32_t = 4
            pCode[1459]:                    const uint32_t = 262165
            pCode[1460]:                    const uint32_t = 14
            pCode[1461]:                    const uint32_t = 32
            pCode[1462]:                    const uint32_t = 0
            pCode[1463]:                    const uint32_t = 655390
            pCode[1464]:                    const uint32_t = 15
            pCode[1465]:                    const uint32_t = 13
            pCode[1466]:                    const uint32_t = 13
            pCode[1467]:                    const uint32_t = 13
            pCode[1468]:                    const uint32_t = 12
            pCode[1469]:                    const uint32_t = 12
            pCode[1470]:                    const uint32_t = 12
            pCode[1471]:                    const uint32_t = 12
            pCode[1472]:                    const uint32_t = 14
            pCode[1473]:                    const uint32_t = 262176
            pCode[1474]:                    const uint32_t = 16
            pCode[1475]:                    const uint32_t = 2
            pCode[1476]:                    const uint32_t = 15
            pCode[1477]:                    const uint32_t = 262203
            pCode[1478]:                    const uint32_t = 16
            pCode[1479]:                    const uint32_t = 17
            pCode[1480]:                    const uint32_t = 2
            pCode[1481]:                    const uint32_t = 262165
            pCode[1482]:                    const uint32_t = 18
            pCode[1483]:                    const uint32_t = 32
            pCode[1484]:                    const uint32_t = 1
            pCode[1485]:                    const uint32_t = 262187
            pCode[1486]:                    const uint32_t = 18
            pCode[1487]:                    const uint32_t = 19
            pCode[1488]:                    const uint32_t = 4
            pCode[1489]:                    const uint32_t = 262176
            pCode[1490]:                    const uint32_t = 20
            pCode[1491]:                    const uint32_t = 2
            pCode[1492]:                    const uint32_t = 12
            pCode[1493]:                    const uint32_t = 262187
            pCode[1494]:                    const uint32_t = 14
            pCode[1495]:                    const uint32_t = 24
            pCode[1496]:                    const uint32_t = 3
            pCode[1497]:                    const uint32_t = 262176
            pCode[1498]:                    const uint32_t = 25
            pCode[1499]:                    const uint32_t = 2
            pCode[1500]:                    const uint32_t = 8
            pCode[1501]:                    const uint32_t = 262176
            pCode[1502]:                    const uint32_t = 30
            pCode[1503]:                    const uint32_t = 1
            pCode[1504]:                    const uint32_t = 9
            pCode[1505]:                    const uint32_t = 262203
            pCode[1506]:                    const uint32_t = 30
            pCode[1507]:                    const uint32_t = 31
            pCode[1508]:                    const uint32_t = 1
            pCode[1509]:                    const uint32_t = 589849
            pCode[1510]:                    const uint32_t = 35
            pCode[1511]:                    const uint32_t = 8
            pCode[1512]:                    const uint32_t = 1
            pCode[1513]:                    const uint32_t = 0
            pCode[1514]:                    const uint32_t = 0
            pCode[1515]:                    const uint32_t = 0
            pCode[1516]:                    const uint32_t = 1
            pCode[1517]:                    const uint32_t = 0
            pCode[1518]:                    const uint32_t = 196635
            pCode[1519]:                    const uint32_t = 36
            pCode[1520]:                    const uint32_t = 35
            pCode[1521]:                    const uint32_t = 196637
            pCode[1522]:                    const uint32_t = 37
            pCode[1523]:                    const uint32_t = 36
            pCode[1524]:                    const uint32_t = 262176
            pCode[1525]:                    const uint32_t = 38
            pCode[1526]:                    const uint32_t = 0
            pCode[1527]:                    const uint32_t = 37
            pCode[1528]:                    const uint32_t = 262203
            pCode[1529]:                    const uint32_t = 38
            pCode[1530]:                    const uint32_t = 39
            pCode[1531]:                    const uint32_t = 0
            pCode[1532]:                    const uint32_t = 262176
            pCode[1533]:                    const uint32_t = 40
            pCode[1534]:                    const uint32_t = 1
            pCode[1535]:                    const uint32_t = 14
            pCode[1536]:                    const uint32_t = 262203
            pCode[1537]:                    const uint32_t = 40
            pCode[1538]:                    const uint32_t = 41
            pCode[1539]:                    const uint32_t = 1
            pCode[1540]:                    const uint32_t = 262176
            pCode[1541]:                    const uint32_t = 44
            pCode[1542]:                    const uint32_t = 0
            pCode[1543]:                    const uint32_t = 36
            pCode[1544]:                    const uint32_t = 262167
            pCode[1545]:                    const uint32_t = 47
            pCode[1546]:                    const uint32_t = 8
            pCode[1547]:                    const uint32_t = 2
            pCode[1548]:                    const uint32_t = 262176
            pCode[1549]:                    const uint32_t = 48
            pCode[1550]:                    const uint32_t = 1
            pCode[1551]:                    const uint32_t = 47
            pCode[1552]:                    const uint32_t = 262203
            pCode[1553]:                    const uint32_t = 48
            pCode[1554]:                    const uint32_t = 49
            pCode[1555]:                    const uint32_t = 1
            pCode[1556]:                    const uint32_t = 262187
            pCode[1557]:                    const uint32_t = 18
            pCode[1558]:                    const uint32_t = 55
            pCode[1559]:                    const uint32_t = 6
            pCode[1560]:                    const uint32_t = 262203
            pCode[1561]:                    const uint32_t = 30
            pCode[1562]:                    const uint32_t = 59
            pCode[1563]:                    const uint32_t = 1
            pCode[1564]:                    const uint32_t = 262187
            pCode[1565]:                    const uint32_t = 8
            pCode[1566]:                    const uint32_t = 67
            pCode[1567]:                    const uint32_t = 1065353216
            pCode[1568]:                    const uint32_t = 262203
            pCode[1569]:                    const uint32_t = 30
            pCode[1570]:                    const uint32_t = 75
            pCode[1571]:                    const uint32_t = 1
            pCode[1572]:                    const uint32_t = 262187
            pCode[1573]:                    const uint32_t = 8
            pCode[1574]:                    const uint32_t = 82
            pCode[1575]:                    const uint32_t = 0
            pCode[1576]:                    const uint32_t = 262187
            pCode[1577]:                    const uint32_t = 18
            pCode[1578]:                    const uint32_t = 89
            pCode[1579]:                    const uint32_t = 3
            pCode[1580]:                    const uint32_t = 262187
            pCode[1581]:                    const uint32_t = 8
            pCode[1582]:                    const uint32_t = 106
            pCode[1583]:                    const uint32_t = 1107296256
            pCode[1584]:                    const uint32_t = 262187
            pCode[1585]:                    const uint32_t = 8
            pCode[1586]:                    const uint32_t = 109
            pCode[1587]:                    const uint32_t = 1050253722
            pCode[1588]:                    const uint32_t = 393260
            pCode[1589]:                    const uint32_t = 9
            pCode[1590]:                    const uint32_t = 110
            pCode[1591]:                    const uint32_t = 109
            pCode[1592]:                    const uint32_t = 109
            pCode[1593]:                    const uint32_t = 109
            pCode[1594]:                    const uint32_t = 262187
            pCode[1595]:                    const uint32_t = 18
            pCode[1596]:                    const uint32_t = 118
            pCode[1597]:                    const uint32_t = 5
            pCode[1598]:                    const uint32_t = 262187
            pCode[1599]:                    const uint32_t = 8
            pCode[1600]:                    const uint32_t = 142
            pCode[1601]:                    const uint32_t = 1055439407
            pCode[1602]:                    const uint32_t = 393260
            pCode[1603]:                    const uint32_t = 9
            pCode[1604]:                    const uint32_t = 143
            pCode[1605]:                    const uint32_t = 142
            pCode[1606]:                    const uint32_t = 142
            pCode[1607]:                    const uint32_t = 142
            pCode[1608]:                    const uint32_t = 262176
            pCode[1609]:                    const uint32_t = 145
            pCode[1610]:                    const uint32_t = 3
            pCode[1611]:                    const uint32_t = 12
            pCode[1612]:                    const uint32_t = 262203
            pCode[1613]:                    const uint32_t = 145
            pCode[1614]:                    const uint32_t = 146
            pCode[1615]:                    const uint32_t = 3
            pCode[1616]:                    const uint32_t = 262152
            pCode[1617]:                    const uint32_t = 1
            pCode[1618]:                    const uint32_t = 32
            pCode[1619]:                    const uint32_t = 11
            pCode[1620]:                    const uint32_t = 327734
            pCode[1621]:                    const uint32_t = 4
            pCode[1622]:                    const uint32_t = 6
            pCode[1623]:                    const uint32_t = 0
            pCode[1624]:                    const uint32_t = 5
            pCode[1625]:                    const uint32_t = 131320
            pCode[1626]:                    const uint32_t = 7
            pCode[1627]:                    const uint32_t = 262152
            pCode[1628]:                    const uint32_t = 1
            pCode[1629]:                    const uint32_t = 34
            pCode[1630]:                    const uint32_t = 0
            pCode[1631]:                    const uint32_t = 327745
            pCode[1632]:                    const uint32_t = 20
            pCode[1633]:                    const uint32_t = 21
            pCode[1634]:                    const uint32_t = 17
            pCode[1635]:                    const uint32_t = 19
            pCode[1636]:                    const uint32_t = 262205
            pCode[1637]:                    const uint32_t = 12
            pCode[1638]:                    const uint32_t = 22
            pCode[1639]:                    const uint32_t = 21
            pCode[1640]:                    const uint32_t = 524367
            pCode[1641]:                    const uint32_t = 9
            pCode[1642]:                    const uint32_t = 23
            pCode[1643]:                    const uint32_t = 22
            pCode[1644]:                    const uint32_t = 22
            pCode[1645]:                    const uint32_t = 0
            pCode[1646]:                    const uint32_t = 1
            pCode[1647]:                    const uint32_t = 2
            pCode[1648]:                    const uint32_t = 393281
            pCode[1649]:                    const uint32_t = 25
            pCode[1650]:                    const uint32_t = 26
            pCode[1651]:                    const uint32_t = 17
            pCode[1652]:                    const uint32_t = 19
            pCode[1653]:                    const uint32_t = 24
            pCode[1654]:                    const uint32_t = 262205
            pCode[1655]:                    const uint32_t = 8
            pCode[1656]:                    const uint32_t = 27
            pCode[1657]:                    const uint32_t = 26
            pCode[1658]:                    const uint32_t = 327822
            pCode[1659]:                    const uint32_t = 9
            pCode[1660]:                    const uint32_t = 28
            pCode[1661]:                    const uint32_t = 23
            pCode[1662]:                    const uint32_t = 27
            pCode[1663]:                    const uint32_t = 262152
            pCode[1664]:                    const uint32_t = 1
            pCode[1665]:                    const uint32_t = 37
            pCode[1666]:                    const uint32_t = 0
            pCode[1667]:                    const uint32_t = 262205
            pCode[1668]:                    const uint32_t = 9
            pCode[1669]:                    const uint32_t = 32
            pCode[1670]:                    const uint32_t = 31
            pCode[1671]:                    const uint32_t = 262152
            pCode[1672]:                    const uint32_t = 1
            pCode[1673]:                    const uint32_t = 38
            pCode[1674]:                    const uint32_t = 0
            pCode[1675]:                    const uint32_t = 262205
            pCode[1676]:                    const uint32_t = 14
            pCode[1677]:                    const uint32_t = 42
            pCode[1678]:                    const uint32_t = 41
            pCode[1679]:                    const uint32_t = 262227
            pCode[1680]:                    const uint32_t = 14
            pCode[1681]:                    const uint32_t = 43
            pCode[1682]:                    const uint32_t = 42
            pCode[1683]:                    const uint32_t = 327745
            pCode[1684]:                    const uint32_t = 44
            pCode[1685]:                    const uint32_t = 45
            pCode[1686]:                    const uint32_t = 39
            pCode[1687]:                    const uint32_t = 43
            pCode[1688]:                    const uint32_t = 262205
            pCode[1689]:                    const uint32_t = 36
            pCode[1690]:                    const uint32_t = 46
            pCode[1691]:                    const uint32_t = 45
            pCode[1692]:                    const uint32_t = 262205
            pCode[1693]:                    const uint32_t = 47
            pCode[1694]:                    const uint32_t = 50
            pCode[1695]:                    const uint32_t = 49
            pCode[1696]:                    const uint32_t = 327767
            pCode[1697]:                    const uint32_t = 12
            pCode[1698]:                    const uint32_t = 51
            pCode[1699]:                    const uint32_t = 46
            pCode[1700]:                    const uint32_t = 50
            pCode[1701]:                    const uint32_t = 524367
            pCode[1702]:                    const uint32_t = 9
            pCode[1703]:                    const uint32_t = 52
            pCode[1704]:                    const uint32_t = 51
            pCode[1705]:                    const uint32_t = 51
            pCode[1706]:                    const uint32_t = 0
            pCode[1707]:                    const uint32_t = 1
            pCode[1708]:                    const uint32_t = 2
            pCode[1709]:                    const uint32_t = 327813
            pCode[1710]:                    const uint32_t = 9
            pCode[1711]:                    const uint32_t = 53
            pCode[1712]:                    const uint32_t = 32
            pCode[1713]:                    const uint32_t = 52
            pCode[1714]:                    const uint32_t = 262152
            pCode[1715]:                    const uint32_t = 1
            pCode[1716]:                    const uint32_t = 41
            pCode[1717]:                    const uint32_t = 0
            pCode[1718]:                    const uint32_t = 327745
            pCode[1719]:                    const uint32_t = 20
            pCode[1720]:                    const uint32_t = 56
            pCode[1721]:                    const uint32_t = 17
            pCode[1722]:                    const uint32_t = 55
            pCode[1723]:                    const uint32_t = 262205
            pCode[1724]:                    const uint32_t = 12
            pCode[1725]:                    const uint32_t = 57
            pCode[1726]:                    const uint32_t = 56
            pCode[1727]:                    const uint32_t = 524367
            pCode[1728]:                    const uint32_t = 9
            pCode[1729]:                    const uint32_t = 58
            pCode[1730]:                    const uint32_t = 57
            pCode[1731]:                    const uint32_t = 57
            pCode[1732]:                    const uint32_t = 0
            pCode[1733]:                    const uint32_t = 1
            pCode[1734]:                    const uint32_t = 2
            pCode[1735]:                    const uint32_t = 262205
            pCode[1736]:                    const uint32_t = 9
            pCode[1737]:                    const uint32_t = 60
            pCode[1738]:                    const uint32_t = 59
            pCode[1739]:                    const uint32_t = 327811
            pCode[1740]:                    const uint32_t = 9
            pCode[1741]:                    const uint32_t = 61
            pCode[1742]:                    const uint32_t = 58
            pCode[1743]:                    const uint32_t = 60
            pCode[1744]:                    const uint32_t = 262152
            pCode[1745]:                    const uint32_t = 1
            pCode[1746]:                    const uint32_t = 42
            pCode[1747]:                    const uint32_t = 0
            pCode[1748]:                    const uint32_t = 393228
            pCode[1749]:                    const uint32_t = 8
            pCode[1750]:                    const uint32_t = 65
            pCode[1751]:                    const uint32_t = 3
            pCode[1752]:                    const uint32_t = 66
            pCode[1753]:                    const uint32_t = 61
            pCode[1754]:                    const uint32_t = 262152
            pCode[1755]:                    const uint32_t = 1
            pCode[1756]:                    const uint32_t = 43
            pCode[1757]:                    const uint32_t = 0
            pCode[1758]:                    const uint32_t = 327813
            pCode[1759]:                    const uint32_t = 8
            pCode[1760]:                    const uint32_t = 70
            pCode[1761]:                    const uint32_t = 65
            pCode[1762]:                    const uint32_t = 65
            pCode[1763]:                    const uint32_t = 327816
            pCode[1764]:                    const uint32_t = 8
            pCode[1765]:                    const uint32_t = 71
            pCode[1766]:                    const uint32_t = 67
            pCode[1767]:                    const uint32_t = 70
            pCode[1768]:                    const uint32_t = 262152
            pCode[1769]:                    const uint32_t = 1
            pCode[1770]:                    const uint32_t = 44
            pCode[1771]:                    const uint32_t = 0
            pCode[1772]:                    const uint32_t = 393228
            pCode[1773]:                    const uint32_t = 9
            pCode[1774]:                    const uint32_t = 73
            pCode[1775]:                    const uint32_t = 3
            pCode[1776]:                    const uint32_t = 69
            pCode[1777]:                    const uint32_t = 61
            pCode[1778]:                    const uint32_t = 262152
            pCode[1779]:                    const uint32_t = 1
            pCode[1780]:                    const uint32_t = 47
            pCode[1781]:                    const uint32_t = 0
            pCode[1782]:                    const uint32_t = 262205
            pCode[1783]:                    const uint32_t = 9
            pCode[1784]:                    const uint32_t = 76
            pCode[1785]:                    const uint32_t = 75
            pCode[1786]:                    const uint32_t = 393228
            pCode[1787]:                    const uint32_t = 9
            pCode[1788]:                    const uint32_t = 77
            pCode[1789]:                    const uint32_t = 3
            pCode[1790]:                    const uint32_t = 69
            pCode[1791]:                    const uint32_t = 76
            pCode[1792]:                    const uint32_t = 262152
            pCode[1793]:                    const uint32_t = 1
            pCode[1794]:                    const uint32_t = 50
            pCode[1795]:                    const uint32_t = 0
            pCode[1796]:                    const uint32_t = 327828
            pCode[1797]:                    const uint32_t = 8
            pCode[1798]:                    const uint32_t = 81
            pCode[1799]:                    const uint32_t = 73
            pCode[1800]:                    const uint32_t = 77
            pCode[1801]:                    const uint32_t = 458764
            pCode[1802]:                    const uint32_t = 8
            pCode[1803]:                    const uint32_t = 83
            pCode[1804]:                    const uint32_t = 3
            pCode[1805]:                    const uint32_t = 40
            pCode[1806]:                    const uint32_t = 81
            pCode[1807]:                    const uint32_t = 82
            pCode[1808]:                    const uint32_t = 262152
            pCode[1809]:                    const uint32_t = 1
            pCode[1810]:                    const uint32_t = 51
            pCode[1811]:                    const uint32_t = 0
            pCode[1812]:                    const uint32_t = 327822
            pCode[1813]:                    const uint32_t = 9
            pCode[1814]:                    const uint32_t = 87
            pCode[1815]:                    const uint32_t = 53
            pCode[1816]:                    const uint32_t = 83
            pCode[1817]:                    const uint32_t = 262152
            pCode[1818]:                    const uint32_t = 1
            pCode[1819]:                    const uint32_t = 54
            pCode[1820]:                    const uint32_t = 0
            pCode[1821]:                    const uint32_t = 327745
            pCode[1822]:                    const uint32_t = 20
            pCode[1823]:                    const uint32_t = 90
            pCode[1824]:                    const uint32_t = 17
            pCode[1825]:                    const uint32_t = 89
            pCode[1826]:                    const uint32_t = 262205
            pCode[1827]:                    const uint32_t = 12
            pCode[1828]:                    const uint32_t = 91
            pCode[1829]:                    const uint32_t = 90
            pCode[1830]:                    const uint32_t = 524367
            pCode[1831]:                    const uint32_t = 9
            pCode[1832]:                    const uint32_t = 92
            pCode[1833]:                    const uint32_t = 91
            pCode[1834]:                    const uint32_t = 91
            pCode[1835]:                    const uint32_t = 0
            pCode[1836]:                    const uint32_t = 1
            pCode[1837]:                    const uint32_t = 2
            pCode[1838]:                    const uint32_t = 327811
            pCode[1839]:                    const uint32_t = 9
            pCode[1840]:                    const uint32_t = 94
            pCode[1841]:                    const uint32_t = 92
            pCode[1842]:                    const uint32_t = 60
            pCode[1843]:                    const uint32_t = 393228
            pCode[1844]:                    const uint32_t = 9
            pCode[1845]:                    const uint32_t = 95
            pCode[1846]:                    const uint32_t = 3
            pCode[1847]:                    const uint32_t = 69
            pCode[1848]:                    const uint32_t = 94
            pCode[1849]:                    const uint32_t = 262152
            pCode[1850]:                    const uint32_t = 1
            pCode[1851]:                    const uint32_t = 55
            pCode[1852]:                    const uint32_t = 0
            pCode[1853]:                    const uint32_t = 327809
            pCode[1854]:                    const uint32_t = 9
            pCode[1855]:                    const uint32_t = 99
            pCode[1856]:                    const uint32_t = 73
            pCode[1857]:                    const uint32_t = 95
            pCode[1858]:                    const uint32_t = 393228
            pCode[1859]:                    const uint32_t = 9
            pCode[1860]:                    const uint32_t = 100
            pCode[1861]:                    const uint32_t = 3
            pCode[1862]:                    const uint32_t = 69
            pCode[1863]:                    const uint32_t = 99
            pCode[1864]:                    const uint32_t = 262152
            pCode[1865]:                    const uint32_t = 1
            pCode[1866]:                    const uint32_t = 56
            pCode[1867]:                    const uint32_t = 0
            pCode[1868]:                    const uint32_t = 327828
            pCode[1869]:                    const uint32_t = 8
            pCode[1870]:                    const uint32_t = 104
            pCode[1871]:                    const uint32_t = 77
            pCode[1872]:                    const uint32_t = 100
            pCode[1873]:                    const uint32_t = 458764
            pCode[1874]:                    const uint32_t = 8
            pCode[1875]:                    const uint32_t = 105
            pCode[1876]:                    const uint32_t = 3
            pCode[1877]:                    const uint32_t = 40
            pCode[1878]:                    const uint32_t = 104
            pCode[1879]:                    const uint32_t = 82
            pCode[1880]:                    const uint32_t = 458764
            pCode[1881]:                    const uint32_t = 8
            pCode[1882]:                    const uint32_t = 107
            pCode[1883]:                    const uint32_t = 3
            pCode[1884]:                    const uint32_t = 26
            pCode[1885]:                    const uint32_t = 105
            pCode[1886]:                    const uint32_t = 106
            pCode[1887]:                    const uint32_t = 262152
            pCode[1888]:                    const uint32_t = 1
            pCode[1889]:                    const uint32_t = 58
            pCode[1890]:                    const uint32_t = 0
            pCode[1891]:                    const uint32_t = 327822
            pCode[1892]:                    const uint32_t = 9
            pCode[1893]:                    const uint32_t = 112
            pCode[1894]:                    const uint32_t = 110
            pCode[1895]:                    const uint32_t = 107
            pCode[1896]:                    const uint32_t = 262152
            pCode[1897]:                    const uint32_t = 1
            pCode[1898]:                    const uint32_t = 60
            pCode[1899]:                    const uint32_t = 0
            pCode[1900]:                    const uint32_t = 327822
            pCode[1901]:                    const uint32_t = 9
            pCode[1902]:                    const uint32_t = 116
            pCode[1903]:                    const uint32_t = 28
            pCode[1904]:                    const uint32_t = 71
            pCode[1905]:                    const uint32_t = 262152
            pCode[1906]:                    const uint32_t = 1
            pCode[1907]:                    const uint32_t = 61
            pCode[1908]:                    const uint32_t = 0
            pCode[1909]:                    const uint32_t = 327745
            pCode[1910]:                    const uint32_t = 20
            pCode[1911]:                    const uint32_t = 119
            pCode[1912]:                    const uint32_t = 17
            pCode[1913]:                    const uint32_t = 118
            pCode[1914]:                    const uint32_t = 262205
            pCode[1915]:                    const uint32_t = 12
            pCode[1916]:                    const uint32_t = 120
            pCode[1917]:                    const uint32_t = 119
            pCode[1918]:                    const uint32_t = 524367
            pCode[1919]:                    const uint32_t = 9
            pCode[1920]:                    const uint32_t = 121
            pCode[1921]:                    const uint32_t = 120
            pCode[1922]:                    const uint32_t = 120
            pCode[1923]:                    const uint32_t = 0
            pCode[1924]:                    const uint32_t = 1
            pCode[1925]:                    const uint32_t = 2
            pCode[1926]:                    const uint32_t = 327813
            pCode[1927]:                    const uint32_t = 9
            pCode[1928]:                    const uint32_t = 122
            pCode[1929]:                    const uint32_t = 87
            pCode[1930]:                    const uint32_t = 121
            pCode[1931]:                    const uint32_t = 393281
            pCode[1932]:                    const uint32_t = 25
            pCode[1933]:                    const uint32_t = 123
            pCode[1934]:                    const uint32_t = 17
            pCode[1935]:                    const uint32_t = 118
            pCode[1936]:                    const uint32_t = 24
            pCode[1937]:                    const uint32_t = 262205
            pCode[1938]:                    const uint32_t = 8
            pCode[1939]:                    const uint32_t = 124
            pCode[1940]:                    const uint32_t = 123
            pCode[1941]:                    const uint32_t = 327822
            pCode[1942]:                    const uint32_t = 9
            pCode[1943]:                    const uint32_t = 125
            pCode[1944]:                    const uint32_t = 122
            pCode[1945]:                    const uint32_t = 124
            pCode[1946]:                    const uint32_t = 327822
            pCode[1947]:                    const uint32_t = 9
            pCode[1948]:                    const uint32_t = 127
            pCode[1949]:                    const uint32_t = 125
            pCode[1950]:                    const uint32_t = 71
            pCode[1951]:                    const uint32_t = 327809
            pCode[1952]:                    const uint32_t = 9
            pCode[1953]:                    const uint32_t = 128
            pCode[1954]:                    const uint32_t = 116
            pCode[1955]:                    const uint32_t = 127
            pCode[1956]:                    const uint32_t = 262152
            pCode[1957]:                    const uint32_t = 1
            pCode[1958]:                    const uint32_t = 62
            pCode[1959]:                    const uint32_t = 0
            pCode[1960]:                    const uint32_t = 327813
            pCode[1961]:                    const uint32_t = 9
            pCode[1962]:                    const uint32_t = 133
            pCode[1963]:                    const uint32_t = 112
            pCode[1964]:                    const uint32_t = 121
            pCode[1965]:                    const uint32_t = 327822
            pCode[1966]:                    const uint32_t = 9
            pCode[1967]:                    const uint32_t = 136
            pCode[1968]:                    const uint32_t = 133
            pCode[1969]:                    const uint32_t = 124
            pCode[1970]:                    const uint32_t = 327822
            pCode[1971]:                    const uint32_t = 9
            pCode[1972]:                    const uint32_t = 138
            pCode[1973]:                    const uint32_t = 136
            pCode[1974]:                    const uint32_t = 71
            pCode[1975]:                    const uint32_t = 327809
            pCode[1976]:                    const uint32_t = 9
            pCode[1977]:                    const uint32_t = 139
            pCode[1978]:                    const uint32_t = 128
            pCode[1979]:                    const uint32_t = 138
            pCode[1980]:                    const uint32_t = 262152
            pCode[1981]:                    const uint32_t = 1
            pCode[1982]:                    const uint32_t = 64
            pCode[1983]:                    const uint32_t = 0
            pCode[1984]:                    const uint32_t = 458764
            pCode[1985]:                    const uint32_t = 9
            pCode[1986]:                    const uint32_t = 144
            pCode[1987]:                    const uint32_t = 3
            pCode[1988]:                    const uint32_t = 26
            pCode[1989]:                    const uint32_t = 139
            pCode[1990]:                    const uint32_t = 143
            pCode[1991]:                    const uint32_t = 262152
            pCode[1992]:                    const uint32_t = 1
            pCode[1993]:                    const uint32_t = 66
            pCode[1994]:                    const uint32_t = 0
            pCode[1995]:                    const uint32_t = 327761
            pCode[1996]:                    const uint32_t = 8
            pCode[1997]:                    const uint32_t = 148
            pCode[1998]:                    const uint32_t = 144
            pCode[1999]:                    const uint32_t = 0
            pCode[2000]:                    const uint32_t = 327761
            pCode[2001]:                    const uint32_t = 8
            pCode[2002]:                    const uint32_t = 149
            pCode[2003]:                    const uint32_t = 144
            pCode[2004]:                    const uint32_t = 1
            pCode[2005]:                    const uint32_t = 327761
            pCode[2006]:                    const uint32_t = 8
            pCode[2007]:                    const uint32_t = 150
            pCode[2008]:                    const uint32_t = 144
            pCode[2009]:                    const uint32_t = 2
            pCode[2010]:                    const uint32_t = 458832
            pCode[2011]:                    const uint32_t = 12
            pCode[2012]:                    const uint32_t = 151
            pCode[2013]:                    const uint32_t = 148
            pCode[2014]:                    const uint32_t = 149
            pCode[2015]:                    const uint32_t = 150
            pCode[2016]:                    const uint32_t = 67
            pCode[2017]:                    const uint32_t = 196670
            pCode[2018]:                    const uint32_t = 146
            pCode[2019]:                    const uint32_t = 151
            pCode[2020]:                    const uint32_t = 65789
            pCode[2021]:                    const uint32_t = 65592
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 7F79AD0000000050

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 00000097A053F388:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 2
        pSetLayouts:                    const VkDescriptorSetLayout* = 00000097A053F358
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 59FFE0000000003D [Scene Descriptor Set Layout]
            pSetLayouts[1]:                 const VkDescriptorSetLayout = 5C5283000000003E [Material Descriptor Set Layout]
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 7DDD740000000051

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE_LAYOUT (17)
        objectHandle:                   uint64_t = 9069532767942869073
        pObjectName:                    const char* = "Pipeline Layout"

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 00000097A053E790
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 00000097A053E790:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = VkPipelineRenderingCreateInfo
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 00000097A053F3E0
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 00000097A053F3E0:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                    module:                         VkShaderModule = 7CD292000000004F
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 00000097A053F410:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                    module:                         VkShaderModule = 7F79AD0000000050
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 00000097A053E6D8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 0
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = NULL
                vertexAttributeDescriptionCount: uint32_t = 0
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = NULL
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 00000097A053F440:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 00000097A053E638:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = UNUSED
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = UNUSED
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 00000097A053F460:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 0 (VK_CULL_MODE_NONE)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_CLOCKWISE (1)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 00000097A053F4C8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 1
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 00000097A053F4F8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 1
                depthWriteEnable:               VkBool32 = 1
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_GREATER_OR_EQUAL (6)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 00000097A053F520:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 00000097A053F53C:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 1
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 00000097A053E688:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_COPY (3)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 00000097A053F4A0
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 00000097A053F4A0:
                        blendEnable:                    VkBool32 = 0
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 00000097A053E6B0
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = 00000097A053E748:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO (27)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDynamicStateCreateFlags = 0
                dynamicStateCount:              uint32_t = 2
                pDynamicStates:                 const VkDynamicState* = 00000097A053E728
                    pDynamicStates[0]:              const VkDynamicState = VK_DYNAMIC_STATE_VIEWPORT (0)
                    pDynamicStates[1]:              const VkDynamicState = VK_DYNAMIC_STATE_SCISSOR (1)
            layout:                         VkPipelineLayout = 7DDD740000000051 [Pipeline Layout]
            renderPass:                     VkRenderPass = 0000000000000000
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
        pNext:                          VkPipelineRenderingCreateInfo = 00000097A053F560:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO (1000044002)
            pNext:                          const void* = NULL
            viewMask:                       uint32_t = 0
            colorAttachmentCount:           uint32_t = 1
            pColorAttachmentFormats:        const VkFormat* = 00000097A053F588
                pColorAttachmentFormats[0]:     const VkFormat = VK_FORMAT_R16G16B16A16_SFLOAT (97)
            depthAttachmentFormat:          VkFormat = VK_FORMAT_D32_SFLOAT (126)
            stencilAttachmentFormat:        VkFormat = VK_FORMAT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 00000097A053E838
        pPipelines[0]:                  VkPipeline = 72303F0000000052

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE (19)
        objectHandle:                   uint64_t = 8228145788438446162
        pObjectName:                    const char* = "Opaque Pipeline"

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 00000097A053E790
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 00000097A053E790:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = VkPipelineRenderingCreateInfo
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 00000097A053F3E0
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 00000097A053F3E0:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                    module:                         VkShaderModule = 7CD292000000004F
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 00000097A053F410:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                    module:                         VkShaderModule = 7F79AD0000000050
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 00000097A053E6D8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 0
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = NULL
                vertexAttributeDescriptionCount: uint32_t = 0
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = NULL
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 00000097A053F440:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 00000097A053E638:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = UNUSED
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = UNUSED
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 00000097A053F460:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 0 (VK_CULL_MODE_NONE)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_CLOCKWISE (1)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 00000097A053F4C8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 1
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 00000097A053F4F8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 1
                depthWriteEnable:               VkBool32 = 0
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_GREATER_OR_EQUAL (6)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 00000097A053F520:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 00000097A053F53C:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 1
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 00000097A053E688:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_COPY (3)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 00000097A053F4A0
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 00000097A053F4A0:
                        blendEnable:                    VkBool32 = 1
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ONE (1)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_DST_ALPHA (8)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ONE (1)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 00000097A053E6B0
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = 00000097A053E748:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO (27)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDynamicStateCreateFlags = 0
                dynamicStateCount:              uint32_t = 2
                pDynamicStates:                 const VkDynamicState* = 00000097A053E728
                    pDynamicStates[0]:              const VkDynamicState = VK_DYNAMIC_STATE_VIEWPORT (0)
                    pDynamicStates[1]:              const VkDynamicState = VK_DYNAMIC_STATE_SCISSOR (1)
            layout:                         VkPipelineLayout = 7DDD740000000051 [Pipeline Layout]
            renderPass:                     VkRenderPass = 0000000000000000
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
        pNext:                          VkPipelineRenderingCreateInfo = 00000097A053F560:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO (1000044002)
            pNext:                          const void* = NULL
            viewMask:                       uint32_t = 0
            colorAttachmentCount:           uint32_t = 1
            pColorAttachmentFormats:        const VkFormat* = 00000097A053F588
                pColorAttachmentFormats[0]:     const VkFormat = VK_FORMAT_R16G16B16A16_SFLOAT (97)
            depthAttachmentFormat:          VkFormat = VK_FORMAT_D32_SFLOAT (126)
            stencilAttachmentFormat:        VkFormat = VK_FORMAT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 00000097A053E838
        pPipelines[0]:                  VkPipeline = 02A7F70000000053

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E7C0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_PIPELINE (19)
        objectHandle:                   uint64_t = 191393088558596179
        pObjectName:                    const char* = "Transparent Pipeline"

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    shaderModule:                   VkShaderModule = 7CD292000000004F
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    shaderModule:                   VkShaderModule = 7F79AD0000000050
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateSampler(device, pCreateInfo, pAllocator, pSampler) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkSamplerCreateInfo* = 00000097A053EBC0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO (31)
        pNext:                          const void* = NULL
        flags:                          VkSamplerCreateFlags = 0
        magFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        minFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        mipmapMode:                     VkSamplerMipmapMode = VK_SAMPLER_MIPMAP_MODE_LINEAR (1)
        addressModeU:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeV:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeW:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        mipLodBias:                     float = 0
        anisotropyEnable:               VkBool32 = 0
        maxAnisotropy:                  float = 0
        compareEnable:                  VkBool32 = 0
        compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
        minLod:                         float = 0
        maxLod:                         float = 1000
        borderColor:                    VkBorderColor = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK (0)
        unnormalizedCoordinates:        VkBool32 = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSampler:                       VkSampler* = 74EA280000000054

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 6871490000000055

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 6871490000000055
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 05C59A0000000056

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 6871490000000055
            memory:                         VkDeviceMemory = 05C59A0000000056
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 05C59A0000000056
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 05C59A0000000056

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 73B89B0000000057

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 73B89B0000000057
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 625F640000000058

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 73B89B0000000057
            memory:                         VkDeviceMemory = 625F640000000058
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 73B89B0000000057
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0EE24D0000000059

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 73B89B0000000057
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 6871490000000055
        dstImage:                       VkImage = 73B89B0000000057
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 73B89B0000000057
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 05C59A0000000056
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 6871490000000055
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 8338585134378778711
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 1072504323662938201
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 4868E6000000005A

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 4868E6000000005A
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 6DCC3F000000005B

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 4868E6000000005A
            memory:                         VkDeviceMemory = 6DCC3F000000005B
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 6DCC3F000000005B
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 6DCC3F000000005B

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 130160000000005C

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 130160000000005C
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 4256C1000000005D

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 130160000000005C
            memory:                         VkDeviceMemory = 4256C1000000005D
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 130160000000005C
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 96FBE2000000005E

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 130160000000005C
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 4868E6000000005A
        dstImage:                       VkImage = 130160000000005C
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 130160000000005C
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 6DCC3F000000005B
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 4868E6000000005A
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 1369481314813608028
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 10879537814471442526
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 176083000000005F

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 176083000000005F
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 44349C0000000060

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 176083000000005F
            memory:                         VkDeviceMemory = 44349C0000000060
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 44349C0000000060
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 44349C0000000060

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 9389C50000000061

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 9389C50000000061
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 1D4E2E0000000062

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 9389C50000000061
            memory:                         VkDeviceMemory = 1D4E2E0000000062
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 9389C50000000061
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 5EF3070000000063

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 9389C50000000061
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 176083000000005F
        dstImage:                       VkImage = 9389C50000000061
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 9389C50000000061
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 44349C0000000060
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 176083000000005F
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 10631244999175438433
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 6841819955487309923
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 9F58380000000064

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 9F58380000000064
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 5DBCF90000000065

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 9F58380000000064
            memory:                         VkDeviceMemory = 5DBCF90000000065
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 5DBCF90000000065
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 5DBCF90000000065

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 5011AA0000000066

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 5011AA0000000066
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 85798B0000000067

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 5011AA0000000066
            memory:                         VkDeviceMemory = 85798B0000000067
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 5011AA0000000066
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 5684940000000068

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 5011AA0000000066
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 9F58380000000064
        dstImage:                       VkImage = 5011AA0000000066
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 5011AA0000000066
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 5DBCF90000000065
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 9F58380000000064
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 5769579514615038054
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 6234270511908520040
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 564FDD0000000069

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 564FDD0000000069
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 852B56000000006A

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 564FDD0000000069
            memory:                         VkDeviceMemory = 852B56000000006A
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 852B56000000006A
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 852B56000000006A

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 53E60F000000006B

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 53E60F000000006B
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 2C71F0000000006C

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 53E60F000000006B
            memory:                         VkDeviceMemory = 2C71F0000000006C
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 53E60F000000006B
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 8F1C31000000006D

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 53E60F000000006B
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 564FDD0000000069
        dstImage:                       VkImage = 53E60F000000006B
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 53E60F000000006B
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 852B56000000006A
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 564FDD0000000069
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 6045536042465886315
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 10312171122841354349
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 4E4775000000006E

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 4E4775000000006E
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 2D93AC000000006F

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 4E4775000000006E
            memory:                         VkDeviceMemory = 2D93AC000000006F
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 2D93AC000000006F
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 2D93AC000000006F

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = B3EE8B0000000070

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = B3EE8B0000000070
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 44695A0000000071

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = B3EE8B0000000070
            memory:                         VkDeviceMemory = 44695A0000000071
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = B3EE8B0000000070
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 2894590000000072

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B3EE8B0000000070
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 4E4775000000006E
        dstImage:                       VkImage = B3EE8B0000000070
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B3EE8B0000000070
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 2D93AC000000006F
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 4E4775000000006E
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 12965453209362497648
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 2924059914605166706
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = B6BEE80000000073

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = B6BEE80000000073
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 421A0F0000000074

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = B6BEE80000000073
            memory:                         VkDeviceMemory = 421A0F0000000074
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 421A0F0000000074
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 421A0F0000000074

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 33F7660000000075

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 33F7660000000075
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = BD60BD0000000076

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 33F7660000000075
            memory:                         VkDeviceMemory = BD60BD0000000076
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 33F7660000000075
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = B82DE40000000077

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 33F7660000000075
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = B6BEE80000000073
        dstImage:                       VkImage = 33F7660000000075
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 33F7660000000075
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 421A0F0000000074
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = B6BEE80000000073
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 3744573765367890037
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 13271514365581852791
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 3F36830000000078

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 3F36830000000078
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = A182620000000079

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 3F36830000000078
            memory:                         VkDeviceMemory = A182620000000079
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A182620000000079
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A182620000000079

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = B3FFC1000000007A

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = B3FFC1000000007A
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 051820000000007B

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = B3FFC1000000007A
            memory:                         VkDeviceMemory = 051820000000007B
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = B3FFC1000000007A
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = B8A507000000007C

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B3FFC1000000007A
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 3F36830000000078
        dstImage:                       VkImage = B3FFC1000000007A
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B3FFC1000000007A
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A182620000000079
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 3F36830000000078
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 12970297657594478714
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 13305048370717393020
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = B4AE2E000000007D

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = B4AE2E000000007D
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 010AC5000000007E

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = B4AE2E000000007D
            memory:                         VkDeviceMemory = 010AC5000000007E
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 010AC5000000007E
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 010AC5000000007E

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = B3C7BC000000007F

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = B3C7BC000000007F
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = AD937B0000000080

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = B3C7BC000000007F
            memory:                         VkDeviceMemory = AD937B0000000080
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = B3C7BC000000007F
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0F3EAA0000000081

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B3C7BC000000007F
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = B4AE2E000000007D
        dstImage:                       VkImage = B3C7BC000000007F
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = B3C7BC000000007F
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 010AC5000000007E
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = B4AE2E000000007D
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 12954529561340543103
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 1098502276101701761
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = CC25C90000000082

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = CC25C90000000082
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = A171580000000083

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = CC25C90000000082
            memory:                         VkDeviceMemory = A171580000000083
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A171580000000083
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A171580000000083

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 13CC1F0000000084

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 13CC1F0000000084
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = CA0B160000000085

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 13CC1F0000000084
            memory:                         VkDeviceMemory = CA0B160000000085
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 13CC1F0000000084
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = A6B6CD0000000086

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 13CC1F0000000084
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = CC25C90000000082
        dstImage:                       VkImage = 13CC1F0000000084
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 13CC1F0000000084
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = A171580000000083
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = CC25C90000000082
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 1426549266830065796
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 12013014455941070982
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 149D740000000087

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 149D740000000087
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = C079B30000000088

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 149D740000000087
            memory:                         VkDeviceMemory = C079B30000000088
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C079B30000000088
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C079B30000000088

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 93D4F20000000089

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 93D4F20000000089
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 1983B0000000008A

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 93D4F20000000089
            memory:                         VkDeviceMemory = 1983B0000000008A
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 93D4F20000000089
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = DE4E51000000008B

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 93D4F20000000089
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 149D740000000087
        dstImage:                       VkImage = 93D4F20000000089
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 93D4F20000000089
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C079B30000000088
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 149D740000000087
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 10652405100451987593
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16018829985045282955
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 9F1516000000008C

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 9F1516000000008C
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = E0601F000000008D

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 9F1516000000008C
            memory:                         VkDeviceMemory = E0601F000000008D
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E0601F000000008D
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E0601F000000008D

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = D3DD54000000008E

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = D3DD54000000008E
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 993A4D000000008F

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = D3DD54000000008E
            memory:                         VkDeviceMemory = 993A4D000000008F
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = D3DD54000000008E
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = E647EA0000000090

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D3DD54000000008E
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 9F1516000000008C
        dstImage:                       VkImage = D3DD54000000008E
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D3DD54000000008E
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E0601F000000008D
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 9F1516000000008C
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 15266450670832582798
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16593488637790781584
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = D68CBB0000000091

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = D68CBB0000000091
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 8168780000000092

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = D68CBB0000000091
            memory:                         VkDeviceMemory = 8168780000000092
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 8168780000000092
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 8168780000000092

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = EC25C90000000093

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = EC25C90000000093
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = E9B2EE0000000094

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = EC25C90000000093
            memory:                         VkDeviceMemory = E9B2EE0000000094
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = EC25C90000000093
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 8F5F070000000095

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = EC25C90000000093
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = D68CBB0000000091
        dstImage:                       VkImage = EC25C90000000093
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = EC25C90000000093
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 8168780000000092
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = D68CBB0000000091
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 17016227768926470291
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 10330983766792601749
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = CE045C0000000096

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = CE045C0000000096
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = E150C50000000097

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = CE045C0000000096
            memory:                         VkDeviceMemory = E150C50000000097
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E150C50000000097
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E150C50000000097

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 8BADA20000000098

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 8BADA20000000098
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = C82A830000000099

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 8BADA20000000098
            memory:                         VkDeviceMemory = C82A830000000099
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 8BADA20000000098
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = E750A0000000009A

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 8BADA20000000098
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = CE045C0000000096
        dstImage:                       VkImage = 8BADA20000000098
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 8BADA20000000098
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E150C50000000097
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = CE045C0000000096
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 10064878863126626456
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16667998142758650010
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = F6FBC1000000009B

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = F6FBC1000000009B
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = C25F26000000009C

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = F6FBC1000000009B
            memory:                         VkDeviceMemory = C25F26000000009C
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C25F26000000009C
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C25F26000000009C

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = FB320F000000009D

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = FB320F000000009D
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = F9A524000000009E

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = FB320F000000009D
            memory:                         VkDeviceMemory = F9A524000000009E
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = FB320F000000009D
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = FC68DD000000009F

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = FB320F000000009D
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = F6FBC1000000009B
        dstImage:                       VkImage = FB320F000000009D
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = FB320F000000009D
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C25F26000000009C
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = F6FBC1000000009B
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 18100546345029861533
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 18188030087205486751
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = FEF35A00000000A0

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = FEF35A00000000A0
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = E2478B00000000A1

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = FEF35A00000000A0
            memory:                         VkDeviceMemory = E2478B00000000A1
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E2478B00000000A1
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E2478B00000000A1

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = FBBAE800000000A2

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = FBBAE800000000A2
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = F9DDB900000000A3

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = FBBAE800000000A2
            memory:                         VkDeviceMemory = F9DDB900000000A3
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = FBBAE800000000A2
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = E4607E00000000A4

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = FBBAE800000000A2
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = FEF35A00000000A0
        dstImage:                       VkImage = FBBAE800000000A2
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = FBBAE800000000A2
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = E2478B00000000A1
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = FEF35A00000000A0
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 18139065535885738146
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16456291576876892324
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = F0EB3400000000A5

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = F0EB3400000000A5
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 054FEF00000000A6

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = F0EB3400000000A5
            memory:                         VkDeviceMemory = 054FEF00000000A6
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 054FEF00000000A6
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 054FEF00000000A6

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = EA035600000000A7

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = EA035600000000A7
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = E9D45100000000A8

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = EA035600000000A7
            memory:                         VkDeviceMemory = E9D45100000000A8
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = EA035600000000A7
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0F799000000000A9

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = EA035600000000A7
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = F0EB3400000000A5
        dstImage:                       VkImage = EA035600000000A7
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = EA035600000000A7
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 054FEF00000000A6
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = F0EB3400000000A5
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 16862415987805257895
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 1115080712425308329
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = D0E29300000000AA

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = D0E29300000000AA
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = ED367200000000AB

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = D0E29300000000AA
            memory:                         VkDeviceMemory = ED367200000000AB
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = ED367200000000AB
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = ED367200000000AB

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 0B8B3500000000AC

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 0B8B3500000000AC
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = C9CCFC00000000AD

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 0B8B3500000000AC
            memory:                         VkDeviceMemory = C9CCFC00000000AD
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0B8B3500000000AC
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = E7713700000000AE

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 0B8B3500000000AC
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = D0E29300000000AA
        dstImage:                       VkImage = 0B8B3500000000AC
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 0B8B3500000000AC
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = ED367200000000AB
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = D0E29300000000AA
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 831816830296260780
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16677171368269185198
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 10DA6E00000000AF

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 10DA6E00000000AF
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = C4BEC900000000B0

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 10DA6E00000000AF
            memory:                         VkDeviceMemory = C4BEC900000000B0
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C4BEC900000000B0
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C4BEC900000000B0

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 9B139800000000B1

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 9B139800000000B1
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 1DC49B00000000B2

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 9B139800000000B1
            memory:                         VkDeviceMemory = 1DC49B00000000B2
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 9B139800000000B1
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = DF8AAA00000000B3

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 9B139800000000B1
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 10DA6E00000000AF
        dstImage:                       VkImage = 9B139800000000B1
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 9B139800000000B1
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = C4BEC900000000B0
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 10DA6E00000000AF
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 11174442226203754673
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 16107873934220722355
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 90D1CD00000000B4

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 90D1CD00000000B4
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 1C252400000000B5

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 90D1CD00000000B4
            memory:                         VkDeviceMemory = 1C252400000000B5
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 1C252400000000B5
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 1C252400000000B5

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = DB987F00000000B6

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = DB987F00000000B6
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 95FF2600000000B7

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = DB987F00000000B6
            memory:                         VkDeviceMemory = 95FF2600000000B7
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = DB987F00000000B6
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 2602C100000000B8

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = DB987F00000000B6
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 90D1CD00000000B4
        dstImage:                       VkImage = DB987F00000000B6
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = DB987F00000000B6
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 1C252400000000B5
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 90D1CD00000000B4
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 15823536928742965430
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 2738963729138843832
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = D6C9A000000000B9

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = D6C9A000000000B9
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 84AD8300000000BA

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = D6C9A000000000B9
            memory:                         VkDeviceMemory = 84AD8300000000BA
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 84AD8300000000BA
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 84AD8300000000BA

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 2860E200000000BB

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 2860E200000000BB
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 2DF7C500000000BC

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 2860E200000000BB
            memory:                         VkDeviceMemory = 2DF7C500000000BC
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 2860E200000000BB
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 8F9A6C00000000BD

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 2860E200000000BB
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = D6C9A000000000B9
        dstImage:                       VkImage = 2860E200000000BB
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 2860E200000000BB
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 84AD8300000000BA
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = D6C9A000000000B9
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 2909573848909217979
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 10347701841092935869
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 2EC10700000000BE

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 2EC10700000000BE
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 2D15FE00000000BF

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 2EC10700000000BE
            memory:                         VkDeviceMemory = 2D15FE00000000BF
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 2D15FE00000000BF
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 2D15FE00000000BF

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 88693900000000C0

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 88693900000000C0
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 35EE6900000000C1

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 88693900000000C0
            memory:                         VkDeviceMemory = 35EE6900000000C1
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 88693900000000C0
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 27138A00000000C2

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 88693900000000C0
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 2EC10700000000BE
        dstImage:                       VkImage = 88693900000000C0
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 88693900000000C0
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 2D15FE00000000BF
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 2EC10700000000BE
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 9829450333875601600
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 2815745924641325250
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = B6389B00000000C3

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = B6389B00000000C3
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 3A9C5C00000000C4

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = B6389B00000000C3
            memory:                         VkDeviceMemory = 3A9C5C00000000C4
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 3A9C5C00000000C4
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 3A9C5C00000000C4

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 3B715500000000C5

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = 3B715500000000C5
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = BDE60E00000000C6

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = 3B715500000000C5
            memory:                         VkDeviceMemory = BDE60E00000000C6
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 3B715500000000C5
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = BFAB3700000000C7

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 3B715500000000C5
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = B6389B00000000C3
        dstImage:                       VkImage = 3B715500000000C5
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = 3B715500000000C5
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 3A9C5C00000000C4
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = B6389B00000000C3
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 4283298179094413509
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 13811193155401285831
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 3EB07000000000C8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 3EB07000000000C8
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = BA04B100000000C9

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 3EB07000000000C8
            memory:                         VkDeviceMemory = BA04B100000000C9
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = BA04B100000000C9
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = BA04B100000000C9

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = BB79F200000000CA

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = BB79F200000000CA
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 359E9300000000CB

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = BB79F200000000CA
            memory:                         VkDeviceMemory = 359E9300000000CB
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = BB79F200000000CA
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = A0235400000000CC

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = BB79F200000000CA
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = 3EB07000000000C8
        dstImage:                       VkImage = BB79F200000000CA
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = BB79F200000000CA
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = BA04B100000000C9
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 3EB07000000000C8
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 13509094639088435402
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 11539159029230076108
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E568:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 4194304
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = B527DD00000000CD

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E5F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = B527DD00000000CD
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E5B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E5C8:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E688:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0AF31600000000CE

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E6C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E6C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = B527DD00000000CD
            memory:                         VkDeviceMemory = 0AF31600000000CE
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 0AF31600000000CE
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 4194304
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 0AF31600000000CE

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageCreateInfo* = 00000097A053E480:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        extent:                         VkExtent3D = 00000097A053E49C:
            width:                          uint32_t = 1024
            height:                         uint32_t = 1024
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 7 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = AA4E0F00000000CF

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkImageMemoryRequirementsInfo2* = 00000097A053E538:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:                          const void* = NULL
        image:                          VkImage = AA4E0F00000000CF
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E4F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E508:
            size:                           VkDeviceSize = 4194304
            alignment:                      VkDeviceSize = 1024
            memoryTypeBits:                 uint32_t = 3

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E598:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 4194304
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = AD092800000000D0

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindImageMemoryInfo* = 00000097A053E5D8
        pBindInfos[0]:                  const VkBindImageMemoryInfo = 00000097A053E5D8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:                          const void* = NULL
            image:                          VkImage = AA4E0F00000000CF
            memory:                         VkDeviceMemory = AD092800000000D0
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkImageViewCreateInfo* = 00000097A053E620:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = AA4E0F00000000CF
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_UNORM (37)
        components:                     VkComponentMapping = 00000097A053E648:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 00000097A053E658:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0FB4F900000000D1

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E778:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = AA4E0F00000000CF
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdCopyBufferToImage2(commandBuffer, pCopyBufferToImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pCopyBufferToImageInfo:         const VkCopyBufferToImageInfo2* = 00000097A053E928:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 (1000337002)
        pNext:                          const void* = NULL
        srcBuffer:                      VkBuffer = B527DD00000000CD
        dstImage:                       VkImage = AA4E0F00000000CF
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkBufferImageCopy2* = 00000097A053E8C0
            pRegions[0]:                    const VkBufferImageCopy2 = 00000097A053E8C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 (1000337009)
                pNext:                          const void* = NULL
                bufferOffset:                   VkDeviceSize = 0
                bufferRowLength:                uint32_t = 0
                bufferImageHeight:              uint32_t = 0
                imageSubresource:               VkImageSubresourceLayers = 00000097A053E8E0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                imageOffset:                    VkOffset3D = 00000097A053E8F0:
                    x:                              int32_t = 0
                    y:                              int32_t = 0
                    z:                              int32_t = 0
                imageExtent:                    VkExtent3D = 00000097A053E8FC:
                    width:                          uint32_t = 1024
                    height:                         uint32_t = 1024
                    depth:                          uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053E770:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053E6F0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053E6F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 65536 (VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = AA4E0F00000000CF
                subresourceRange:               VkImageSubresourceRange = 00000097A053E738:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E720
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E720:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E6D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E6D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 0AF31600000000CE
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = B527DD00000000CD
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE (10)
        objectHandle:                   uint64_t = 12271762527305597135
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053E980:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_IMAGE_VIEW (14)
        objectHandle:                   uint64_t = 1131803184772153553
        pObjectName:                    const char* = "Name not found."

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E868:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 3328
        usage:                          VkBufferUsageFlags = 16 (VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = AC9FBA00000000D2

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E8F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = AC9FBA00000000D2
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E8B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E8C8:
            size:                           VkDeviceSize = 3328
            alignment:                      VkDeviceSize = 64
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E988:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 3328
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = AAFB8B00000000D3

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E9C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E9C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = AC9FBA00000000D2
            memory:                         VkDeviceMemory = AAFB8B00000000D3
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = AAFB8B00000000D3
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 3328
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF0000

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = 0EE24D0000000059 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 2
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = 5EF3070000000063 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 1
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 256
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 4
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = 8F1C31000000006D [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 2
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 512
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 6
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = B82DE40000000077 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 3
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 768
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 7
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = B8A507000000007C [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 4
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 1024
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 9
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = A6B6CD0000000086 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 5
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 1280
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 11
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = E647EA0000000090 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 6
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 1536
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 13
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = E750A0000000009A [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 7
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 1792
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 15
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = E4607E00000000A4 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 8
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 2048
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 17
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = E7713700000000AE [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 9
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 2304
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 19
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = 2602C100000000B8 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 10
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 2560
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 21
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = 27138A00000000C2 [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 11
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 2816
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA90
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA90:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 7
            dstArrayElement:                uint32_t = 23
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 00000097A053EA58
                pImageInfo[0]:                  const VkDescriptorImageInfo = 00000097A053EA58:
                    sampler:                        VkSampler = 74EA280000000054
                    imageView:                      VkImageView = A0235400000000CC [Name not found.]
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 1
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053EA40
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053EA40:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 12
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053EA08
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053EA08:
                    buffer:                         VkBuffer = AC9FBA00000000D2
                    offset:                         VkDeviceSize = 3072
                    range:                          VkDeviceSize = 256
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = AAFB8B00000000D3

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E698:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 20786928
        usage:                          VkBufferUsageFlags = 131106 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_STORAGE_BUFFER_BIT | VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0A56AC00000000D4

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E728:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 0A56AC00000000D4
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E6E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E6F8:
            size:                           VkDeviceSize = 20786928
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E7B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = VkMemoryAllocateFlagsInfo
        allocationSize:                 VkDeviceSize = 20786928
        memoryTypeIndex:                uint32_t = 1
        pNext:                          VkMemoryAllocateFlagsInfo = 00000097A053E788:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO (1000060000)
            pNext:                          const void* = NULL
            flags:                          VkMemoryAllocateFlags = 2 (VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT)
            deviceMask:                     uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 5581C500000000D5

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E7F8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E7F8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 0A56AC00000000D4
            memory:                         VkDeviceMemory = 5581C500000000D5
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkGetBufferDeviceAddress(device, pInfo) returns VkDeviceAddress 362348544:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferDeviceAddressInfo* = 00000097A053E9D8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO (1000244001)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 0A56AC00000000D4

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E698:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 7831668
        usage:                          VkBufferUsageFlags = 66 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_INDEX_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = A7CC1E00000000D6

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E728:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = A7CC1E00000000D6
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E6E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E6F8:
            size:                           VkDeviceSize = 7831668
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E7B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 7831668
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 14170700000000D7

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E7F8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E7F8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = A7CC1E00000000D6
            memory:                         VkDeviceMemory = 14170700000000D7
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E698:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 28618596
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 58E3E000000000D8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E728:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 58E3E000000000D8
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E6E8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E6F8:
            size:                           VkDeviceSize = 28618596
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E7B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 28618596
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 9B5EC100000000D9

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E7F8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E7F8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 58E3E000000000D8
            memory:                         VkDeviceMemory = 9B5EC100000000D9
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 9B5EC100000000D9
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 28618596
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240D0730000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 9B5EC100000000D9

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E8A8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    srcBuffer:                      VkBuffer = 58E3E000000000D8
    dstBuffer:                      VkBuffer = 0A56AC00000000D4
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 00000097A053EA68
        pRegions[0]:                    const VkBufferCopy = 00000097A053EA68:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 20786928

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    srcBuffer:                      VkBuffer = 58E3E000000000D8
    dstBuffer:                      VkBuffer = A7CC1E00000000D6
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 00000097A053EA98
        pRegions[0]:                    const VkBufferCopy = 00000097A053EA98:
            srcOffset:                      VkDeviceSize = 20786928
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 7831668

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E850
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E850:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E808
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E808:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 9B5EC100000000D9
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 58E3E000000000D8
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E788:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 960
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 1E386200000000DA

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E818:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 1E386200000000DA
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E7D8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E7E8:
            size:                           VkDeviceSize = 960
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E8A8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 960
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 5FC58300000000DB

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E8E8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E8E8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 1E386200000000DA
            memory:                         VkDeviceMemory = 5FC58300000000DB
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 5FC58300000000DB
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 960
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3BF1000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 5FC58300000000DB

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E788:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 960
        usage:                          VkBufferUsageFlags = 34 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_STORAGE_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 9C8EEB00000000DC

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E818:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 9C8EEB00000000DC
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E7D8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E7E8:
            size:                           VkDeviceSize = 960
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E8A8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 960
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 18EA4A00000000DD

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E8E8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E8E8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 9C8EEB00000000DC
            memory:                         VkDeviceMemory = 18EA4A00000000DD
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E998:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    srcBuffer:                      VkBuffer = 1E386200000000DA
    dstBuffer:                      VkBuffer = 9C8EEB00000000DC
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 00000097A053EAA8
        pRegions[0]:                    const VkBufferCopy = 00000097A053EAA8:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 960

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E940
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E940:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E8F8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E8F8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 5FC58300000000DB
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 1E386200000000DA
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053EA40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 11281212501842198748
        pObjectName:                    const char* = "Transform Buffer"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E788:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 240
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 5B275900000000DE

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E818:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 5B275900000000DE
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E7D8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E7E8:
            size:                           VkDeviceSize = 240
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E8A8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 240
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 91B01800000000DF

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E8E8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E8E8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 5B275900000000DE
            memory:                         VkDeviceMemory = 91B01800000000DF
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 91B01800000000DF
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 240
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3C10000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 91B01800000000DF

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E788:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 240
        usage:                          VkBufferUsageFlags = 34 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_STORAGE_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 67DD1700000000E0

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E818:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 67DD1700000000E0
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E7D8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E7E8:
            size:                           VkDeviceSize = 240
            alignment:                      VkDeviceSize = 16
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E8A8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 240
        memoryTypeIndex:                uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 55064E00000000E1

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E8E8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E8E8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 67DD1700000000E0
            memory:                         VkDeviceMemory = 55064E00000000E1
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053E998:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    srcBuffer:                      VkBuffer = 5B275900000000DE
    dstBuffer:                      VkBuffer = 67DD1700000000E0
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 00000097A053EAA8
        pRegions[0]:                    const VkBufferCopy = 00000097A053EAA8:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 240

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053E940
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053E940:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E8F8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E8F8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 91B01800000000DF
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 5B275900000000DE
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkSetDebugUtilsObjectNameEXT(device, pNameInfo) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pNameInfo:                      const VkDebugUtilsObjectNameInfoEXT* = 00000097A053EA40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT (1000128000)
        pNext:                          const void* = NULL
        objectType:                     VkObjectType = VK_OBJECT_TYPE_BUFFER (9)
        objectHandle:                   uint64_t = 7484163444527071456
        pObjectName:                    const char* = "Geometry Buffer"

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pCreateInfo:                    const VkBufferCreateInfo* = 00000097A053E868:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 240
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 88D2B500000000E2

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                         VkDevice = 00000240BCD610F0
    pInfo:                          const VkBufferMemoryRequirementsInfo2* = 00000097A053E8F8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:                          const void* = NULL
        buffer:                         VkBuffer = 88D2B500000000E2
    pMemoryRequirements:            VkMemoryRequirements2* = 00000097A053E8B8:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:                          void* = NULL
        memoryRequirements:             VkMemoryRequirements = 00000097A053E8C8:
            size:                           VkDeviceSize = 240
            alignment:                      VkDeviceSize = 4
            memoryTypeBits:                 uint32_t = 59

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 00000097A053E988:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 240
        memoryTypeIndex:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 6CAFFC00000000E3

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    bindInfoCount:                  uint32_t = 1
    pBindInfos:                     const VkBindBufferMemoryInfo* = 00000097A053E9C8
        pBindInfos[0]:                  const VkBindBufferMemoryInfo = 00000097A053E9C8:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:                          const void* = NULL
            buffer:                         VkBuffer = 88D2B500000000E2
            memory:                         VkDeviceMemory = 6CAFFC00000000E3
            memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 6CAFFC00000000E3
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 18446744073709551615
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 00000240C3C30000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 6CAFFC00000000E3

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053EA78:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
    srcBuffer:                      VkBuffer = 88D2B500000000E2
    dstBuffer:                      VkBuffer = 535B660000000043 [Object Buffer]
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 00000097A053F578
        pRegions[0]:                    const VkBufferCopy = 00000097A053F578:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 240

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053EA20
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053EA20:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 0
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = NULL
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053E9D8
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053E9D8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DCCB60
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 0
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = NULL
    fence:                          VkFence = 908683000000001D

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240BB93E190
        pFences[0]:                     const VkFence = 908683000000001D
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 18446744073709551615

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    memory:                         VkDeviceMemory = 6CAFFC00000000E3
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 00000240BCD610F0
    buffer:                         VkBuffer = 88D2B500000000E2
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 00000240BCD610F0
    descriptorWriteCount:           uint32_t = 3
    pDescriptorWrites:              const VkWriteDescriptorSet* = 00000097A053F760
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 00000097A053F760:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 4
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053F5A8
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053F5A8:
                    buffer:                         VkBuffer = 67DD1700000000E0 [Geometry Buffer]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 00000097A053F7A0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 5
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053F638
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053F638:
                    buffer:                         VkBuffer = 0A56AC00000000D4
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[2]:           const VkWriteDescriptorSet = 00000097A053F7E0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
            dstBinding:                     uint32_t = 6
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 00000097A053F6C8
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 00000097A053F6C8:
                    buffer:                         VkBuffer = 9C8EEB00000000DC [Transform Buffer]
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 18446744073709551615
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D10
        pFences[0]:                     const VkFence = 95A125000000001A
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 1000000000

Thread 0, Frame 0:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    swapchain:                      VkSwapchainKHR = FA21A40000000003
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = CFEF35000000000A [Swapchain semaphore]
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 0

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D10
        pFences[0]:                     const VkFence = 95A125000000001A

Thread 0, Frame 0:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053F938:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdUpdateBuffer(commandBuffer, dstBuffer, dstOffset, dataSize, pData) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    dstBuffer:                      VkBuffer = 6612E40000000041 [Frame Uniforms]
    dstOffset:                      VkDeviceSize = 0
    dataSize:                       VkDeviceSize = 272
    pData:                          const void* = 00000240C1E47D20

Thread 0, Frame 0:
vkCmdFillBuffer(commandBuffer, dstBuffer, dstOffset, size, data) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    dstBuffer:                      VkBuffer = 8CC1D80000000045 [Count Buffer]
    dstOffset:                      VkDeviceSize = 0
    size:                           VkDeviceSize = 32
    data:                           uint32_t = 0

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F8F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F880
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F880:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2184 (VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT | VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 6612E40000000041 [Frame Uniforms]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F8F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F880
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F880:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 96 (VK_ACCESS_2_SHADER_READ_BIT | VK_ACCESS_2_SHADER_WRITE_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 0 (VK_PIPELINE_STAGE_2_NONE)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    pipeline:                       VkPipeline = B991FA0000000024

Thread 0, Frame 0:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    layout:                         VkPipelineLayout = A7C5450000000023
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 00000240BB93E258
        pDescriptorSets[0]:             const VkDescriptorSet = AB64DE0000000020
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 0:
vkCmdPushConstants(commandBuffer, layout, stageFlags, offset, size, pValues) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    layout:                         VkPipelineLayout = A7C5450000000023
    stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
    offset:                         uint32_t = 0
    size:                           uint32_t = 64
    pValues:                        const void* = 00000097A053F650

Thread 0, Frame 0:
vkCmdDispatch(commandBuffer, groupCountX, groupCountY, groupCountZ) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    groupCountX:                    uint32_t = 68
    groupCountY:                    uint32_t = 45
    groupCountZ:                    uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 1024 (VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 384 (VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 1 (VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 256 (VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1024 (VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL (1000241000)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D175B40000000013 [Main depth image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    pipeline:                       VkPipeline = 612F93000000004E [Draw Generation Pipeline]

Thread 0, Frame 0:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    layout:                         VkPipelineLayout = 73A850000000004D [Draw Generation Pipeline Layout]
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 00000240C1E47068
        pDescriptorSets[0]:             const VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 0:
vkCmdDispatch(commandBuffer, groupCountX, groupCountY, groupCountZ) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    groupCountX:                    uint32_t = 1
    groupCountY:                    uint32_t = 1
    groupCountZ:                    uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F1C0
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F1C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 96 (VK_ACCESS_2_SHADER_READ_BIT | VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2 (VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1 (VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F1C0
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F1C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2 (VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1 (VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 0:
vkCmdBeginRendering(commandBuffer, pRenderingInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pRenderingInfo:                 const VkRenderingInfo* = 00000097A053F3F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_INFO (1000044000)
        pNext:                          const void* = NULL
        flags:                          VkRenderingFlags = 0
        renderArea:                     VkRect2D = 00000097A053F404:
            offset:                         VkOffset2D = 00000097A053F404:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 00000097A053F40C:
                width:                          uint32_t = 1080
                height:                         uint32_t = 720
        layerCount:                     uint32_t = 1
        viewMask:                       uint32_t = 0
        colorAttachmentCount:           uint32_t = 1
        pColorAttachments:              const VkRenderingAttachmentInfo* = 00000097A053F2F0
            pColorAttachments[0]:           const VkRenderingAttachmentInfo = 00000097A053F2F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO (1000044001)
                pNext:                          const void* = NULL
                imageView:                      VkImageView = DCC8FD0000000012
                imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                resolveMode:                    VkResolveModeFlagBits = 0 (VK_RESOLVE_MODE_NONE)
                resolveImageView:               VkImageView = 0000000000000000
                resolveImageLayout:             VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_LOAD (0)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                clearValue:                     VkClearValue = 00000097A053F324 (Union):
                    color:                          VkClearColorValue = 00000097A053F324 (Union):
                        float32:                        float[4] = 00000097A053F324
                            float32[0]:                     float = 0
                            float32[1]:                     float = 0
                            float32[2]:                     float = 0
                            float32[3]:                     float = 0
                        int32:                          int32_t[4] = 00000097A053F324
                            int32[0]:                       int32_t = 0
                            int32[1]:                       int32_t = 0
                            int32[2]:                       int32_t = 0
                            int32[3]:                       int32_t = 0
                        uint32:                         uint32_t[4] = 00000097A053F324
                            uint32[0]:                      uint32_t = 0
                            uint32[1]:                      uint32_t = 0
                            uint32[2]:                      uint32_t = 0
                            uint32[3]:                      uint32_t = 0
                    depthStencil:                   VkClearDepthStencilValue = 00000097A053F324:
                        depth:                          float = 0
                        stencil:                        uint32_t = 0
        pDepthAttachment:               const VkRenderingAttachmentInfo* = 00000097A053F360:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO (1000044001)
            pNext:                          const void* = NULL
            imageView:                      VkImageView = DD3A8A0000000015
            imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL (1000241000)
            resolveMode:                    VkResolveModeFlagBits = 0 (VK_RESOLVE_MODE_NONE)
            resolveImageView:               VkImageView = 0000000000000000
            resolveImageLayout:             VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
            storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
            clearValue:                     VkClearValue = 00000097A053F394 (Union):
                color:                          VkClearColorValue = 00000097A053F394 (Union):
                    float32:                        float[4] = 00000097A053F394
                        float32[0]:                     float = 0
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 0
                    int32:                          int32_t[4] = 00000097A053F394
                        int32[0]:                       int32_t = 0
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 0
                    uint32:                         uint32_t[4] = 00000097A053F394
                        uint32[0]:                      uint32_t = 0
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 0
                depthStencil:                   VkClearDepthStencilValue = 00000097A053F394:
                    depth:                          float = 0
                    stencil:                        uint32_t = 0
        pStencilAttachment:             const VkRenderingAttachmentInfo* = NULL

Thread 0, Frame 0:
vkCmdSetViewport(commandBuffer, firstViewport, viewportCount, pViewports) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    firstViewport:                  uint32_t = 0
    viewportCount:                  uint32_t = 1
    pViewports:                     const VkViewport* = 00000097A053F458
        pViewports[0]:                  const VkViewport = 00000097A053F458:
            x:                              float = 0
            y:                              float = 0
            width:                          float = 1080
            height:                         float = 720
            minDepth:                       float = 0
            maxDepth:                       float = 1

Thread 0, Frame 0:
vkCmdSetScissor(commandBuffer, firstScissor, scissorCount, pScissors) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    firstScissor:                   uint32_t = 0
    scissorCount:                   uint32_t = 1
    pScissors:                      const VkRect2D* = 00000097A053F488
        pScissors[0]:                   const VkRect2D = 00000097A053F488:
            offset:                         VkOffset2D = 00000097A053F488:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 00000097A053F490:
                width:                          uint32_t = 1080
                height:                         uint32_t = 720

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 72303F0000000052 [Opaque Pipeline]

Thread 0, Frame 0:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    layout:                         VkPipelineLayout = 7DDD740000000051 [Pipeline Layout]
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 2
    pDescriptorSets:                const VkDescriptorSet* = 00000097A053F4B8
        pDescriptorSets[0]:             const VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
        pDescriptorSets[1]:             const VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 0:
vkCmdBindIndexBuffer(commandBuffer, buffer, offset, indexType) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    buffer:                         VkBuffer = A7CC1E00000000D6
    offset:                         VkDeviceSize = 0
    indexType:                      VkIndexType = VK_INDEX_TYPE_UINT32 (1)

Thread 0, Frame 0:
vkCmdDrawIndexedIndirectCount(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
    offset:                         VkDeviceSize = 0
    countBuffer:                    VkBuffer = 8CC1D80000000045 [Count Buffer]
    countBufferOffset:              VkDeviceSize = 0
    maxDrawCount:                   uint32_t = 8192
    stride:                         uint32_t = 32

Thread 0, Frame 0:
vkCmdEndRendering(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 1024 (VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags2 = 384 (VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 2048 (VK_ACCESS_2_TRANSFER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 8192 (VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = F56C9B0000000004 [Swapchain Image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pBlitImageInfo:                 const VkBlitImageInfo2* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:                          const void* = NULL
        srcImage:                       VkImage = D5B26F0000000010 [Main render image]
        srcImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                       VkImage = F56C9B0000000004 [Swapchain Image]
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkImageBlit2* = 00000097A053F4B0
            pRegions[0]:                    const VkImageBlit2 = 00000097A053F4B0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:                          const void* = NULL
                srcSubresource:                 VkImageSubresourceLayers = 00000097A053F4C0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                srcOffsets:                     VkOffset3D[2] = 00000097A053F4D0
                    srcOffsets[0]:                  VkOffset3D = 00000097A053F4D0:
                        x:                              int32_t = 0
                        y:                              int32_t = 0
                        z:                              int32_t = 0
                    srcOffsets[1]:                  VkOffset3D = 00000097A053F4DC:
                        x:                              int32_t = 1080
                        y:                              int32_t = 720
                        z:                              int32_t = 1
                dstSubresource:                 VkImageSubresourceLayers = 00000097A053F4E8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                dstOffsets:                     VkOffset3D[2] = 00000097A053F4F8
                    dstOffsets[0]:                  VkOffset3D = 00000097A053F4F8:
                        x:                              int32_t = 0
                        y:                              int32_t = 0
                        z:                              int32_t = 0
                    dstOffsets[1]:                  VkOffset3D = 00000097A053F504:
                        x:                              int32_t = 1080
                        y:                              int32_t = 720
                        z:                              int32_t = 1
        filter:                         VkFilter = VK_FILTER_NEAREST (0)

Thread 0, Frame 0:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 8192 (VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT)
                dstAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = F56C9B0000000004 [Swapchain Image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0

Thread 0, Frame 0:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053F7F0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053F7F0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 1
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = 00000097A053F708
                pWaitSemaphoreInfos[0]:         const VkSemaphoreSubmitInfo = 00000097A053F708:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO (1000314005)
                    pNext:                          const void* = NULL
                    semaphore:                      VkSemaphore = CFEF35000000000A [Swapchain semaphore]
                    value:                          uint64_t = 0
                    stageMask:                      VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                    deviceIndex:                    uint32_t = 0
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053F758
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053F758:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DB91B0
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 1
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = 00000097A053F798
                pSignalSemaphoreInfos[0]:       const VkSemaphoreSubmitInfo = 00000097A053F798:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO (1000314005)
                    pNext:                          const void* = NULL
                    semaphore:                      VkSemaphore = EC4BEC000000000B [Render semaphore]
                    value:                          uint64_t = 0
                    stageMask:                      VkPipelineStageFlags2 = 32768 (VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT)
                    deviceIndex:                    uint32_t = 0
    fence:                          VkFence = 95A125000000001A

Thread 0, Frame 0:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD32A7E0
    pPresentInfo:                   const VkPresentInfoKHR* = 00000097A053F850:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 00000240C1DB1E70
            pWaitSemaphores[0]:             const VkSemaphore = EC4BEC000000000B [Render semaphore]
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 00000240BB93E080
            pSwapchains[0]:                 const VkSwapchainKHR = FA21A40000000003
        pImageIndices:                  const uint32_t* = 00000240BB93E0C8
            pImageIndices[0]:               const uint32_t = 0
        pResults:                       VkResult* = NULL

Thread 0, Frame 1:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D18
        pFences[0]:                     const VkFence = CB1C7C000000001B
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 1000000000

Thread 0, Frame 1:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    swapchain:                      VkSwapchainKHR = FA21A40000000003
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = E88693000000000C [Swapchain semaphore]
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 1

Thread 0, Frame 1:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D18
        pFences[0]:                     const VkFence = CB1C7C000000001B

Thread 0, Frame 1:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 1:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053F938:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 1:
vkCmdUpdateBuffer(commandBuffer, dstBuffer, dstOffset, dataSize, pData) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    dstBuffer:                      VkBuffer = 6612E40000000041 [Frame Uniforms]
    dstOffset:                      VkDeviceSize = 0
    dataSize:                       VkDeviceSize = 272
    pData:                          const void* = 00000240C1E47D20

Thread 0, Frame 1:
vkCmdFillBuffer(commandBuffer, dstBuffer, dstOffset, size, data) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    dstBuffer:                      VkBuffer = 8CC1D80000000045 [Count Buffer]
    dstOffset:                      VkDeviceSize = 0
    size:                           VkDeviceSize = 32
    data:                           uint32_t = 0

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F8F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F880
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F880:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2184 (VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT | VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 6612E40000000041 [Frame Uniforms]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F8F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F880
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F880:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 96 (VK_ACCESS_2_SHADER_READ_BIT | VK_ACCESS_2_SHADER_WRITE_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 0 (VK_PIPELINE_STAGE_2_NONE)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 1:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    pipeline:                       VkPipeline = B991FA0000000024

Thread 0, Frame 1:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    layout:                         VkPipelineLayout = A7C5450000000023
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 00000240BB93E258
        pDescriptorSets[0]:             const VkDescriptorSet = AB64DE0000000020
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 1:
vkCmdPushConstants(commandBuffer, layout, stageFlags, offset, size, pValues) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    layout:                         VkPipelineLayout = A7C5450000000023
    stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
    offset:                         uint32_t = 0
    size:                           uint32_t = 64
    pValues:                        const void* = 00000097A053F650

Thread 0, Frame 1:
vkCmdDispatch(commandBuffer, groupCountX, groupCountY, groupCountZ) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    groupCountX:                    uint32_t = 68
    groupCountY:                    uint32_t = 45
    groupCountZ:                    uint32_t = 1

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 1024 (VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 384 (VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 1 (VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 256 (VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1024 (VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL (1000241000)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D175B40000000013 [Main depth image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 1:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    pipeline:                       VkPipeline = 612F93000000004E [Draw Generation Pipeline]

Thread 0, Frame 1:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    layout:                         VkPipelineLayout = 73A850000000004D [Draw Generation Pipeline Layout]
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 00000240C1E47068
        pDescriptorSets[0]:             const VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 1:
vkCmdDispatch(commandBuffer, groupCountX, groupCountY, groupCountZ) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    groupCountX:                    uint32_t = 1
    groupCountY:                    uint32_t = 1
    groupCountZ:                    uint32_t = 1

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F1C0
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F1C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 96 (VK_ACCESS_2_SHADER_READ_BIT | VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2 (VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1 (VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F1C0
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F1C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2 (VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1 (VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 1:
vkCmdBeginRendering(commandBuffer, pRenderingInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pRenderingInfo:                 const VkRenderingInfo* = 00000097A053F3F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_INFO (1000044000)
        pNext:                          const void* = NULL
        flags:                          VkRenderingFlags = 0
        renderArea:                     VkRect2D = 00000097A053F404:
            offset:                         VkOffset2D = 00000097A053F404:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 00000097A053F40C:
                width:                          uint32_t = 1080
                height:                         uint32_t = 720
        layerCount:                     uint32_t = 1
        viewMask:                       uint32_t = 0
        colorAttachmentCount:           uint32_t = 1
        pColorAttachments:              const VkRenderingAttachmentInfo* = 00000097A053F2F0
            pColorAttachments[0]:           const VkRenderingAttachmentInfo = 00000097A053F2F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO (1000044001)
                pNext:                          const void* = NULL
                imageView:                      VkImageView = DCC8FD0000000012
                imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                resolveMode:                    VkResolveModeFlagBits = 0 (VK_RESOLVE_MODE_NONE)
                resolveImageView:               VkImageView = 0000000000000000
                resolveImageLayout:             VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_LOAD (0)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                clearValue:                     VkClearValue = 00000097A053F324 (Union):
                    color:                          VkClearColorValue = 00000097A053F324 (Union):
                        float32:                        float[4] = 00000097A053F324
                            float32[0]:                     float = 0
                            float32[1]:                     float = 0
                            float32[2]:                     float = 0
                            float32[3]:                     float = 0
                        int32:                          int32_t[4] = 00000097A053F324
                            int32[0]:                       int32_t = 0
                            int32[1]:                       int32_t = 0
                            int32[2]:                       int32_t = 0
                            int32[3]:                       int32_t = 0
                        uint32:                         uint32_t[4] = 00000097A053F324
                            uint32[0]:                      uint32_t = 0
                            uint32[1]:                      uint32_t = 0
                            uint32[2]:                      uint32_t = 0
                            uint32[3]:                      uint32_t = 0
                    depthStencil:                   VkClearDepthStencilValue = 00000097A053F324:
                        depth:                          float = 0
                        stencil:                        uint32_t = 0
        pDepthAttachment:               const VkRenderingAttachmentInfo* = 00000097A053F360:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO (1000044001)
            pNext:                          const void* = NULL
            imageView:                      VkImageView = DD3A8A0000000015
            imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL (1000241000)
            resolveMode:                    VkResolveModeFlagBits = 0 (VK_RESOLVE_MODE_NONE)
            resolveImageView:               VkImageView = 0000000000000000
            resolveImageLayout:             VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
            storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
            clearValue:                     VkClearValue = 00000097A053F394 (Union):
                color:                          VkClearColorValue = 00000097A053F394 (Union):
                    float32:                        float[4] = 00000097A053F394
                        float32[0]:                     float = 0
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 0
                    int32:                          int32_t[4] = 00000097A053F394
                        int32[0]:                       int32_t = 0
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 0
                    uint32:                         uint32_t[4] = 00000097A053F394
                        uint32[0]:                      uint32_t = 0
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 0
                depthStencil:                   VkClearDepthStencilValue = 00000097A053F394:
                    depth:                          float = 0
                    stencil:                        uint32_t = 0
        pStencilAttachment:             const VkRenderingAttachmentInfo* = NULL

Thread 0, Frame 1:
vkCmdSetViewport(commandBuffer, firstViewport, viewportCount, pViewports) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    firstViewport:                  uint32_t = 0
    viewportCount:                  uint32_t = 1
    pViewports:                     const VkViewport* = 00000097A053F458
        pViewports[0]:                  const VkViewport = 00000097A053F458:
            x:                              float = 0
            y:                              float = 0
            width:                          float = 1080
            height:                         float = 720
            minDepth:                       float = 0
            maxDepth:                       float = 1

Thread 0, Frame 1:
vkCmdSetScissor(commandBuffer, firstScissor, scissorCount, pScissors) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    firstScissor:                   uint32_t = 0
    scissorCount:                   uint32_t = 1
    pScissors:                      const VkRect2D* = 00000097A053F488
        pScissors[0]:                   const VkRect2D = 00000097A053F488:
            offset:                         VkOffset2D = 00000097A053F488:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 00000097A053F490:
                width:                          uint32_t = 1080
                height:                         uint32_t = 720

Thread 0, Frame 1:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 72303F0000000052 [Opaque Pipeline]

Thread 0, Frame 1:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    layout:                         VkPipelineLayout = 7DDD740000000051 [Pipeline Layout]
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 2
    pDescriptorSets:                const VkDescriptorSet* = 00000097A053F4B8
        pDescriptorSets[0]:             const VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
        pDescriptorSets[1]:             const VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 1:
vkCmdBindIndexBuffer(commandBuffer, buffer, offset, indexType) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    buffer:                         VkBuffer = A7CC1E00000000D6
    offset:                         VkDeviceSize = 0
    indexType:                      VkIndexType = VK_INDEX_TYPE_UINT32 (1)

Thread 0, Frame 1:
vkCmdDrawIndexedIndirectCount(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
    offset:                         VkDeviceSize = 0
    countBuffer:                    VkBuffer = 8CC1D80000000045 [Count Buffer]
    countBufferOffset:              VkDeviceSize = 0
    maxDrawCount:                   uint32_t = 8192
    stride:                         uint32_t = 32

Thread 0, Frame 1:
vkCmdEndRendering(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 1024 (VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags2 = 384 (VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 2048 (VK_ACCESS_2_TRANSFER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 8192 (VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = E7F79A0000000005 [Swapchain Image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 1:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pBlitImageInfo:                 const VkBlitImageInfo2* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:                          const void* = NULL
        srcImage:                       VkImage = D5B26F0000000010 [Main render image]
        srcImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                       VkImage = E7F79A0000000005 [Swapchain Image]
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkImageBlit2* = 00000097A053F4B0
            pRegions[0]:                    const VkImageBlit2 = 00000097A053F4B0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:                          const void* = NULL
                srcSubresource:                 VkImageSubresourceLayers = 00000097A053F4C0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                srcOffsets:                     VkOffset3D[2] = 00000097A053F4D0
                    srcOffsets[0]:                  VkOffset3D = 00000097A053F4D0:
                        x:                              int32_t = 0
                        y:                              int32_t = 0
                        z:                              int32_t = 0
                    srcOffsets[1]:                  VkOffset3D = 00000097A053F4DC:
                        x:                              int32_t = 1080
                        y:                              int32_t = 720
                        z:                              int32_t = 1
                dstSubresource:                 VkImageSubresourceLayers = 00000097A053F4E8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                dstOffsets:                     VkOffset3D[2] = 00000097A053F4F8
                    dstOffsets[0]:                  VkOffset3D = 00000097A053F4F8:
                        x:                              int32_t = 0
                        y:                              int32_t = 0
                        z:                              int32_t = 0
                    dstOffsets[1]:                  VkOffset3D = 00000097A053F504:
                        x:                              int32_t = 1080
                        y:                              int32_t = 720
                        z:                              int32_t = 1
        filter:                         VkFilter = VK_FILTER_NEAREST (0)

Thread 0, Frame 1:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 8192 (VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT)
                dstAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = E7F79A0000000005 [Swapchain Image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 1:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0

Thread 0, Frame 1:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053F7F0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053F7F0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 1
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = 00000097A053F708
                pWaitSemaphoreInfos[0]:         const VkSemaphoreSubmitInfo = 00000097A053F708:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO (1000314005)
                    pNext:                          const void* = NULL
                    semaphore:                      VkSemaphore = E88693000000000C [Swapchain semaphore]
                    value:                          uint64_t = 0
                    stageMask:                      VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                    deviceIndex:                    uint32_t = 0
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053F758
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053F758:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DBC4E0
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 1
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = 00000097A053F798
                pSignalSemaphoreInfos[0]:       const VkSemaphoreSubmitInfo = 00000097A053F798:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO (1000314005)
                    pNext:                          const void* = NULL
                    semaphore:                      VkSemaphore = CAD092000000000D [Render semaphore]
                    value:                          uint64_t = 0
                    stageMask:                      VkPipelineStageFlags2 = 32768 (VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT)
                    deviceIndex:                    uint32_t = 0
    fence:                          VkFence = CB1C7C000000001B

Thread 0, Frame 1:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD32A7E0
    pPresentInfo:                   const VkPresentInfoKHR* = 00000097A053F850:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 00000240C1DB1E78
            pWaitSemaphores[0]:             const VkSemaphore = CAD092000000000D [Render semaphore]
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 00000240BB93E080
            pSwapchains[0]:                 const VkSwapchainKHR = FA21A40000000003
        pImageIndices:                  const uint32_t* = 00000240BB93E0C8
            pImageIndices[0]:               const uint32_t = 1
        pResults:                       VkResult* = NULL

Thread 0, Frame 2:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D20
        pFences[0]:                     const VkFence = 2CFBA2000000001C
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 1000000000

Thread 0, Frame 2:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    swapchain:                      VkSwapchainKHR = FA21A40000000003
    timeout:                        uint64_t = 18446744073709551615
    semaphore:                      VkSemaphore = 967DD1000000000E [Swapchain semaphore]
    fence:                          VkFence = 0000000000000000
    pImageIndex:                    uint32_t* = 2

Thread 0, Frame 2:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D20
        pFences[0]:                     const VkFence = 2CFBA2000000001C

Thread 0, Frame 2:
vkResetCommandBuffer(commandBuffer, flags) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    flags:                          VkCommandBufferResetFlags = 0

Thread 0, Frame 2:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 00000097A053F938:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 2:
vkCmdUpdateBuffer(commandBuffer, dstBuffer, dstOffset, dataSize, pData) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    dstBuffer:                      VkBuffer = 6612E40000000041 [Frame Uniforms]
    dstOffset:                      VkDeviceSize = 0
    dataSize:                       VkDeviceSize = 272
    pData:                          const void* = 00000240C1E47D20

Thread 0, Frame 2:
vkCmdFillBuffer(commandBuffer, dstBuffer, dstOffset, size, data) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    dstBuffer:                      VkBuffer = 8CC1D80000000045 [Count Buffer]
    dstOffset:                      VkDeviceSize = 0
    size:                           VkDeviceSize = 32
    data:                           uint32_t = 0

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F8F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F880
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F880:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2184 (VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT | VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 32 (VK_ACCESS_2_SHADER_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 6612E40000000041 [Frame Uniforms]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F8F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F880
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F880:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 96 (VK_ACCESS_2_SHADER_READ_BIT | VK_ACCESS_2_SHADER_WRITE_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 0 (VK_PIPELINE_STAGE_2_NONE)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 2:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    pipeline:                       VkPipeline = B991FA0000000024

Thread 0, Frame 2:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    layout:                         VkPipelineLayout = A7C5450000000023
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 00000240BB93E258
        pDescriptorSets[0]:             const VkDescriptorSet = AB64DE0000000020
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 2:
vkCmdPushConstants(commandBuffer, layout, stageFlags, offset, size, pValues) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    layout:                         VkPipelineLayout = A7C5450000000023
    stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
    offset:                         uint32_t = 0
    size:                           uint32_t = 64
    pValues:                        const void* = 00000097A053F650

Thread 0, Frame 2:
vkCmdDispatch(commandBuffer, groupCountX, groupCountY, groupCountZ) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    groupCountX:                    uint32_t = 68
    groupCountY:                    uint32_t = 45
    groupCountZ:                    uint32_t = 1

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 1024 (VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 384 (VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 1 (VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 256 (VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1024 (VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL (1000241000)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D175B40000000013 [Main depth image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 2:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    pipeline:                       VkPipeline = 612F93000000004E [Draw Generation Pipeline]

Thread 0, Frame 2:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_COMPUTE (1)
    layout:                         VkPipelineLayout = 73A850000000004D [Draw Generation Pipeline Layout]
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 00000240C1E47068
        pDescriptorSets[0]:             const VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 2:
vkCmdDispatch(commandBuffer, groupCountX, groupCountY, groupCountZ) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    groupCountX:                    uint32_t = 1
    groupCountY:                    uint32_t = 1
    groupCountZ:                    uint32_t = 1

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F1C0
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F1C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 96 (VK_ACCESS_2_SHADER_READ_BIT | VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2 (VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1 (VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 8CC1D80000000045 [Count Buffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F230:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 1
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = 00000097A053F1C0
            pBufferMemoryBarriers[0]:       const VkBufferMemoryBarrier2 = 00000097A053F1C0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 (1000314001)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 2048 (VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 64 (VK_ACCESS_2_SHADER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 2 (VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT)
                dstAccessMask:                  VkAccessFlags2 = 1 (VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
                offset:                         VkDeviceSize = 0
                size:                           VkDeviceSize = 18446744073709551615
        imageMemoryBarrierCount:        uint32_t = 0
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = NULL

Thread 0, Frame 2:
vkCmdBeginRendering(commandBuffer, pRenderingInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pRenderingInfo:                 const VkRenderingInfo* = 00000097A053F3F0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_INFO (1000044000)
        pNext:                          const void* = NULL
        flags:                          VkRenderingFlags = 0
        renderArea:                     VkRect2D = 00000097A053F404:
            offset:                         VkOffset2D = 00000097A053F404:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 00000097A053F40C:
                width:                          uint32_t = 1080
                height:                         uint32_t = 720
        layerCount:                     uint32_t = 1
        viewMask:                       uint32_t = 0
        colorAttachmentCount:           uint32_t = 1
        pColorAttachments:              const VkRenderingAttachmentInfo* = 00000097A053F2F0
            pColorAttachments[0]:           const VkRenderingAttachmentInfo = 00000097A053F2F0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO (1000044001)
                pNext:                          const void* = NULL
                imageView:                      VkImageView = DCC8FD0000000012
                imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                resolveMode:                    VkResolveModeFlagBits = 0 (VK_RESOLVE_MODE_NONE)
                resolveImageView:               VkImageView = 0000000000000000
                resolveImageLayout:             VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_LOAD (0)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                clearValue:                     VkClearValue = 00000097A053F324 (Union):
                    color:                          VkClearColorValue = 00000097A053F324 (Union):
                        float32:                        float[4] = 00000097A053F324
                            float32[0]:                     float = 0
                            float32[1]:                     float = 0
                            float32[2]:                     float = 0
                            float32[3]:                     float = 0
                        int32:                          int32_t[4] = 00000097A053F324
                            int32[0]:                       int32_t = 0
                            int32[1]:                       int32_t = 0
                            int32[2]:                       int32_t = 0
                            int32[3]:                       int32_t = 0
                        uint32:                         uint32_t[4] = 00000097A053F324
                            uint32[0]:                      uint32_t = 0
                            uint32[1]:                      uint32_t = 0
                            uint32[2]:                      uint32_t = 0
                            uint32[3]:                      uint32_t = 0
                    depthStencil:                   VkClearDepthStencilValue = 00000097A053F324:
                        depth:                          float = 0
                        stencil:                        uint32_t = 0
        pDepthAttachment:               const VkRenderingAttachmentInfo* = 00000097A053F360:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO (1000044001)
            pNext:                          const void* = NULL
            imageView:                      VkImageView = DD3A8A0000000015
            imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL (1000241000)
            resolveMode:                    VkResolveModeFlagBits = 0 (VK_RESOLVE_MODE_NONE)
            resolveImageView:               VkImageView = 0000000000000000
            resolveImageLayout:             VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
            storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
            clearValue:                     VkClearValue = 00000097A053F394 (Union):
                color:                          VkClearColorValue = 00000097A053F394 (Union):
                    float32:                        float[4] = 00000097A053F394
                        float32[0]:                     float = 0
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 0
                    int32:                          int32_t[4] = 00000097A053F394
                        int32[0]:                       int32_t = 0
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 0
                    uint32:                         uint32_t[4] = 00000097A053F394
                        uint32[0]:                      uint32_t = 0
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 0
                depthStencil:                   VkClearDepthStencilValue = 00000097A053F394:
                    depth:                          float = 0
                    stencil:                        uint32_t = 0
        pStencilAttachment:             const VkRenderingAttachmentInfo* = NULL

Thread 0, Frame 2:
vkCmdSetViewport(commandBuffer, firstViewport, viewportCount, pViewports) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    firstViewport:                  uint32_t = 0
    viewportCount:                  uint32_t = 1
    pViewports:                     const VkViewport* = 00000097A053F458
        pViewports[0]:                  const VkViewport = 00000097A053F458:
            x:                              float = 0
            y:                              float = 0
            width:                          float = 1080
            height:                         float = 720
            minDepth:                       float = 0
            maxDepth:                       float = 1

Thread 0, Frame 2:
vkCmdSetScissor(commandBuffer, firstScissor, scissorCount, pScissors) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    firstScissor:                   uint32_t = 0
    scissorCount:                   uint32_t = 1
    pScissors:                      const VkRect2D* = 00000097A053F488
        pScissors[0]:                   const VkRect2D = 00000097A053F488:
            offset:                         VkOffset2D = 00000097A053F488:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 00000097A053F490:
                width:                          uint32_t = 1080
                height:                         uint32_t = 720

Thread 0, Frame 2:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 72303F0000000052 [Opaque Pipeline]

Thread 0, Frame 2:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    layout:                         VkPipelineLayout = 7DDD740000000051 [Pipeline Layout]
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 2
    pDescriptorSets:                const VkDescriptorSet* = 00000097A053F4B8
        pDescriptorSets[0]:             const VkDescriptorSet = 56C9BD0000000040 [Scene Descriptor Set]
        pDescriptorSets[1]:             const VkDescriptorSet = 67022E000000004B [MaterialDescriptorSet]
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 2:
vkCmdBindIndexBuffer(commandBuffer, buffer, offset, indexType) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    buffer:                         VkBuffer = A7CC1E00000000D6
    offset:                         VkDeviceSize = 0
    indexType:                      VkIndexType = VK_INDEX_TYPE_UINT32 (1)

Thread 0, Frame 2:
vkCmdDrawIndexedIndirectCount(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    buffer:                         VkBuffer = 40B43C0000000049 [MaterialIndirectDrawCommandBuffer]
    offset:                         VkDeviceSize = 0
    countBuffer:                    VkBuffer = 8CC1D80000000045 [Count Buffer]
    countBufferOffset:              VkDeviceSize = 0
    maxDrawCount:                   uint32_t = 8192
    stride:                         uint32_t = 32

Thread 0, Frame 2:
vkCmdEndRendering(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 1024 (VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags2 = 384 (VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 2048 (VK_ACCESS_2_TRANSFER_READ_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = D5B26F0000000010 [Main render image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 8192 (VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT)
                srcAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                dstStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                dstAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = F443490000000006 [Swapchain Image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 2:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pBlitImageInfo:                 const VkBlitImageInfo2* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:                          const void* = NULL
        srcImage:                       VkImage = D5B26F0000000010 [Main render image]
        srcImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                       VkImage = F443490000000006 [Swapchain Image]
        dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:                    uint32_t = 1
        pRegions:                       const VkImageBlit2* = 00000097A053F4B0
            pRegions[0]:                    const VkImageBlit2 = 00000097A053F4B0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:                          const void* = NULL
                srcSubresource:                 VkImageSubresourceLayers = 00000097A053F4C0:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                srcOffsets:                     VkOffset3D[2] = 00000097A053F4D0
                    srcOffsets[0]:                  VkOffset3D = 00000097A053F4D0:
                        x:                              int32_t = 0
                        y:                              int32_t = 0
                        z:                              int32_t = 0
                    srcOffsets[1]:                  VkOffset3D = 00000097A053F4DC:
                        x:                              int32_t = 1080
                        y:                              int32_t = 720
                        z:                              int32_t = 1
                dstSubresource:                 VkImageSubresourceLayers = 00000097A053F4E8:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:                       uint32_t = 0
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1
                dstOffsets:                     VkOffset3D[2] = 00000097A053F4F8
                    dstOffsets[0]:                  VkOffset3D = 00000097A053F4F8:
                        x:                              int32_t = 0
                        y:                              int32_t = 0
                        z:                              int32_t = 0
                    dstOffsets[1]:                  VkOffset3D = 00000097A053F504:
                        x:                              int32_t = 1080
                        y:                              int32_t = 720
                        z:                              int32_t = 1
        filter:                         VkFilter = VK_FILTER_NEAREST (0)

Thread 0, Frame 2:
vkCmdPipelineBarrier2(commandBuffer, pDependencyInfo) returns void:
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
    pDependencyInfo:                const VkDependencyInfo* = 00000097A053F560:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEPENDENCY_INFO (1000314003)
        pNext:                          const void* = NULL
        dependencyFlags:                VkDependencyFlags = 0
        memoryBarrierCount:             uint32_t = 0
        pMemoryBarriers:                const VkMemoryBarrier2* = NULL
        bufferMemoryBarrierCount:       uint32_t = 0
        pBufferMemoryBarriers:          const VkBufferMemoryBarrier2* = NULL
        imageMemoryBarrierCount:        uint32_t = 1
        pImageMemoryBarriers:           const VkImageMemoryBarrier2* = 00000097A053F4E0
            pImageMemoryBarriers[0]:        const VkImageMemoryBarrier2 = 00000097A053F4E0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 (1000314002)
                pNext:                          const void* = NULL
                srcStageMask:                   VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                srcAccessMask:                  VkAccessFlags2 = 4096 (VK_ACCESS_2_TRANSFER_WRITE_BIT)
                dstStageMask:                   VkPipelineStageFlags2 = 8192 (VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT)
                dstAccessMask:                  VkAccessFlags2 = 0 (VK_ACCESS_2_NONE)
                oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
                newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
                srcQueueFamilyIndex:            uint32_t = 4294967295
                dstQueueFamilyIndex:            uint32_t = 4294967295
                image:                          VkImage = F443490000000006 [Swapchain Image]
                subresourceRange:               VkImageSubresourceRange = 00000097A053F528:
                    aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    baseMipLevel:                   uint32_t = 0
                    levelCount:                     uint32_t = 1
                    baseArrayLayer:                 uint32_t = 0
                    layerCount:                     uint32_t = 1

Thread 0, Frame 2:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820

Thread 0, Frame 2:
vkQueueSubmit2(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD1E01F0
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo2* = 00000097A053F7F0
        pSubmits[0]:                    const VkSubmitInfo2 = 00000097A053F7F0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO_2 (1000314004)
            pNext:                          const void* = NULL
            flags:                          VkSubmitFlags = 0
            waitSemaphoreInfoCount:         uint32_t = 1
            pWaitSemaphoreInfos:            const VkSemaphoreSubmitInfo* = 00000097A053F708
                pWaitSemaphoreInfos[0]:         const VkSemaphoreSubmitInfo = 00000097A053F708:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO (1000314005)
                    pNext:                          const void* = NULL
                    semaphore:                      VkSemaphore = 967DD1000000000E [Swapchain semaphore]
                    value:                          uint64_t = 0
                    stageMask:                      VkPipelineStageFlags2 = 4096 (VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT)
                    deviceIndex:                    uint32_t = 0
            commandBufferInfoCount:         uint32_t = 1
            pCommandBufferInfos:            const VkCommandBufferSubmitInfo* = 00000097A053F758
                pCommandBufferInfos[0]:         const VkCommandBufferSubmitInfo = 00000097A053F758:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO (1000314006)
                    pNext:                          const void* = NULL
                    commandBuffer:                  VkCommandBuffer = 00000240C1DC1820
                    deviceMask:                     uint32_t = 0
            signalSemaphoreInfoCount:       uint32_t = 1
            pSignalSemaphoreInfos:          const VkSemaphoreSubmitInfo* = 00000097A053F798
                pSignalSemaphoreInfos[0]:       const VkSemaphoreSubmitInfo = 00000097A053F798:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO (1000314005)
                    pNext:                          const void* = NULL
                    semaphore:                      VkSemaphore = E7E6D0000000000F [Render semaphore]
                    value:                          uint64_t = 0
                    stageMask:                      VkPipelineStageFlags2 = 32768 (VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT)
                    deviceIndex:                    uint32_t = 0
    fence:                          VkFence = 2CFBA2000000001C

Thread 0, Frame 2:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 00000240BD32A7E0
    pPresentInfo:                   const VkPresentInfoKHR* = 00000097A053F850:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:                          const void* = NULL
        waitSemaphoreCount:             uint32_t = 1
        pWaitSemaphores:                const VkSemaphore* = 00000240C1DB1E80
            pWaitSemaphores[0]:             const VkSemaphore = E7E6D0000000000F [Render semaphore]
        swapchainCount:                 uint32_t = 1
        pSwapchains:                    const VkSwapchainKHR* = 00000240BB93E080
            pSwapchains[0]:                 const VkSwapchainKHR = FA21A40000000003
        pImageIndices:                  const uint32_t* = 00000240BB93E0C8
            pImageIndices[0]:               const uint32_t = 2
        pResults:                       VkResult* = NULL

Thread 0, Frame 3:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                         VkDevice = 00000240BCD610F0
    fenceCount:                     uint32_t = 1
    pFences:                        const VkFence* = 00000240C1DB2D10
        pFences[0]:                     const VkFence = 95A125000000001A
    waitAll:                        VkBool32 = 1
    timeout:                        uint64_t = 1000000000

